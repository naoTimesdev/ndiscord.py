msgid ""
msgstr ""
"Project-Id-Version: ndiscordpy\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-09-20 11:18+0800\n"
"PO-Revision-Date: 2021-09-20 09:40\n"
"Last-Translator: \n"
"Language-Team: Indonesian\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Crowdin-Project: ndiscordpy\n"
"X-Crowdin-Project-ID: 476871\n"
"X-Crowdin-Language: id\n"
"X-Crowdin-File: /docs/_build/locale/api.pot\n"
"X-Crowdin-File-ID: 19\n"
"Language: id_ID\n"

#: ../../api.rst:4
msgid "API Reference"
msgstr "Referensi API"

#: ../../api.rst:6
msgid "The following section outlines the API of ndiscord.py."
msgstr "Laman ini akan memberikan garis besar untuk API ndiscord.py."

#: ../../api.rst:10
msgid "This module uses the Python logging module to log diagnostic and errors in an output independent way.  If the logging module is not configured, these logs will not be output anywhere.  See :ref:`logging_setup` for more information on how to set up and use the logging module with ndiscord.py."
msgstr "Modul ini menggunakan modul logging Python untuk mensimpan diagnosa dan error tanpa membuat output utama berantakan. Jika modul logging tidak diatur, maka anda tidak dapat melihat hal-hal tersebut di manapun. Mohon kunjungi :ref:`logging_setup` untuk info lebih lanjut untuk menyiapkan sistem logging dan menggunakannya dengan ndiscord.py."

#: ../../api.rst:17
msgid "Version Related Info"
msgstr "Informasi Terkait Versi"

#: ../../api.rst:19
msgid "There are two main ways to query version information about the library. For guarantees, check :ref:`version_guarantees`."
msgstr "Ada dua cara melihat informasi versi modul ini. Untuk jaminan, periksa :ref:`version_guarantees`."

#: ../../api.rst:23
msgid "A named tuple that is similar to :obj:`py:sys.version_info`."
msgstr "Sebuah named tuple yang mirip dengan :obj:`py:sys.version_info`."

#: ../../api.rst:25
msgid "Just like :obj:`py:sys.version_info` the valid values for ``releaselevel`` are 'alpha', 'beta', 'candidate' and 'final'."
msgstr "Seperti :obj:`py:sys.version_info` hal yang valid untuk ``releaselevel`` adalah 'alpha', 'beta', 'candidate' dan 'final'."

#: ../../api.rst:30
msgid "A string representation of the version. e.g. ``'1.0.0rc1'``. This is based off of :pep:`440`."
msgstr "Sebuah representasi string untuk versi, contohnya ``1.0.0rc1``. Ini mengikuti saran dari :pep:`440`."

#: ../../api.rst:34
msgid "Clients"
msgstr "Clients"

#: ../../api.rst:37
msgid "Client"
msgstr "Client"

#: ../../../discord/client.py:docstring of discord.client.Client:1
msgid "Represents a client connection that connects to Discord. This class is used to interact with the Discord WebSocket and API."
msgstr "Merepresentasikan koneksi klien dengan Discord. Kelas ini dipakai untuk berinteraksi dengan WebSocket dan API Discord."

#: ../../../discord/client.py:docstring of discord.client.Client:4
msgid "A number of options can be passed to the :class:`Client`."
msgstr "Berbagai macam opsi dapat diberikan ke :class:`Client`."

#: ../../../discord/client.py:docstring of discord.client.Client:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:0
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:0
#: ../../../discord/client.py:docstring of discord.client.Client.login:0
#: ../../../discord/client.py:docstring of discord.client.Client.connect:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:0
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_application:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.add_application:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_interaction:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.register_application:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.remove_application:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.move_to:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_state_update:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_server_update:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.disconnect:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:0
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:0
#: ../../../discord/opus.py:docstring of discord.opus.load_opus:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/utils.py:docstring of discord.utils.find:0
#: ../../../discord/utils.py:docstring of discord.utils.get:0
#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:0
#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:0
#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:0
#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:0
#: ../../../discord/utils.py:docstring of discord.utils.format_dt:0
#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/message.py:docstring of discord.message.Message.delete:0
#: ../../../discord/message.py:docstring of discord.message.Message.edit:0
#: ../../../discord/message.py:docstring of discord.message.Message.pin:0
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:0
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:0
#: ../../../discord/member.py:docstring of discord.member.Member.edit:0
#: ../../../discord/member.py:docstring of discord.member.Member.move_to:0
#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:0
#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/member.py:docstring of discord.member.Member.get_role:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:0
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/role.py:docstring of discord.role.Role.edit:0
#: ../../../discord/role.py:docstring of discord.role.Role.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:0
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:0
#: ../../../discord/template.py:docstring of discord.template.Template.edit:0
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.from_dict:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_footer:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_image:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_thumbnail:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_field:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:0
#: ../../../discord/message.py:docstring of discord.message.Message.delete:0
#: ../../../discord/message.py:docstring of discord.message.Message.pin:0
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:0
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:0
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:0
#: ../../../discord/colour.py:docstring of discord.colour.Colour.random:0
#: ../../../discord/activity.py:docstring of discord.activity.Game:0
#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.update:0
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:0
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.update:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:0
#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:0
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:0
msgid "Parameters"
msgstr "Parameter"

#: ../../../discord/client.py:docstring of discord.client.Client:6
msgid "The maximum number of messages to store in the internal message cache. This defaults to ``1000``. Passing in ``None`` disables the message cache.  .. versionchanged:: 1.3     Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:6
msgid "The maximum number of messages to store in the internal message cache. This defaults to ``1000``. Passing in ``None`` disables the message cache."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:9
msgid "Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:12
msgid "The :class:`asyncio.AbstractEventLoop` to use for asynchronous operations. Defaults to ``None``, in which case the default event loop is used via :func:`asyncio.get_event_loop()`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:16
msgid "The connector to use for connection pooling."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:18
msgid "Proxy URL."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:20
msgid "An object that represents proxy HTTP Basic Authorization."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:22
msgid "Integer starting at ``0`` and less than :attr:`.shard_count`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:24
msgid "The total number of shards."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:26
#: ../../../discord/client.py:docstring of discord.Client.application_id:1
msgid "The client's application ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:28
msgid "The intents that you want to enable for the session. This is a way of disabling and enabling certain gateway events from triggering and being sent. If not given, defaults to a regularly constructed :class:`Intents` class.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:28
msgid "The intents that you want to enable for the session. This is a way of disabling and enabling certain gateway events from triggering and being sent. If not given, defaults to a regularly constructed :class:`Intents` class."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:34
msgid "Allows for finer control over how the library caches members. If not given, defaults to cache as much as possible with the currently selected intents.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:34
msgid "Allows for finer control over how the library caches members. If not given, defaults to cache as much as possible with the currently selected intents."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:40
msgid "Indicates if :func:`.on_ready` should be delayed to chunk all guilds at start-up if necessary. This operation is incredibly slow for large amounts of guilds. The default is ``True`` if :attr:`Intents.members` is ``True``.  .. versionadded:: 1.5"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:40
msgid "Indicates if :func:`.on_ready` should be delayed to chunk all guilds at start-up if necessary. This operation is incredibly slow for large amounts of guilds. The default is ``True`` if :attr:`Intents.members` is ``True``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:47
msgid "A status to start your presence with upon logging on to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:49
msgid "An activity to start your presence with upon logging on to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:51
msgid "Control how the client handles mentions by default on every message sent.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:51
msgid "Control how the client handles mentions by default on every message sent."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:55
msgid "The maximum numbers of seconds before timing out and restarting the WebSocket in the case of not receiving a HEARTBEAT_ACK. Useful if processing the initial packets take too long to the point of disconnecting you. The default timeout is 60 seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:60
msgid "The maximum number of seconds to wait for the GUILD_CREATE stream to end before preparing the member cache and firing READY. The default timeout is 2 seconds.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:60
msgid "The maximum number of seconds to wait for the GUILD_CREATE stream to end before preparing the member cache and firing READY. The default timeout is 2 seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:65
msgid "Whether to assume the system clock is unsynced. This applies to the ratelimit handling code. If this is set to ``True``, the default, then the library uses the time to reset a rate limit bucket given by Discord. If this is ``False`` then your system clock is used to calculate how long to sleep for. If this is set to ``False`` it is recommended to sync your system clock to Google's NTP server.  .. versionadded:: 1.3"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:65
msgid "Whether to assume the system clock is unsynced. This applies to the ratelimit handling code. If this is set to ``True``, the default, then the library uses the time to reset a rate limit bucket given by Discord. If this is ``False`` then your system clock is used to calculate how long to sleep for. If this is set to ``False`` it is recommended to sync your system clock to Google's NTP server."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:73
msgid "Whether to enable events that are useful only for debugging gateway related information.  Right now this involves :func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is ``False`` then those events will not be dispatched (due to performance considerations). To enable these events, this must be set to ``True``. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:73
msgid "Whether to enable events that are useful only for debugging gateway related information."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:75
msgid "Right now this involves :func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is ``False`` then those events will not be dispatched (due to performance considerations). To enable these events, this must be set to ``True``. Defaults to ``False``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:84
msgid "The websocket gateway the client is currently connected to. Could be ``None``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:88
msgid "The event loop that the client uses for asynchronous operations."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client:0
#: ../../../discord/client.py:docstring of discord.Client.latency:0
#: ../../../discord/client.py:docstring of discord.Client.user:0
#: ../../../discord/client.py:docstring of discord.Client.guilds:0
#: ../../../discord/client.py:docstring of discord.Client.emojis:0
#: ../../../discord/client.py:docstring of discord.Client.stickers:0
#: ../../../discord/client.py:docstring of discord.Client.cached_messages:0
#: ../../../discord/client.py:docstring of discord.Client.private_channels:0
#: ../../../discord/client.py:docstring of discord.Client.voice_clients:0
#: ../../../discord/client.py:docstring of discord.Client.application_id:0
#: ../../../discord/client.py:docstring of discord.Client.application_flags:0
#: ../../../discord/client.py:docstring of discord.Client.activity:0
#: ../../../discord/client.py:docstring of discord.Client.allowed_mentions:0
#: ../../../discord/client.py:docstring of discord.Client.intents:0
#: ../../../discord/client.py:docstring of discord.Client.users:0
#: ../../../discord/client.py:docstring of discord.Client.persistent_views:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:0
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:0
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:0
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.shards:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.AppInfo.icon:0
#: ../../../discord/appinfo.py:docstring of discord.AppInfo.cover_image:0
#: ../../../discord/appinfo.py:docstring of discord.AppInfo.guild:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:0
#: ../../../discord/appinfo.py:docstring of discord.PartialAppInfo.icon:0
#: ../../../discord/team.py:docstring of discord.team.Team:0
#: ../../../discord/team.py:docstring of discord.team.Team:0
#: ../../../discord/team.py:docstring of discord.team.Team:0
#: ../../../discord/team.py:docstring of discord.team.Team:0
#: ../../../discord/team.py:docstring of discord.Team.icon:0
#: ../../../discord/team.py:docstring of discord.Team.owner:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/team.py:docstring of discord.team.TeamMember:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:0
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.guild:0
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.user:0
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.latency:0
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.average_latency:0
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.source:0
#: ../../../discord/player.py:docstring of discord.player.PCMAudio:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:0
#: ../../docstring of discord.AuditLogEntry.created_at:0
#: ../../docstring of discord.AuditLogEntry.category:0
#: ../../docstring of discord.AuditLogEntry.changes:0
#: ../../docstring of discord.AuditLogEntry.before:0
#: ../../docstring of discord.AuditLogEntry.after:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:0
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.url:0
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.avatar:0
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.channel:0
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.created_at:0
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.guild:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:0
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.url:0
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.avatar:0
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.channel:0
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.created_at:0
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.guild:0
#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:0
#: ../../../discord/abc.py:docstring of discord.abc.User:0
#: ../../../discord/abc.py:docstring of discord.abc.User:0
#: ../../../discord/abc.py:docstring of discord.abc.User:0
#: ../../../discord/abc.py:docstring of discord.abc.User:0
#: ../../../discord/abc.py:docstring of discord.abc.User.display_name:0
#: ../../../discord/abc.py:docstring of discord.abc.User.mention:0
#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.changed_roles:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.mention:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.created_at:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.category:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_synced:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser:0
#: ../../../discord/user.py:docstring of discord.ClientUser.accent_color:0
#: ../../../discord/user.py:docstring of discord.ClientUser.accent_colour:0
#: ../../../discord/user.py:docstring of discord.ClientUser.avatar:0
#: ../../../discord/user.py:docstring of discord.ClientUser.banner:0
#: ../../../discord/user.py:docstring of discord.ClientUser.color:0
#: ../../../discord/user.py:docstring of discord.ClientUser.colour:0
#: ../../../discord/user.py:docstring of discord.ClientUser.created_at:0
#: ../../../discord/user.py:docstring of discord.ClientUser.default_avatar:0
#: ../../../discord/user.py:docstring of discord.ClientUser.display_avatar:0
#: ../../../discord/user.py:docstring of discord.ClientUser.display_name:0
#: ../../../discord/user.py:docstring of discord.ClientUser.mention:0
#: ../../../discord/user.py:docstring of discord.ClientUser.public_flags:0
#: ../../../discord/user.py:docstring of discord.user.User:0
#: ../../../discord/user.py:docstring of discord.user.User:0
#: ../../../discord/user.py:docstring of discord.user.User:0
#: ../../../discord/user.py:docstring of discord.user.User:0
#: ../../../discord/user.py:docstring of discord.user.User:0
#: ../../../discord/user.py:docstring of discord.User.dm_channel:0
#: ../../../discord/user.py:docstring of discord.User.mutual_guilds:0
#: ../../../discord/user.py:docstring of discord.User.accent_color:0
#: ../../../discord/user.py:docstring of discord.User.accent_colour:0
#: ../../../discord/user.py:docstring of discord.User.avatar:0
#: ../../../discord/user.py:docstring of discord.User.banner:0
#: ../../../discord/user.py:docstring of discord.User.color:0
#: ../../../discord/user.py:docstring of discord.User.colour:0
#: ../../../discord/user.py:docstring of discord.User.created_at:0
#: ../../../discord/user.py:docstring of discord.User.default_avatar:0
#: ../../../discord/user.py:docstring of discord.User.display_avatar:0
#: ../../../discord/user.py:docstring of discord.User.display_name:0
#: ../../../discord/user.py:docstring of discord.User.mention:0
#: ../../../discord/user.py:docstring of discord.User.public_flags:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/message.py:docstring of discord.message.Attachment:0
#: ../../../discord/asset.py:docstring of discord.Asset.url:0
#: ../../../discord/asset.py:docstring of discord.Asset.key:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../../discord/message.py:docstring of discord.message.Message:0
#: ../../docstring of discord.Message.raw_mentions:0
#: ../../docstring of discord.Message.raw_channel_mentions:0
#: ../../docstring of discord.Message.raw_role_mentions:0
#: ../../docstring of discord.Message.clean_content:0
#: ../../../discord/message.py:docstring of discord.Message.created_at:0
#: ../../../discord/message.py:docstring of discord.Message.edited_at:0
#: ../../../discord/message.py:docstring of discord.Message.jump_url:0
#: ../../docstring of discord.Message.system_content:0
#: ../../../discord/components.py:docstring of discord.components.Component:0
#: ../../../discord/components.py:docstring of discord.components.ActionRow:0
#: ../../../discord/components.py:docstring of discord.components.ActionRow:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.Button:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:0
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.id:0
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.channel_id:0
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.guild_id:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild:0
#: ../../../discord/guild.py:docstring of discord.Guild.channels:0
#: ../../../discord/guild.py:docstring of discord.Guild.threads:0
#: ../../../discord/guild.py:docstring of discord.Guild.large:0
#: ../../../discord/guild.py:docstring of discord.Guild.voice_channels:0
#: ../../../discord/guild.py:docstring of discord.Guild.stage_channels:0
#: ../../../discord/guild.py:docstring of discord.Guild.me:0
#: ../../../discord/guild.py:docstring of discord.Guild.voice_client:0
#: ../../../discord/guild.py:docstring of discord.Guild.text_channels:0
#: ../../../discord/guild.py:docstring of discord.Guild.categories:0
#: ../../../discord/guild.py:docstring of discord.Guild.system_channel:0
#: ../../../discord/guild.py:docstring of discord.Guild.system_channel_flags:0
#: ../../../discord/guild.py:docstring of discord.Guild.rules_channel:0
#: ../../../discord/guild.py:docstring of discord.Guild.public_updates_channel:0
#: ../../../discord/guild.py:docstring of discord.Guild.emoji_limit:0
#: ../../../discord/guild.py:docstring of discord.Guild.sticker_limit:0
#: ../../../discord/guild.py:docstring of discord.Guild.bitrate_limit:0
#: ../../../discord/guild.py:docstring of discord.Guild.filesize_limit:0
#: ../../../discord/guild.py:docstring of discord.Guild.members:0
#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscribers:0
#: ../../../discord/guild.py:docstring of discord.Guild.roles:0
#: ../../../discord/guild.py:docstring of discord.Guild.default_role:0
#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscriber_role:0
#: ../../../discord/guild.py:docstring of discord.Guild.self_role:0
#: ../../../discord/guild.py:docstring of discord.Guild.stage_instances:0
#: ../../../discord/guild.py:docstring of discord.Guild.owner:0
#: ../../../discord/guild.py:docstring of discord.Guild.icon:0
#: ../../../discord/guild.py:docstring of discord.Guild.banner:0
#: ../../../discord/guild.py:docstring of discord.Guild.splash:0
#: ../../../discord/guild.py:docstring of discord.Guild.discovery_splash:0
#: ../../../discord/guild.py:docstring of discord.Guild.member_count:0
#: ../../../discord/guild.py:docstring of discord.Guild.chunked:0
#: ../../../discord/guild.py:docstring of discord.Guild.shard_id:0
#: ../../../discord/guild.py:docstring of discord.Guild.created_at:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:0
#: ../../../discord/integrations.py:docstring of discord.StreamIntegration.expire_behavior:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:0
#: ../../docstring of discord.Interaction.channel:0
#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:0
#: ../../docstring of discord.Interaction.response:0
#: ../../docstring of discord.Interaction.followup:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.member.Member:0
#: ../../../discord/member.py:docstring of discord.Member.raw_status:0
#: ../../../discord/member.py:docstring of discord.Member.status:0
#: ../../../discord/member.py:docstring of discord.Member.mobile_status:0
#: ../../../discord/member.py:docstring of discord.Member.desktop_status:0
#: ../../../discord/member.py:docstring of discord.Member.web_status:0
#: ../../../discord/member.py:docstring of discord.Member.colour:0
#: ../../../discord/member.py:docstring of discord.Member.color:0
#: ../../../discord/member.py:docstring of discord.Member.roles:0
#: ../../../discord/member.py:docstring of discord.Member.mention:0
#: ../../../discord/member.py:docstring of discord.Member.display_name:0
#: ../../../discord/member.py:docstring of discord.Member.display_avatar:0
#: ../../../discord/member.py:docstring of discord.Member.guild_avatar:0
#: ../../../discord/member.py:docstring of discord.Member.activity:0
#: ../../../discord/member.py:docstring of discord.Member.top_role:0
#: ../../../discord/member.py:docstring of discord.Member.guild_permissions:0
#: ../../../discord/member.py:docstring of discord.Member.voice:0
#: ../../../discord/activity.py:docstring of discord.Spotify.type:0
#: ../../../discord/activity.py:docstring of discord.Spotify.created_at:0
#: ../../../discord/activity.py:docstring of discord.Spotify.colour:0
#: ../../../discord/activity.py:docstring of discord.Spotify.color:0
#: ../../../discord/activity.py:docstring of discord.Spotify.name:0
#: ../../../discord/activity.py:docstring of discord.Spotify.title:0
#: ../../../discord/activity.py:docstring of discord.Spotify.artists:0
#: ../../../discord/activity.py:docstring of discord.Spotify.artist:0
#: ../../../discord/activity.py:docstring of discord.Spotify.album:0
#: ../../../discord/activity.py:docstring of discord.Spotify.album_cover_url:0
#: ../../../discord/activity.py:docstring of discord.Spotify.track_id:0
#: ../../../discord/activity.py:docstring of discord.Spotify.track_url:0
#: ../../../discord/activity.py:docstring of discord.Spotify.start:0
#: ../../../discord/activity.py:docstring of discord.Spotify.end:0
#: ../../../discord/activity.py:docstring of discord.Spotify.duration:0
#: ../../../discord/activity.py:docstring of discord.Spotify.party_id:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/member.py:docstring of discord.member.VoiceState:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:0
#: ../../../discord/emoji.py:docstring of discord.Emoji.created_at:0
#: ../../../discord/emoji.py:docstring of discord.Emoji.url:0
#: ../../../discord/emoji.py:docstring of discord.Emoji.roles:0
#: ../../../discord/emoji.py:docstring of discord.Emoji.guild:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:0
#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.created_at:0
#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.url:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.role.Role:0
#: ../../../discord/role.py:docstring of discord.Role.permissions:0
#: ../../../discord/role.py:docstring of discord.Role.colour:0
#: ../../../discord/role.py:docstring of discord.Role.color:0
#: ../../../discord/role.py:docstring of discord.Role.created_at:0
#: ../../../discord/role.py:docstring of discord.Role.mention:0
#: ../../../discord/role.py:docstring of discord.Role.members:0
#: ../../../discord/role.py:docstring of discord.Role.icon:0
#: ../../../discord/role.py:docstring of discord.role.RoleTags:0
#: ../../../discord/role.py:docstring of discord.role.RoleTags:0
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:0
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.type:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.members:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.threads:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.category:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.changed_roles:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.mention:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.permissions_synced:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread:0
#: ../../../discord/threads.py:docstring of discord.Thread.type:0
#: ../../../discord/threads.py:docstring of discord.Thread.parent:0
#: ../../../discord/threads.py:docstring of discord.Thread.owner:0
#: ../../../discord/threads.py:docstring of discord.Thread.mention:0
#: ../../../discord/threads.py:docstring of discord.Thread.members:0
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:0
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:0
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:0
#: ../../../discord/threads.py:docstring of discord.ThreadMember.thread:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.type:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.category:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.changed_roles:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.mention:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.permissions_synced:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.type:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.category:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.changed_roles:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.members:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.mention:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.permissions_synced:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.requesting_to_speak:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.speakers:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.listeners:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.moderators:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.type:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.instance:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.category:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.changed_roles:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.members:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.mention:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.permissions_synced:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:0
#: ../../docstring of discord.StageInstance.channel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.type:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.channels:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.text_channels:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.voice_channels:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.stage_channels:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.category:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.changed_roles:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.mention:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.permissions_synced:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:0
#: ../../../discord/channel.py:docstring of discord.DMChannel.type:0
#: ../../../discord/channel.py:docstring of discord.DMChannel.created_at:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:0
#: ../../../discord/channel.py:docstring of discord.GroupChannel.type:0
#: ../../../discord/channel.py:docstring of discord.GroupChannel.icon:0
#: ../../../discord/channel.py:docstring of discord.GroupChannel.created_at:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.created_at:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.icon:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.banner:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.splash:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:0
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.mention:0
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.created_at:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite:0
#: ../../../discord/invite.py:docstring of discord.Invite.id:0
#: ../../../discord/invite.py:docstring of discord.Invite.url:0
#: ../../../discord/invite.py:docstring of discord.Invite.friend_invite:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.template.Template:0
#: ../../../discord/template.py:docstring of discord.Template.url:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:0
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.mention:0
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.created_at:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_name:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_color:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_colour:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.banner:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.color:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.colour:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.created_at:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.default_avatar:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_avatar:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.mention:0
#: ../../../discord/widget.py:docstring of discord.WidgetMember.public_flags:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget:0
#: ../../../discord/widget.py:docstring of discord.Widget.created_at:0
#: ../../../discord/widget.py:docstring of discord.Widget.json_url:0
#: ../../../discord/widget.py:docstring of discord.Widget.invite_url:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:0
#: ../../../discord/sticker.py:docstring of discord.StickerPack.banner:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:0
#: ../../../discord/sticker.py:docstring of discord.Sticker.created_at:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:0
#: ../../docstring of discord.GuildSticker.guild:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:0
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:0
#: ../../../discord/webhook/async_.py:docstring of discord.PartialWebhookGuild.icon:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:0
#: ../../../discord/object.py:docstring of discord.object.Object:0
#: ../../../discord/object.py:docstring of discord.Object.created_at:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:0
#: ../../../discord/embeds.py:docstring of discord.Embed.fields:0
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:0
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:0
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:0
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference:0
#: ../../../discord/message.py:docstring of discord.MessageReference.cached_message:0
#: ../../../discord/message.py:docstring of discord.MessageReference.jump_url:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage:0
#: ../../../discord/message.py:docstring of discord.PartialMessage.jump_url:0
#: ../../../discord/message.py:docstring of discord.PartialMessage.created_at:0
#: ../../docstring of discord.PartialMessage.guild:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/components.py:docstring of discord.components.SelectOption:0
#: ../../../discord/flags.py:docstring of discord.flags.Intents:0
#: ../../docstring of discord.Intents.guilds:0
#: ../../docstring of discord.Intents.members:0
#: ../../docstring of discord.Intents.bans:0
#: ../../docstring of discord.Intents.emojis:0
#: ../../docstring of discord.Intents.emojis_and_stickers:0
#: ../../docstring of discord.Intents.integrations:0
#: ../../docstring of discord.Intents.webhooks:0
#: ../../docstring of discord.Intents.invites:0
#: ../../docstring of discord.Intents.voice_states:0
#: ../../docstring of discord.Intents.presences:0
#: ../../docstring of discord.Intents.messages:0
#: ../../docstring of discord.Intents.guild_messages:0
#: ../../docstring of discord.Intents.dm_messages:0
#: ../../docstring of discord.Intents.reactions:0
#: ../../docstring of discord.Intents.guild_reactions:0
#: ../../docstring of discord.Intents.dm_reactions:0
#: ../../docstring of discord.Intents.typing:0
#: ../../docstring of discord.Intents.guild_typing:0
#: ../../docstring of discord.Intents.dm_typing:0
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:0
#: ../../docstring of discord.MemberCacheFlags.voice:0
#: ../../docstring of discord.MemberCacheFlags.joined:0
#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:0
#: ../../docstring of discord.ApplicationFlags.gateway_presence:0
#: ../../docstring of discord.ApplicationFlags.gateway_presence_limited:0
#: ../../docstring of discord.ApplicationFlags.gateway_guild_members:0
#: ../../docstring of discord.ApplicationFlags.gateway_guild_members_limited:0
#: ../../docstring of discord.ApplicationFlags.verification_pending_guild_limit:0
#: ../../docstring of discord.ApplicationFlags.embedded:0
#: ../../../discord/file.py:docstring of discord.file.File:0
#: ../../../discord/file.py:docstring of discord.file.File:0
#: ../../../discord/file.py:docstring of discord.file.File:0
#: ../../../discord/colour.py:docstring of discord.colour.Colour:0
#: ../../../discord/colour.py:docstring of discord.Colour.r:0
#: ../../../discord/colour.py:docstring of discord.Colour.g:0
#: ../../../discord/colour.py:docstring of discord.Colour.b:0
#: ../../../discord/activity.py:docstring of discord.BaseActivity.created_at:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.activity.Activity:0
#: ../../../discord/activity.py:docstring of discord.Activity.start:0
#: ../../../discord/activity.py:docstring of discord.Activity.end:0
#: ../../../discord/activity.py:docstring of discord.Activity.large_image_url:0
#: ../../../discord/activity.py:docstring of discord.Activity.small_image_url:0
#: ../../../discord/activity.py:docstring of discord.Activity.large_image_text:0
#: ../../../discord/activity.py:docstring of discord.Activity.small_image_text:0
#: ../../../discord/activity.py:docstring of discord.activity.Game:0
#: ../../../discord/activity.py:docstring of discord.Game.type:0
#: ../../../discord/activity.py:docstring of discord.Game.start:0
#: ../../../discord/activity.py:docstring of discord.Game.end:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:0
#: ../../../discord/activity.py:docstring of discord.Streaming.type:0
#: ../../../discord/activity.py:docstring of discord.Streaming.twitch_name:0
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:0
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:0
#: ../../../discord/activity.py:docstring of discord.CustomActivity.type:0
#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:0
#: ../../docstring of discord.Permissions.create_instant_invite:0
#: ../../docstring of discord.Permissions.kick_members:0
#: ../../docstring of discord.Permissions.ban_members:0
#: ../../docstring of discord.Permissions.administrator:0
#: ../../docstring of discord.Permissions.manage_channels:0
#: ../../docstring of discord.Permissions.manage_guild:0
#: ../../docstring of discord.Permissions.add_reactions:0
#: ../../docstring of discord.Permissions.view_audit_log:0
#: ../../docstring of discord.Permissions.priority_speaker:0
#: ../../docstring of discord.Permissions.stream:0
#: ../../docstring of discord.Permissions.read_messages:0
#: ../../docstring of discord.Permissions.view_channel:0
#: ../../docstring of discord.Permissions.send_messages:0
#: ../../docstring of discord.Permissions.send_tts_messages:0
#: ../../docstring of discord.Permissions.manage_messages:0
#: ../../docstring of discord.Permissions.embed_links:0
#: ../../docstring of discord.Permissions.attach_files:0
#: ../../docstring of discord.Permissions.read_message_history:0
#: ../../docstring of discord.Permissions.mention_everyone:0
#: ../../docstring of discord.Permissions.external_emojis:0
#: ../../docstring of discord.Permissions.use_external_emojis:0
#: ../../docstring of discord.Permissions.view_guild_insights:0
#: ../../docstring of discord.Permissions.connect:0
#: ../../docstring of discord.Permissions.speak:0
#: ../../docstring of discord.Permissions.mute_members:0
#: ../../docstring of discord.Permissions.deafen_members:0
#: ../../docstring of discord.Permissions.move_members:0
#: ../../docstring of discord.Permissions.use_voice_activation:0
#: ../../docstring of discord.Permissions.change_nickname:0
#: ../../docstring of discord.Permissions.manage_nicknames:0
#: ../../docstring of discord.Permissions.manage_roles:0
#: ../../docstring of discord.Permissions.manage_permissions:0
#: ../../docstring of discord.Permissions.manage_webhooks:0
#: ../../docstring of discord.Permissions.manage_emojis:0
#: ../../docstring of discord.Permissions.manage_emojis_and_stickers:0
#: ../../docstring of discord.Permissions.use_slash_commands:0
#: ../../docstring of discord.Permissions.request_to_speak:0
#: ../../docstring of discord.Permissions.manage_events:0
#: ../../docstring of discord.Permissions.manage_threads:0
#: ../../docstring of discord.Permissions.create_public_threads:0
#: ../../docstring of discord.Permissions.create_private_threads:0
#: ../../docstring of discord.Permissions.external_stickers:0
#: ../../docstring of discord.Permissions.use_external_stickers:0
#: ../../docstring of discord.Permissions.send_messages_in_threads:0
#: ../../docstring of discord.Permissions.start_embedded_activities:0
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:0
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:0
#: ../../../discord/shard.py:docstring of discord.ShardInfo.latency:0
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:0
#: ../../docstring of discord.SystemChannelFlags.join_notifications:0
#: ../../docstring of discord.SystemChannelFlags.premium_subscriptions:0
#: ../../docstring of discord.SystemChannelFlags.guild_reminder_notifications:0
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:0
#: ../../docstring of discord.MessageFlags.crossposted:0
#: ../../docstring of discord.MessageFlags.is_crossposted:0
#: ../../docstring of discord.MessageFlags.suppress_embeds:0
#: ../../docstring of discord.MessageFlags.source_message_deleted:0
#: ../../docstring of discord.MessageFlags.urgent:0
#: ../../docstring of discord.MessageFlags.has_thread:0
#: ../../docstring of discord.MessageFlags.ephemeral:0
#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:0
#: ../../docstring of discord.PublicUserFlags.staff:0
#: ../../docstring of discord.PublicUserFlags.partner:0
#: ../../docstring of discord.PublicUserFlags.hypesquad:0
#: ../../docstring of discord.PublicUserFlags.bug_hunter:0
#: ../../docstring of discord.PublicUserFlags.hypesquad_bravery:0
#: ../../docstring of discord.PublicUserFlags.hypesquad_brilliance:0
#: ../../docstring of discord.PublicUserFlags.hypesquad_balance:0
#: ../../docstring of discord.PublicUserFlags.early_supporter:0
#: ../../docstring of discord.PublicUserFlags.team_user:0
#: ../../docstring of discord.PublicUserFlags.system:0
#: ../../docstring of discord.PublicUserFlags.bug_hunter_level_2:0
#: ../../docstring of discord.PublicUserFlags.verified_bot:0
#: ../../docstring of discord.PublicUserFlags.verified_bot_developer:0
#: ../../docstring of discord.PublicUserFlags.early_verified_bot_developer:0
#: ../../docstring of discord.PublicUserFlags.discord_certified_moderator:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:0
#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:0
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:0
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:0
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:0
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:0
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:0
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:0
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:0
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:0
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:0
#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:0
#: ../../../discord/errors.py:docstring of discord.errors.InteractionResponded:0
#: ../../../discord/opus.py:docstring of discord.opus.OpusError:0
msgid "type"
msgstr "tipe"

#: ../../../discord/client.py:docstring of discord.client.Client:90
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:41
msgid ":class:`asyncio.AbstractEventLoop`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:1
msgid "A decorator that registers an event to listen to."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:3
msgid "You can find more info about the events on the :ref:`documentation below <discord-api-events>`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:5
msgid "The events must be a :ref:`coroutine <coroutine>`, if not, :exc:`TypeError` is raised."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.event:8
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:6
msgid "Example"
msgstr "Contoh"

#: ../../../discord/client.py:docstring of discord.client.Client.event:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.login:0
#: ../../../discord/client.py:docstring of discord.client.Client.connect:0
#: ../../../discord/client.py:docstring of discord.client.Client.start:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:0
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:0
#: ../../../discord/client.py:docstring of discord.client.Client.add_view:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:0
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:0
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:0
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/message.py:docstring of discord.message.Message.delete:0
#: ../../../discord/message.py:docstring of discord.message.Message.edit:0
#: ../../../discord/message.py:docstring of discord.message.Message.publish:0
#: ../../../discord/message.py:docstring of discord.message.Message.pin:0
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:0
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:0
#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.leave:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:0
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:0
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/member.py:docstring of discord.member.Member.edit:0
#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:0
#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:0
#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:0
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/role.py:docstring of discord.role.Role.edit:0
#: ../../../discord/role.py:docstring of discord.role.Role.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/threads.py:docstring of discord.Thread.category:0
#: ../../../discord/threads.py:docstring of discord.Thread.category_id:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.leave:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:0
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.leave:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:0
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:0
#: ../../../discord/template.py:docstring of discord.template.Template.sync:0
#: ../../../discord/template.py:docstring of discord.template.Template.edit:0
#: ../../../discord/template.py:docstring of discord.template.Template.delete:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:0
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:0
#: ../../../discord/message.py:docstring of discord.message.Message.delete:0
#: ../../../discord/message.py:docstring of discord.message.Message.publish:0
#: ../../../discord/message.py:docstring of discord.message.Message.pin:0
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:0
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:0
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:0
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:0
msgid "Raises"
msgstr "Menimbulkan"

#: ../../../discord/client.py:docstring of discord.client.Client.event:15
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:1
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving your guilds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:5
msgid "Using this, you will only receive :attr:`.Guild.owner`, :attr:`.Guild.icon`, :attr:`.Guild.id`, and :attr:`.Guild.name` per :class:`.Guild`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:10
msgid "This method is an API call. For general usage, consider :attr:`guilds` instead."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:13
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:22
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:7
#: ../../../discord/utils.py:docstring of discord.utils.get:16
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:26
#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:6
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:20
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:6
msgid "Examples"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:8
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:27
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:7
msgid "Usage ::"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:19
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:32
msgid "Flattening into a list ::"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:24
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/member.py:docstring of discord.member.Member.edit:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:19
msgid "All parameters are optional."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:26
msgid "The number of guilds to retrieve. If ``None``, it retrieves every guild you have access to. Note, however, that this would make it a slow operation. Defaults to ``100``."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:31
msgid "Retrieves guilds before this date or object. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:35
msgid "Retrieve guilds after this date or object. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:40
msgid "Getting the guilds failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:0
msgid "Yields"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guilds:42
msgid ":class:`.Guild` -- The guild with the guild data parsed."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.application_command:1
msgid "A shortcut decorator that invokes :func:`~discord.ext.app.command` and adds it to the internal command list via :meth:`~.ApplicationCommandMixin.add_application`."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.application_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:0
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_application:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:0
#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:0
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:0
#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:0
#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:0
#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:0
#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:0
#: ../../../discord/utils.py:docstring of discord.utils.utcnow:0
#: ../../../discord/utils.py:docstring of discord.utils.format_dt:0
#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:0
#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:0
#: ../../../discord/member.py:docstring of discord.member.Member.edit:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/member.py:docstring of discord.member.Member.get_role:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:0
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/role.py:docstring of discord.role.Role.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:0
#: ../../../discord/threads.py:docstring of discord.Thread.category:0
#: ../../../discord/threads.py:docstring of discord.Thread.category_id:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:0
#: ../../../discord/template.py:docstring of discord.template.Template.sync:0
#: ../../../discord/template.py:docstring of discord.template.Template.edit:0
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:0
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:0
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:0
msgid "Returns"
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.application_command:6
msgid "A decorator that converts the provided method into an :class:`.ApplicationCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.application_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:0
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:0
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:0
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:0
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_application:0
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:0
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:0
#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:0
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:0
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:0
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:0
#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:0
#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:0
#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:0
#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:0
#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:0
#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:0
#: ../../../discord/utils.py:docstring of discord.utils.utcnow:0
#: ../../../discord/utils.py:docstring of discord.utils.format_dt:0
#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../api.rst:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:0
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:0
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:0
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:0
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:0
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:0
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:0
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:0
#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:0
#: ../../../discord/member.py:docstring of discord.member.Member.edit:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/member.py:docstring of discord.member.Member.get_role:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:0
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:0
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:0
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:0
#: ../../../discord/role.py:docstring of discord.role.Role.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:0
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:0
#: ../../../discord/threads.py:docstring of discord.Thread.category:0
#: ../../../discord/threads.py:docstring of discord.Thread.category_id:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:0
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:0
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:0
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:0
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:0
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:0
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:0
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:0
#: ../../../discord/template.py:docstring of discord.template.Template.sync:0
#: ../../../discord/template.py:docstring of discord.template.Template.edit:0
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:0
#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:0
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:0
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:0
#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:0
#: ../../../discord/message.py:docstring of discord.message.Message.reply:0
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:0
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:0
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:0
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:0
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:0
msgid "Return type"
msgstr "Tipe pengembalian"

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.application_command:8
msgid "Callable[..., :class:`ApplicationCommand`]"
msgstr "Callable[..., :class:`ApplicationCommand`]"

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:1
msgid "A shortcut decorator that invokes :func:`~discord.ext.app.command` and adds it to the internal command list via :meth:`~.ApplicationCommandMixin.add_application`. This shortcut is made specifically for :class:`.SlashCommand`."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:7
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:7
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:7
msgid "The name of the command. Defaults to the name of the method."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:9
msgid "A short description of the command."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:11
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:9
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:9
msgid "Guild IDs where the command can be run on. Setting this will make the command only usable from this guild."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:14
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:12
#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:12
msgid "A list of predicates that must be true for the command to be invoked."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:17
msgid "A decorator that converts the provided method into a :class:`.SlashCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.slash_command:19
msgid "Callable[..., :class:`.SlashCommand`]"
msgstr "Callable[..., :class:`.SlashCommand`]"

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:1
msgid "A shortcut decorator that invokes :func:`~discord.ext.app.command` and adds it to the internal command list via :meth:`~.ApplicationCommandMixin.add_application`. This shortcut is made specifically for :class:`.UserCommand`."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:15
msgid "A decorator that converts the provided method into a :class:`.UserCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.user_command:17
msgid "Callable[..., :class:`.UserCommand`]"
msgstr "Callable[..., :class:`.UserCommand`]"

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:1
msgid "A shortcut decorator that invokes :func:`~discord.ext.app.command` and adds it to the internal command list via :meth:`~.ApplicationCommandMixin.add_application`. This shortcut is made specifically for :class:`.MessageCommand`."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:15
msgid "A decorator that converts the provided method into a :class:`.MessageCommand`, adds it to the bot, then returns it."
msgstr ""

#: ../../../discord/ext/app/mixins.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.message_command:17
msgid "Callable[..., :class:`.MessageCommand`]"
msgstr "Callable[..., :class:`.MessageCommand`]"

#: ../../../discord/client.py:docstring of discord.Client.latency:1
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:1
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.latency:3
msgid "This could be referred to as the Discord WebSocket protocol latency."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.latency:5
#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:7
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.latency:8
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.average_latency:5
#: ../../../discord/guild.py:docstring of discord.Guild.bitrate_limit:3
#: ../../../discord/shard.py:docstring of discord.ShardInfo.latency:3
msgid ":class:`float`"
msgstr ":class:`float`"

#: ../../../discord/client.py:docstring of discord.client.Client.is_ws_ratelimited:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:1
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.is_ws_ratelimited:1
msgid ":class:`bool`: Whether the websocket is currently rate limited."
msgstr ":class:`bool`: Apakah websocket terkena rate limit apa tidak."

#: ../../../discord/client.py:docstring of discord.client.Client.is_ws_ratelimited:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:3
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.is_ws_ratelimited:3
msgid "This can be useful to know when deciding whether you should query members using HTTP or via the gateway."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.user:1
msgid "Represents the connected client. ``None`` if not logged in."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.user:3
msgid "Optional[:class:`.ClientUser`]"
msgstr "Optional[:class:`.ClientUser`]"

#: ../../../discord/client.py:docstring of discord.Client.guilds:1
msgid "The guilds that the connected client is a member of."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.guilds:3
msgid "List[:class:`.Guild`]"
msgstr "List[:class:`.Guild`]"

#: ../../../discord/client.py:docstring of discord.Client.emojis:1
msgid "The emojis that the connected client has."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.emojis:3
msgid "List[:class:`.Emoji`]"
msgstr "List[:class:`.Emoji`]"

#: ../../../discord/client.py:docstring of discord.Client.stickers:1
msgid "The stickers that the connected client has."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.stickers:5
msgid "List[:class:`.GuildSticker`]"
msgstr "List[:class:`.GuildSticker`]"

#: ../../../discord/client.py:docstring of discord.Client.cached_messages:1
msgid "Read-only list of messages the connected client has cached."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.cached_messages:5
msgid "Sequence[:class:`.Message`]"
msgstr "Sequence[:class:`.Message`]"

#: ../../../discord/client.py:docstring of discord.Client.private_channels:1
msgid "The private channels that the connected client is participating on."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.private_channels:5
msgid "This returns only up to 128 most recent private channels due to an internal working on how Discord deals with private channels."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.private_channels:8
msgid "List[:class:`.abc.PrivateChannel`]"
msgstr "List[:class:`.abc.PrivateChannel`]"

#: ../../../discord/client.py:docstring of discord.Client.voice_clients:1
msgid "Represents a list of voice connections."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.voice_clients:3
msgid "These are usually :class:`.VoiceClient` instances."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.voice_clients:5
msgid "List[:class:`.VoiceProtocol`]"
msgstr "List[:class:`.VoiceProtocol`]"

#: ../../../discord/client.py:docstring of discord.Client.application_id:3
msgid "If this is not passed via ``__init__`` then this is retrieved through the gateway when an event contains the data. Usually after :func:`~discord.on_connect` is called."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.application_id:9
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:81
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:91
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:70
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:76
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:47
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:53
#: ../../../discord/message.py:docstring of discord.message.Attachment:40
#: ../../../discord/message.py:docstring of discord.message.Attachment:46
#: ../../../discord/message.py:docstring of discord.message.Message:126
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.guild_id:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild:88
#: ../../../discord/guild.py:docstring of discord.guild.Guild:98
#: ../../../discord/guild.py:docstring of discord.guild.Guild:106
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:38
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:24
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:30
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:44
#: ../../../discord/role.py:docstring of discord.role.RoleTags:15
#: ../../../discord/role.py:docstring of discord.role.RoleTags:21
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:43
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:63
#: ../../../discord/threads.py:docstring of discord.threads.Thread:58
#: ../../../discord/threads.py:docstring of discord.threads.Thread:111
#: ../../../discord/threads.py:docstring of discord.Thread.category_id:6
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:43
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:51
#: ../../../discord/invite.py:docstring of discord.invite.Invite:109
#: ../../../discord/invite.py:docstring of discord.invite.Invite:116
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:13
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:19
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:23
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:26
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:19
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:21
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:15
#: ../../../discord/message.py:docstring of discord.message.MessageReference:12
#: ../../../discord/message.py:docstring of discord.message.MessageReference:24
#: ../../../discord/activity.py:docstring of discord.activity.Activity:16
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:18
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:20
#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:14
msgid "Optional[:class:`int`]"
msgstr "Optional[:class:`int`]"

#: ../../../discord/client.py:docstring of discord.Client.application_flags:1
msgid "The client's application flags."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.application_flags:5
msgid ":class:`~discord.ApplicationFlags`"
msgstr ":class:`~discord.ApplicationFlags`"

#: ../../../discord/client.py:docstring of discord.client.Client.is_ready:1
msgid ":class:`bool`: Specifies if the client's internal cache is ready for use."
msgstr ":class:`bool`: Menandakan apabila cache internal klien sudah siap dipakai apa tidak."

#: ../../../discord/client.py:docstring of discord.client.Client.on_error:1
#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:1
#: ../../../discord/client.py:docstring of discord.client.Client.login:1
#: ../../../discord/client.py:docstring of discord.client.Client.connect:1
#: ../../../discord/client.py:docstring of discord.client.Client.close:1
#: ../../../discord/client.py:docstring of discord.client.Client.start:1
#: ../../../discord/client.py:docstring of discord.client.Client.on_connect:1
#: ../../../discord/client.py:docstring of discord.client.Client.register_application_commands:1
#: ../../../discord/client.py:docstring of discord.client.Client.wait_until_ready:1
#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:1
#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:1
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:1
#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:1
#: ../../../discord/client.py:docstring of discord.client.Client.application_info:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:1
#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:1
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:1
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_application_error:1
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_interaction:1
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:1
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.close:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.on_shard_connect:1
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.disconnect:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.move_to:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_state_update:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_server_update:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:1
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.disconnect:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:1
#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:1
#: ../../api.rst:2743
#: ../../api.rst:2751
#: ../../api.rst:2762
#: ../../api.rst:2782
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:1
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:1
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:1
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/user.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:1
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:1
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:1
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:1
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:1
#: ../../../discord/message.py:docstring of discord.message.Message.delete:1
#: ../../../discord/message.py:docstring of discord.message.Message.edit:1
#: ../../../discord/message.py:docstring of discord.message.Message.publish:1
#: ../../../discord/message.py:docstring of discord.message.Message.pin:1
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:1
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:1
#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:1
#: ../../../discord/message.py:docstring of discord.message.Message.reply:1
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:1
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.leave:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:1
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:1
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:1
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:1
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:1
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:1
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:1
#: ../../../discord/member.py:docstring of discord.member.Member.ban:1
#: ../../../discord/member.py:docstring of discord.member.Member.unban:1
#: ../../../discord/member.py:docstring of discord.member.Member.kick:1
#: ../../../discord/member.py:docstring of discord.member.Member.edit:1
#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:1
#: ../../../discord/member.py:docstring of discord.member.Member.move_to:1
#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:1
#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:1
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/member.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:1
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:1
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:1
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:1
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:1
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:1
#: ../../../discord/role.py:docstring of discord.role.Role.edit:1
#: ../../../discord/role.py:docstring of discord.role.Role.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.leave:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:1
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:1
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:1
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:1
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:1
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:1
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:1
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:1
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:1
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:1
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.leave:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:1
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:1
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:1
#: ../../../discord/template.py:docstring of discord.template.Template.sync:1
#: ../../../discord/template.py:docstring of discord.template.Template.edit:1
#: ../../../discord/template.py:docstring of discord.template.Template.delete:1
#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:1
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:1
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:1
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:1
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:1
#: ../../../discord/message.py:docstring of discord.message.Message.delete:1
#: ../../../discord/message.py:docstring of discord.message.Message.publish:1
#: ../../../discord/message.py:docstring of discord.message.Message.pin:1
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:1
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:1
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:1
#: ../../../discord/message.py:docstring of discord.message.Message.reply:1
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:1
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:1
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.disconnect:1
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.reconnect:1
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.connect:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_timeout:1
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:1
#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:1
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:1
msgid "|coro|"
msgstr "|coro|"

#: ../../../discord/client.py:docstring of discord.client.Client.on_error:3
msgid "The default error handler provided by the client."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.on_error:5
msgid "By default this prints to :data:`sys.stderr` however it could be overridden to have a different implementation. Check :func:`~discord.on_error` for more details."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:3
msgid "A hook that is called before IDENTIFYing a session. This is useful if you wish to have more control over the synchronization of multiple IDENTIFYing clients."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:7
msgid "The default implementation sleeps for 5 seconds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:11
msgid "The shard ID that requested being IDENTIFY'd"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.before_identify_hook:13
msgid "Whether this IDENTIFY is the first initial IDENTIFY."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.login:3
msgid "Logs in the client with the specified credentials."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.login:6
msgid "The authentication token. Do not prefix this token with anything as the library will do it for you."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.login:10
msgid "The wrong credentials are passed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.login:11
msgid "An unknown HTTP related error occurred,     usually when it isn't 200 or the known incorrect credentials     passing status code."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.connect:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:3
msgid "Creates a websocket connection and lets the websocket listen to messages from Discord. This is a loop that runs the entire event system and miscellaneous aspects of the library. Control is not resumed until the WebSocket connection is terminated."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.connect:8
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:8
msgid "If we should attempt reconnecting, either due to internet failure or a specific failure on Discord's part. Certain disconnects that lead to bad state will not be handled (such as invalid sharding payloads or bad tokens)."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.connect:14
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:14
msgid "If the gateway to connect to Discord is not found. Usually if this     is thrown then there is a Discord API outage."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.connect:15
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.connect:15
msgid "The websocket connection has been terminated."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.close:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.close:3
msgid "Closes the connection to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.clear:1
msgid "Clears the internal state of the bot."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.clear:3
msgid "After this, the bot can be considered \"re-opened\", i.e. :meth:`is_closed` and :meth:`is_ready` both return ``False`` along with the bot's internal cache cleared."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.start:3
msgid "A shorthand coroutine for :meth:`login` + :meth:`connect`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.start:5
msgid "An unexpected keyword argument was received."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.run:1
msgid "A blocking call that abstracts away the event loop initialisation from you."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.run:4
msgid "If you want more control over the event loop then this function should not be used. Use :meth:`start` coroutine or :meth:`connect` + :meth:`login`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.run:8
msgid "Roughly Equivalent to: ::"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.run:20
msgid "This function must be the last function to call due to the fact that it is blocking. That means that registration of events or anything being called after this function call will not execute until it returns."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.on_connect:3
msgid "Initialize application registration. If you decide to override this, you need to make sure that you call :meth:`.register_application_commands` at some point to make sure application commands works."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.on_connect:7
msgid "Or you can do ``super().on_connect()`` too."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.register_application_commands:3
msgid "Method to start registering and unregistering commands."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.is_closed:1
msgid ":class:`bool`: Indicates if the websocket connection is closed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.activity:1
msgid "The activity being used upon logging in."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.activity:4
msgid "Optional[:class:`.BaseActivity`]"
msgstr "Optional[:class:`.BaseActivity`]"

#: ../../../discord/client.py:docstring of discord.Client.status:1
msgid ":class:`.Status`: The status being used upon logging on to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.allowed_mentions:1
msgid "The allowed mention configuration."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.allowed_mentions:5
msgid "Optional[:class:`~discord.AllowedMentions`]"
msgstr "Optional[:class:`~discord.AllowedMentions`]"

#: ../../../discord/client.py:docstring of discord.Client.intents:1
msgid "The intents configured for this connection."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.intents:5
msgid ":class:`~discord.Intents`"
msgstr ":class:`~discord.Intents`"

#: ../../../discord/client.py:docstring of discord.Client.users:1
msgid "Returns a list of all the users the bot can see."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.users:3
msgid "List[:class:`~discord.User`]"
msgstr "List[:class:`~discord.User`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:1
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:1
msgid "Returns a channel or thread with the given ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:5
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_user:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:5
#: ../../../discord/member.py:docstring of discord.member.Member.get_role:5
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:5
msgid "The ID to search for."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:6
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:10
msgid "The returned channel or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_channel:7
msgid "Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, :class:`.abc.PrivateChannel`]]"
msgstr "Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, :class:`.abc.PrivateChannel`]]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:1
msgid "Returns a partial messageable with the given channel ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:3
msgid "This is useful if you have a channel_id but don't want to do an API call to send messages to it."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:8
msgid "The channel ID to create a partial messageable for."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:10
msgid "The underlying channel type for the partial messageable."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:13
msgid "The partial messageable"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_partial_messageable:14
msgid ":class:`.PartialMessageable`"
msgstr ":class:`.PartialMessageable`"

#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:1
msgid "Returns a stage instance with the given stage channel ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:8
msgid "The returns stage instance of ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_stage_instance:9
msgid "Optional[:class:`.StageInstance`]"
msgstr "Optional[:class:`.StageInstance`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:1
msgid "Returns a guild with the given ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:6
msgid "The guild or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild:7
msgid "Optional[:class:`.Guild`]"
msgstr "Optional[:class:`.Guild`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_user:1
msgid "Returns a user with the given ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_user:6
msgid "The user or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_user:7
msgid "Optional[:class:`~discord.User`]"
msgstr "Optional[:class:`~discord.User`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:1
msgid "Returns an emoji with the given ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:6
msgid "The custom emoji or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_emoji:7
msgid "Optional[:class:`.Emoji`]"
msgstr "Optional[:class:`.Emoji`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:1
msgid "Returns a guild sticker with the given ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:7
msgid "To retrieve standard stickers, use :meth:`.fetch_sticker`. or :meth:`.fetch_premium_sticker_packs`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:10
msgid "The sticker or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_sticker:11
msgid "Optional[:class:`.GuildSticker`]"
msgstr "Optional[:class:`.GuildSticker`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:1
msgid "A generator that retrieves every :class:`.abc.GuildChannel` the client can 'access'."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:3
#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:3
msgid "This is equivalent to: ::"
msgstr "Ini setara dengan: ::"

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:11
msgid "Just because you receive a :class:`.abc.GuildChannel` does not mean that you can communicate in said channel. :meth:`.abc.GuildChannel.permissions_for` should be used for that."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_channels:15
msgid ":class:`.abc.GuildChannel` -- A channel the client can 'access'."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:1
msgid "Returns a generator with every :class:`.Member` the client can see."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_all_members:9
msgid ":class:`.Member` -- A member the client can see."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_until_ready:3
msgid "Waits until the client's internal cache is all ready."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:3
msgid "Waits for a WebSocket event to be dispatched."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:5
msgid "This could be used to wait for a user to reply to a message, or to react to a message, or to edit a message in a self-contained way."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:9
msgid "The ``timeout`` parameter is passed onto :func:`asyncio.wait_for`. By default, it does not timeout. Note that this does propagate the :exc:`asyncio.TimeoutError` for you in case of timeout and is provided for ease of use."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:14
msgid "In case the event returns multiple arguments, a :class:`tuple` containing those arguments is returned instead. Please check the :ref:`documentation <discord-api-events>` for a list of events and their parameters."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:19
msgid "This function returns the **first event that meets the requirements**."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:23
msgid "Waiting for a user reply: ::"
msgstr "Menunggu jawaban pengguna: ::"

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:37
msgid "Waiting for a thumbs up reaction from the message author: ::"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:55
msgid "The event name, similar to the :ref:`event reference <discord-api-events>`, but without the ``on_`` prefix, to wait for."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:58
msgid "A predicate to check what to wait for. The arguments must meet the parameters of the event being waited for."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:61
msgid "The number of seconds to wait before timing out and raising :exc:`asyncio.TimeoutError`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:65
msgid "If a timeout is provided and it was reached."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.wait_for:67
msgid "Returns no arguments, a single argument, or a :class:`tuple` of multiple arguments that mirrors the parameters passed in the :ref:`event reference <discord-api-events>`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:3
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:3
msgid "Changes the client's presence."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:12
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:10
msgid "Removed the ``afk`` keyword-only parameter."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:15
#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:13
msgid "The activity being done. ``None`` if no currently active activity is done."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:17
msgid "Indicates what status to change to. If ``None``, then :attr:`.Status.online` is used."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.change_presence:21
msgid "If the ``activity`` parameter is not the proper type."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:3
msgid "Gets a :class:`.Template` from a discord.new URL or code."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:5
msgid "The Discord Template Code or URL (must be a discord.new URL)."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:8
msgid "The template is invalid."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:9
msgid "Getting the template failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:11
msgid "The template from the URL/code."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_template:12
msgid ":class:`.Template`"
msgstr ":class:`.Template`"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:3
msgid "Retrieves a :class:`.Guild` from an ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:7
msgid "Using this, you will **not** receive :attr:`.Guild.channels`, :attr:`.Guild.members`, :attr:`.Member.activity` and :attr:`.Member.voice` per :class:`.Member`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:12
msgid "This method is an API call. For general usage, consider :meth:`get_guild` instead."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:14
msgid "The guild's ID to fetch from."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:17
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:12
msgid "You do not have access to the guild."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:18
msgid "Getting the guild failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:20
msgid "The guild from the ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild:21
#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:25
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:21
msgid ":class:`.Guild`"
msgstr ":class:`.Guild`"

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:3
msgid "Creates a :class:`.Guild`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:5
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:5
msgid "Bot accounts in more than 10 guilds are not allowed to create guilds."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:7
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:7
msgid "The name of the guild."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:9
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:9
msgid "The region for the voice communication server. Defaults to :attr:`.VoiceRegion.us_west`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:12
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:12
msgid "The :term:`py:bytes-like object` representing the icon. See :meth:`.ClientUser.edit` for more details on what is expected."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:15
msgid "The code for a template to create the guild with.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:15
msgid "The code for a template to create the guild with."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:20
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:16
msgid "Guild creation failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:21
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:17
msgid "Invalid icon image format given. Must be PNG or JPG."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_guild:23
#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:19
msgid "The guild created. This is not the same guild that is added to cache."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:3
msgid "Gets a :class:`.StageInstance` for a stage channel id."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:7
msgid "The stage channel ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:10
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:7
msgid "The stage instance or channel could not be found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:11
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:8
msgid "Getting the stage instance failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:13
msgid "The stage instance from the stage channel ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_stage_instance:14
msgid ":class:`.StageInstance`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:3
msgid "Gets an :class:`.Invite` from a discord.gg URL or ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:7
msgid "If the invite is for a guild you have not joined, the guild and channel attributes of the returned :class:`.Invite` will be :class:`.PartialInviteGuild` and :class:`.PartialInviteChannel` respectively."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:11
msgid "The Discord invite ID or URL (must be a discord.gg URL)."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:13
msgid "Whether to include count information in the invite. This fills the :attr:`.Invite.approximate_member_count` and :attr:`.Invite.approximate_presence_count` fields."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:17
msgid "Whether to include the expiration date of the invite. This fills the :attr:`.Invite.expires_at` field.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:17
msgid "Whether to include the expiration date of the invite. This fills the :attr:`.Invite.expires_at` field."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:23
msgid "The invite has expired or is invalid."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:24
msgid "Getting the invite failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:26
msgid "The invite from the URL/ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_invite:27
msgid ":class:`.Invite`"
msgstr ":class:`.Invite`"

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:3
msgid "Revokes an :class:`.Invite`, URL, or ID to an invite."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:5
msgid "You must have the :attr:`~.Permissions.manage_channels` permission in the associated guild to do this."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:8
msgid "The invite to revoke."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:11
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:10
msgid "You do not have permissions to revoke invites."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:12
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:11
msgid "The invite is invalid or expired."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.delete_invite:13
#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:12
msgid "Revoking the invite failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:3
msgid "Gets a :class:`.Widget` from a guild ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:7
msgid "The guild must have the widget enabled to get this information."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:9
msgid "The ID of the guild."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:12
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:9
msgid "The widget for this guild is disabled."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:13
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:10
msgid "Retrieving the widget failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:15
#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:12
msgid "The guild's widget."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_widget:16
msgid ":class:`.Widget`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.application_info:3
msgid "Retrieves the bot's application information."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.application_info:5
msgid "Retrieving the information failed somehow."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.application_info:7
msgid "The bot's application information."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.application_info:8
msgid ":class:`.AppInfo`"
msgstr ":class:`.AppInfo`"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:3
msgid "Retrieves a :class:`~discord.User` based on their ID. You do not have to share any guilds with the user to get this information, however many operations do require that you do."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:9
msgid "This method is an API call. If you have :attr:`discord.Intents.members` and member cache enabled, consider :meth:`get_user` instead."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:12
msgid "The user's ID to fetch from."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:15
msgid "A user with this ID does not exist."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:16
msgid "Fetching the user failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:18
msgid "The user you requested."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_user:19
#: ../../../discord/abc.py:docstring of discord.abc.User:5
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:8
msgid ":class:`~discord.User`"
msgstr ":class:`~discord.User`"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:3
msgid "Retrieves a :class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, or :class:`.Thread` with the specified ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:7
msgid "This method is an API call. For general usage, consider :meth:`get_channel` instead."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:11
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:11
msgid "An unknown channel type was received from Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:12
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:12
msgid "Retrieving the channel failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:13
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:13
msgid "Invalid Channel ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:14
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:14
msgid "You do not have permission to fetch this channel."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:16
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:16
msgid "The channel from the ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_channel:17
msgid "Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, :class:`.Thread`]"
msgstr "Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, :class:`.Thread`]"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:3
msgid "Retrieves a :class:`.Webhook` with the specified ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:5
msgid "Retrieving the webhook failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:6
msgid "Invalid webhook ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:7
msgid "You do not have permission to fetch this webhook."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:9
msgid "The webhook you requested."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_webhook:10
msgid ":class:`.Webhook`"
msgstr ":class:`.Webhook`"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:3
msgid "Retrieves a :class:`.Sticker` with the specified ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:7
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:5
msgid "Retrieving the sticker failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:8
msgid "Invalid sticker ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:10
msgid "The sticker you requested."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_sticker:11
msgid "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"
msgstr "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:3
msgid "Retrieves all available premium sticker packs."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:7
msgid "Retrieving the sticker packs failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:9
msgid "All available premium sticker packs."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_premium_sticker_packs:10
msgid "List[:class:`.StickerPack`]"
msgstr "List[:class:`.StickerPack`]"

#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:3
msgid "Creates a :class:`.DMChannel` with this user."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:5
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:5
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:5
msgid "This should be rarely called, as this is done transparently for most people."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:10
msgid "The user to create a DM with."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:13
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:20
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:8
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:8
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:20
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:20
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:20
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:20
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:20
msgid "The channel that was created."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.create_dm:14
#: ../../../discord/user.py:docstring of discord.user.User.create_dm:9
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:9
msgid ":class:`.DMChannel`"
msgstr ":class:`.DMChannel`"

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:1
msgid "Registers a :class:`~discord.ui.View` for persistent listening."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:3
msgid "This method should be used for when a view is comprised of components that last longer than the lifecycle of the program."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:8
msgid "The view to register for dispatching."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:10
msgid "The message ID that the view is attached to. This is currently used to refresh the view's state during message update events. If not given then message update events are not propagated for the view."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:15
msgid "A view was not passed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.add_view:16
msgid "The view is not persistent. A persistent view has no timeout     and all their components have an explicitly provided custom_id."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.persistent_views:1
msgid "A sequence of persistent views added to the client."
msgstr ""

#: ../../../discord/client.py:docstring of discord.Client.persistent_views:5
msgid "Sequence[:class:`.View`]"
msgstr "Sequence[:class:`.View`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_applications:1
msgid "A list of application that are registered."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_applications:5
msgid "List of registered global applications."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_applications:6
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:9
msgid "List[:class:`.ApplicationCommand`]"
msgstr "List[:class:`.ApplicationCommand`]"

#: ../../../discord/client.py:docstring of discord.client.Client.get_application:1
msgid "Get an application by its ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_application:5
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:7
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:6
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:7
msgid "The application ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_application:8
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:10
msgid "The application command or ``None`` if not found."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_application:9
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:11
msgid "Optional[:class:`.ApplicationCommand`]"
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.add_application:1
msgid "Register a new application command."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.add_application:3
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.register_application:4
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.remove_application:3
msgid "The command to register."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:3
msgid "Returns the invocation context from the interaction. This is a more low-level counter-part for :meth:`.process_application_commands` to allow users more fine grained control over the processing."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:7
msgid "The interaction to get the invocation context from."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:9
msgid "The factory class that will be used to create the context. By default, this is :class:`.ApplicationContext`. Should a custom class be provided, it must be similar enough to :class:`.ApplicationContext`\\'s interface."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:14
msgid "The invocation context. The type of this can change via the ``cls`` parameter."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.get_application_context:16
msgid ":class:`.ApplicationContext`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:1
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:1
msgid "A list of application that are registered for a guild."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:5
#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_application:5
msgid "The guild ID."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.get_guild_applications:8
msgid "List of registered applications for a guild."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_application_error:3
msgid "The default command error handler provided by the bot."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_application_error:5
msgid "By default this prints to :data:`sys.stderr` however it could be overridden to have a different implementation."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_application_error:8
msgid "This only fires if you do not specify any listeners for command error."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_interaction:3
msgid "This event handle should handle all interaction coming from Discord. This would pass the information into :meth:`.process_application_commands`"
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_interaction:6
msgid "If you're overriding this, please dont forget to call the :meth:`.process_application_commands` or the application wont work."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.on_interaction:9
#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:17
msgid "The interaction to process"
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:3
msgid "This function processes the commands that have been registered to the bot and other groups. Without this coroutine, none of the commands will be triggered."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:7
msgid "By default, this coroutine is called inside the :func:`.on_interaction` event. If you choose to override the :func:`.on_interaction` event, then you should invoke this coroutine as well."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.process_application_commands:11
msgid "This function finds a registered command matching the interaction id from :meth:`ApplicationCommandMixin.application_command` and runs :meth:`ApplicationCommand.invoke` on it. If no matching command was found, it replies to the interaction with a default message."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.register_application:1
msgid "Register the command to the factories and remove from pending section. Please make sure the app already been registered to Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.ext.app.mixins.ApplicationCommandMixin.remove_application:1
msgid "Remove command from the list of registered commands."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:3
msgid "Get all registered global commands on Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:9
msgid "This method is an API call. For general usage use :meth:`get_applications`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:11
msgid "Retrieving the global application commands failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:13
msgid "The collection of global command that registred on Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_global_applications:14
#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:17
msgid "List[Union[:class:`.ApplicationCommand`, :class:`.RawApplicationCommand`]]"
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:3
msgid "Get all registered guild commands on Discord."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:9
msgid "This method is an API call. For general usage use :meth:`get_guild_applications`."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:11
msgid "The guild ID to be fetched."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:14
msgid "Retrieving the guild application commands failed."
msgstr ""

#: ../../../discord/client.py:docstring of discord.client.Client.fetch_guild_applications:16
msgid "The collection of guild command that registred on Discord."
msgstr ""

#: ../../api.rst:65
msgid "AutoShardedClient"
msgstr "AutoShardedClient"

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:1
msgid "A client similar to :class:`Client` except it handles the complications of sharding for the user into a more manageable and transparent single process bot."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:5
msgid "When using this client, you will be able to use it as-if it was a regular :class:`Client` with a single shard when implementation wise internally it is split up into multiple shards. This allows you to not have to deal with IPC or other complicated infrastructure."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:10
msgid "It is recommended to use this client only if you have surpassed at least 1000 guilds."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:13
msgid "If no :attr:`.shard_count` is provided, then the library will use the Bot Gateway endpoint call to figure out how many shards to use."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:16
msgid "If a ``shard_ids`` parameter is given, then those shard IDs will be used to launch the internal shards. Note that :attr:`.shard_count` must be provided if this is used. By default, when omitted, the client will launch shards from 0 to ``shard_count - 1``."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:23
msgid "An optional list of shard_ids to launch the shards with."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient:25
msgid "Optional[List[:class:`int`]]"
msgstr "Optional[List[:class:`int`]]"

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latency:3
msgid "This operates similarly to :meth:`Client.latency` except it uses the average latency of every shard's latency. To get a list of shard latency, check the :attr:`latencies` property. Returns ``nan`` if there are no shards ready."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:1
msgid "A list of latencies between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:3
msgid "This returns a list of tuples with elements ``(shard_id, latency)``."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.latencies:5
msgid "List[Tuple[:class:`int`, :class:`float`]]"
msgstr "List[Tuple[:class:`int`, :class:`float`]]"

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.get_shard:1
msgid "Optional[:class:`ShardInfo`]: Gets the shard information at a given shard ID or ``None`` if not found."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.shards:1
msgid "Returns a mapping of shard IDs to their respective info object."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.AutoShardedClient.shards:3
msgid "Mapping[int, :class:`ShardInfo`]"
msgstr "Mapping[int, :class:`ShardInfo`]"

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.on_shard_connect:3
msgid "Initialize application registration to first shard."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:5
msgid "Example: ::"
msgstr "Contoh: ::"

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:15
msgid "Indicates what status to change to. If ``None``, then :attr:`Status.online` is used."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:18
msgid "The shard_id to change the presence to. If not specified or ``None``, then it will change the presence of every shard the bot can see."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.change_presence:23
msgid "If the ``activity`` parameter is not of proper type."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.AutoShardedClient.is_ws_ratelimited:6
msgid "This implementation checks if any of the shards are rate limited. For more granular control, consider :meth:`ShardInfo.is_ws_ratelimited`."
msgstr ""

#: ../../api.rst:73
msgid "Application Info"
msgstr ""

#: ../../api.rst:76
msgid "AppInfo"
msgstr "AppInfo"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:1
msgid "Represents the application info for the bot provided by Discord."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:8
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:9
#: ../../../discord/team.py:docstring of discord.team.Team:7
#: ../../../discord/team.py:docstring of discord.team.Team:19
#: ../../../discord/team.py:docstring of discord.team.TeamMember:33
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:39
#: ../../api.rst:3027
#: ../../api.rst:3033
#: ../../api.rst:3078
#: ../../api.rst:3092
#: ../../api.rst:3114
#: ../../api.rst:3232
#: ../../api.rst:3240
#: ../../api.rst:3248
#: ../../api.rst:3269
#: ../../api.rst:3286
#: ../../api.rst:3355
#: ../../api.rst:3361
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:49
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:26
#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:13
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:29
#: ../../../discord/user.py:docstring of discord.user.ClientUser:31
#: ../../../discord/user.py:docstring of discord.user.User:31
#: ../../../discord/message.py:docstring of discord.message.Attachment:28
#: ../../../discord/message.py:docstring of discord.message.Attachment:34
#: ../../../discord/message.py:docstring of discord.message.Attachment.save:24
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:18
#: ../../../discord/message.py:docstring of discord.message.Message:119
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:30
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:37
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.id:3
#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.channel_id:3
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:36
#: ../../../discord/guild.py:docstring of discord.guild.Guild:54
#: ../../../discord/guild.py:docstring of discord.guild.Guild:66
#: ../../../discord/guild.py:docstring of discord.guild.Guild:72
#: ../../../discord/guild.py:docstring of discord.guild.Guild:120
#: ../../../discord/guild.py:docstring of discord.guild.Guild:178
#: ../../../discord/guild.py:docstring of discord.guild.Guild:184
#: ../../../discord/guild.py:docstring of discord.Guild.emoji_limit:3
#: ../../../discord/guild.py:docstring of discord.Guild.sticker_limit:5
#: ../../../discord/guild.py:docstring of discord.Guild.filesize_limit:3
#: ../../../discord/guild.py:docstring of discord.Guild.member_count:8
#: ../../../discord/guild.py:docstring of discord.Guild.shard_id:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:20
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:9
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:9
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:9
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:9
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:57
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:12
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:36
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:39
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:63
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:18
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:18
#: ../../../discord/role.py:docstring of discord.role.Role:41
#: ../../../discord/role.py:docstring of discord.role.Role:74
#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:28
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:37
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:56
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:72
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:90
#: ../../../discord/threads.py:docstring of discord.threads.Thread:39
#: ../../../discord/threads.py:docstring of discord.threads.Thread:45
#: ../../../discord/threads.py:docstring of discord.threads.Thread:51
#: ../../../discord/threads.py:docstring of discord.threads.Thread:67
#: ../../../discord/threads.py:docstring of discord.threads.Thread:73
#: ../../../discord/threads.py:docstring of discord.threads.Thread:79
#: ../../../discord/threads.py:docstring of discord.threads.Thread:118
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:27
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:33
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:37
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:43
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:50
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:37
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:50
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:56
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:62
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:39
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:58
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:64
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:70
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:23
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:35
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:39
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:46
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:39
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:37
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:51
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:34
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:34
#: ../../../discord/invite.py:docstring of discord.invite.Invite:53
#: ../../../discord/invite.py:docstring of discord.invite.Invite:90
#: ../../../discord/invite.py:docstring of discord.invite.Invite:97
#: ../../../discord/template.py:docstring of discord.template.Template:15
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:25
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:37
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:25
#: ../../../discord/widget.py:docstring of discord.widget.Widget:21
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:35
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:47
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:53
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:29
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:29
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:41
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:29
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:41
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:59
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:29
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:53
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:7
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:19
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:13
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:7
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:15
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:8
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:14
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:20
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:7
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:13
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:9
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:15
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:9
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:21
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:9
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:21
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:27
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:11
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:11
#: ../../../discord/object.py:docstring of discord.object.Object:32
#: ../../../discord/message.py:docstring of discord.message.MessageReference:18
#: ../../../discord/message.py:docstring of discord.message.PartialMessage:39
#: ../../../discord/flags.py:docstring of discord.flags.Intents:37
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:40
#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:27
#: ../../../discord/colour.py:docstring of discord.colour.Colour:32
#: ../../../discord/colour.py:docstring of discord.Colour.r:3
#: ../../../discord/colour.py:docstring of discord.Colour.g:3
#: ../../../discord/colour.py:docstring of discord.Colour.b:3
#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:46
#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:12
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:32
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:29
#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:28
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:3
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:21
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:27
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:8
#: ../../../discord/opus.py:docstring of discord.opus.OpusError:7
msgid ":class:`int`"
msgstr ":class:`int`"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:12
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:13
msgid "The application name."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:14
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:34
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:63
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:72
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:15
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:21
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:34
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:41
#: ../../../discord/team.py:docstring of discord.team.Team:13
#: ../../../discord/team.py:docstring of discord.team.TeamMember:27
#: ../../../discord/team.py:docstring of discord.team.TeamMember:39
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:17
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:23
#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:29
#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:23
#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:17
#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:18
#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:17
#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:7
#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:9
#: ../../../discord/utils.py:docstring of discord.utils.format_dt:34
#: ../../api.rst:2939
#: ../../api.rst:3086
#: ../../api.rst:3106
#: ../../api.rst:3207
#: ../../api.rst:3319
#: ../../api.rst:3327
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.url:3
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.url:3
#: ../../../discord/abc.py:docstring of discord.abc.User:15
#: ../../../discord/abc.py:docstring of discord.abc.User:21
#: ../../../discord/abc.py:docstring of discord.abc.User.display_name:3
#: ../../../discord/abc.py:docstring of discord.abc.User.mention:3
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:16
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.mention:3
#: ../../../discord/user.py:docstring of discord.user.ClientUser:25
#: ../../../discord/user.py:docstring of discord.user.ClientUser:37
#: ../../../discord/user.py:docstring of discord.ClientUser.display_name:7
#: ../../../discord/user.py:docstring of discord.ClientUser.mention:3
#: ../../../discord/user.py:docstring of discord.user.User:25
#: ../../../discord/user.py:docstring of discord.user.User:37
#: ../../../discord/user.py:docstring of discord.User.display_name:7
#: ../../../discord/user.py:docstring of discord.User.mention:3
#: ../../../discord/message.py:docstring of discord.message.Attachment:52
#: ../../../discord/message.py:docstring of discord.message.Attachment:59
#: ../../../discord/message.py:docstring of discord.message.Attachment:67
#: ../../../discord/asset.py:docstring of discord.Asset.url:3
#: ../../../discord/asset.py:docstring of discord.Asset.key:3
#: ../../../discord/message.py:docstring of discord.message.Message:43
#: ../../docstring of discord.Message.clean_content:15
#: ../../../discord/message.py:docstring of discord.Message.jump_url:3
#: ../../docstring of discord.Message.system_content:8
#: ../../../discord/guild.py:docstring of discord.guild.Guild:27
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:15
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:27
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:9
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:15
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:15
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:27
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:15
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:27
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:33
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:15
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:27
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:55
#: ../../../discord/member.py:docstring of discord.Member.raw_status:5
#: ../../../discord/member.py:docstring of discord.Member.mention:3
#: ../../../discord/member.py:docstring of discord.Member.display_name:7
#: ../../../discord/activity.py:docstring of discord.Spotify.name:3
#: ../../../discord/activity.py:docstring of discord.Spotify.title:3
#: ../../../discord/activity.py:docstring of discord.Spotify.artist:6
#: ../../../discord/activity.py:docstring of discord.Spotify.album:3
#: ../../../discord/activity.py:docstring of discord.Spotify.album_cover_url:3
#: ../../../discord/activity.py:docstring of discord.Spotify.track_id:3
#: ../../../discord/activity.py:docstring of discord.Spotify.track_url:5
#: ../../../discord/activity.py:docstring of discord.Spotify.party_id:3
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:33
#: ../../../discord/emoji.py:docstring of discord.Emoji.url:3
#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.url:5
#: ../../../discord/role.py:docstring of discord.role.Role:47
#: ../../../discord/role.py:docstring of discord.Role.mention:3
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:25
#: ../../../discord/channel.py:docstring of discord.TextChannel.mention:3
#: ../../../discord/threads.py:docstring of discord.threads.Thread:27
#: ../../../discord/threads.py:docstring of discord.Thread.mention:3
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:25
#: ../../../discord/channel.py:docstring of discord.StoreChannel.mention:3
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:25
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.mention:3
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:27
#: ../../../discord/channel.py:docstring of discord.StageChannel.mention:3
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:41
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:27
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.mention:3
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:28
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:28
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.mention:3
#: ../../../discord/invite.py:docstring of discord.invite.Invite:59
#: ../../../discord/invite.py:docstring of discord.Invite.id:3
#: ../../../discord/invite.py:docstring of discord.Invite.url:3
#: ../../../discord/template.py:docstring of discord.template.Template:9
#: ../../../discord/template.py:docstring of discord.template.Template:21
#: ../../../discord/template.py:docstring of discord.template.Template:27
#: ../../../discord/template.py:docstring of discord.Template.url:5
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:31
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.mention:3
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:31
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:37
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_name:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.mention:3
#: ../../../discord/widget.py:docstring of discord.widget.Widget:27
#: ../../../discord/widget.py:docstring of discord.Widget.json_url:3
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:23
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:29
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:23
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:41
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:23
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:35
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:53
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:23
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:35
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:23
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:35
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:66
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:51
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:17
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:17
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:30
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:39
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:46
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:53
#: ../../../discord/message.py:docstring of discord.MessageReference.jump_url:5
#: ../../../discord/message.py:docstring of discord.PartialMessage.jump_url:3
#: ../../../discord/components.py:docstring of discord.components.SelectOption:12
#: ../../../discord/components.py:docstring of discord.components.SelectOption:20
#: ../../../discord/activity.py:docstring of discord.activity.Game:30
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:55
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:3
#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:15
#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:14
msgid ":class:`str`"
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:18
msgid "The application owner."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:20
#: ../../api.rst:3632
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:45
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:39
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:63
#: ../../../discord/template.py:docstring of discord.template.Template:33
msgid ":class:`User`"
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:24
msgid "The application's team."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:28
msgid "Optional[:class:`Team`]"
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:32
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:19
msgid "The application description."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:38
msgid "Whether the bot can be invited by anyone or if it is locked to the application owner."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:41
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:48
#: ../../../discord/team.py:docstring of discord.team.TeamMember:51
#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:7
#: ../../api.rst:3039
#: ../../api.rst:3158
#: ../../api.rst:3166
#: ../../api.rst:3191
#: ../../api.rst:3199
#: ../../api.rst:3256
#: ../../api.rst:3335
#: ../../api.rst:3341
#: ../../api.rst:3347
#: ../../../discord/abc.py:docstring of discord.abc.User:33
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_synced:8
#: ../../../discord/user.py:docstring of discord.user.ClientUser:43
#: ../../../discord/user.py:docstring of discord.user.ClientUser:51
#: ../../../discord/user.py:docstring of discord.user.ClientUser:57
#: ../../../discord/user.py:docstring of discord.user.ClientUser:69
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:7
#: ../../../discord/user.py:docstring of discord.user.User:43
#: ../../../discord/user.py:docstring of discord.user.User:49
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:7
#: ../../../discord/message.py:docstring of discord.message.Attachment:85
#: ../../../discord/message.py:docstring of discord.message.Message:23
#: ../../../discord/message.py:docstring of discord.message.Message:85
#: ../../../discord/message.py:docstring of discord.message.Message:138
#: ../../../discord/components.py:docstring of discord.components.Button:35
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:49
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:42
#: ../../../discord/guild.py:docstring of discord.guild.Guild:82
#: ../../../discord/guild.py:docstring of discord.Guild.large:6
#: ../../../discord/guild.py:docstring of discord.Guild.chunked:9
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:33
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:33
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:33
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:39
#: ../../../discord/member.py:docstring of discord.member.Member:62
#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:7
#: ../../../discord/member.py:docstring of discord.member.VoiceState:7
#: ../../../discord/member.py:docstring of discord.member.VoiceState:13
#: ../../../discord/member.py:docstring of discord.member.VoiceState:19
#: ../../../discord/member.py:docstring of discord.member.VoiceState:25
#: ../../../discord/member.py:docstring of discord.member.VoiceState:33
#: ../../../discord/member.py:docstring of discord.member.VoiceState:39
#: ../../../discord/member.py:docstring of discord.member.VoiceState:49
#: ../../../discord/member.py:docstring of discord.member.VoiceState:67
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:45
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:51
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:57
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:69
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:38
#: ../../../discord/role.py:docstring of discord.role.Role:59
#: ../../../discord/role.py:docstring of discord.role.Role:81
#: ../../../discord/role.py:docstring of discord.role.Role:87
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:82
#: ../../../discord/channel.py:docstring of discord.TextChannel.permissions_synced:8
#: ../../../discord/threads.py:docstring of discord.threads.Thread:92
#: ../../../discord/threads.py:docstring of discord.threads.Thread:98
#: ../../../discord/threads.py:docstring of discord.threads.Thread:105
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:60
#: ../../../discord/channel.py:docstring of discord.StoreChannel.permissions_synced:8
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.permissions_synced:8
#: ../../../discord/channel.py:docstring of discord.StageChannel.permissions_synced:8
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:53
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:56
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.permissions_synced:8
#: ../../../discord/invite.py:docstring of discord.invite.Invite:71
#: ../../../discord/invite.py:docstring of discord.invite.Invite:84
#: ../../../discord/invite.py:docstring of discord.Invite.friend_invite:5
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:43
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:7
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:47
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:11
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:40
#: ../../../discord/message.py:docstring of discord.message.MessageReference:33
#: ../../../discord/components.py:docstring of discord.components.SelectOption:39
#: ../../docstring of discord.Intents.guilds:23
#: ../../docstring of discord.Intents.members:32
#: ../../docstring of discord.Intents.bans:10
#: ../../docstring of discord.Intents.emojis:6
#: ../../docstring of discord.Intents.emojis_and_stickers:21
#: ../../docstring of discord.Intents.integrations:12
#: ../../docstring of discord.Intents.webhooks:9
#: ../../docstring of discord.Intents.invites:10
#: ../../docstring of discord.Intents.voice_states:17
#: ../../docstring of discord.Intents.presences:20
#: ../../docstring of discord.Intents.messages:24
#: ../../docstring of discord.Intents.guild_messages:24
#: ../../docstring of discord.Intents.dm_messages:24
#: ../../docstring of discord.Intents.reactions:18
#: ../../docstring of discord.Intents.guild_reactions:18
#: ../../docstring of discord.Intents.dm_reactions:18
#: ../../docstring of discord.Intents.typing:11
#: ../../docstring of discord.Intents.guild_typing:11
#: ../../docstring of discord.Intents.dm_typing:11
#: ../../docstring of discord.MemberCacheFlags.voice:7
#: ../../docstring of discord.MemberCacheFlags.joined:8
#: ../../docstring of discord.ApplicationFlags.gateway_presence:4
#: ../../docstring of discord.ApplicationFlags.gateway_presence_limited:4
#: ../../docstring of discord.ApplicationFlags.gateway_guild_members:4
#: ../../docstring of discord.ApplicationFlags.gateway_guild_members_limited:4
#: ../../docstring of discord.ApplicationFlags.verification_pending_guild_limit:4
#: ../../docstring of discord.ApplicationFlags.embedded:3
#: ../../../discord/file.py:docstring of discord.file.File:36
#: ../../docstring of discord.Permissions.create_instant_invite:3
#: ../../docstring of discord.Permissions.kick_members:3
#: ../../docstring of discord.Permissions.ban_members:3
#: ../../docstring of discord.Permissions.administrator:5
#: ../../docstring of discord.Permissions.manage_channels:5
#: ../../docstring of discord.Permissions.manage_guild:3
#: ../../docstring of discord.Permissions.add_reactions:3
#: ../../docstring of discord.Permissions.view_audit_log:3
#: ../../docstring of discord.Permissions.priority_speaker:3
#: ../../docstring of discord.Permissions.stream:3
#: ../../docstring of discord.Permissions.read_messages:3
#: ../../docstring of discord.Permissions.view_channel:5
#: ../../docstring of discord.Permissions.send_messages:3
#: ../../docstring of discord.Permissions.send_tts_messages:3
#: ../../docstring of discord.Permissions.manage_messages:7
#: ../../docstring of discord.Permissions.embed_links:3
#: ../../docstring of discord.Permissions.attach_files:3
#: ../../docstring of discord.Permissions.read_message_history:3
#: ../../docstring of discord.Permissions.mention_everyone:3
#: ../../docstring of discord.Permissions.external_emojis:3
#: ../../docstring of discord.Permissions.use_external_emojis:5
#: ../../docstring of discord.Permissions.view_guild_insights:5
#: ../../docstring of discord.Permissions.connect:3
#: ../../docstring of discord.Permissions.speak:3
#: ../../docstring of discord.Permissions.mute_members:3
#: ../../docstring of discord.Permissions.deafen_members:3
#: ../../docstring of discord.Permissions.move_members:3
#: ../../docstring of discord.Permissions.use_voice_activation:3
#: ../../docstring of discord.Permissions.change_nickname:3
#: ../../docstring of discord.Permissions.manage_nicknames:3
#: ../../docstring of discord.Permissions.manage_roles:5
#: ../../docstring of discord.Permissions.manage_permissions:5
#: ../../docstring of discord.Permissions.manage_webhooks:3
#: ../../docstring of discord.Permissions.manage_emojis:3
#: ../../docstring of discord.Permissions.manage_emojis_and_stickers:5
#: ../../docstring of discord.Permissions.use_slash_commands:5
#: ../../docstring of discord.Permissions.request_to_speak:5
#: ../../docstring of discord.Permissions.manage_events:5
#: ../../docstring of discord.Permissions.manage_threads:5
#: ../../docstring of discord.Permissions.create_public_threads:5
#: ../../docstring of discord.Permissions.create_private_threads:5
#: ../../docstring of discord.Permissions.external_stickers:5
#: ../../docstring of discord.Permissions.use_external_stickers:5
#: ../../docstring of discord.Permissions.send_messages_in_threads:5
#: ../../docstring of discord.Permissions.start_embedded_activities:5
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:7
#: ../../docstring of discord.SystemChannelFlags.join_notifications:3
#: ../../docstring of discord.SystemChannelFlags.premium_subscriptions:3
#: ../../docstring of discord.SystemChannelFlags.guild_reminder_notifications:5
#: ../../docstring of discord.MessageFlags.crossposted:3
#: ../../docstring of discord.MessageFlags.is_crossposted:3
#: ../../docstring of discord.MessageFlags.suppress_embeds:3
#: ../../docstring of discord.MessageFlags.source_message_deleted:3
#: ../../docstring of discord.MessageFlags.urgent:5
#: ../../docstring of discord.MessageFlags.has_thread:5
#: ../../docstring of discord.MessageFlags.ephemeral:5
#: ../../docstring of discord.PublicUserFlags.staff:3
#: ../../docstring of discord.PublicUserFlags.partner:3
#: ../../docstring of discord.PublicUserFlags.hypesquad:3
#: ../../docstring of discord.PublicUserFlags.bug_hunter:3
#: ../../docstring of discord.PublicUserFlags.hypesquad_bravery:3
#: ../../docstring of discord.PublicUserFlags.hypesquad_brilliance:3
#: ../../docstring of discord.PublicUserFlags.hypesquad_balance:3
#: ../../docstring of discord.PublicUserFlags.early_supporter:3
#: ../../docstring of discord.PublicUserFlags.team_user:3
#: ../../docstring of discord.PublicUserFlags.system:3
#: ../../docstring of discord.PublicUserFlags.bug_hunter_level_2:3
#: ../../docstring of discord.PublicUserFlags.verified_bot:3
#: ../../docstring of discord.PublicUserFlags.verified_bot_developer:3
#: ../../docstring of discord.PublicUserFlags.early_verified_bot_developer:5
#: ../../docstring of discord.PublicUserFlags.discord_certified_moderator:5
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:20
#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:8
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:3
msgid ":class:`bool`"
msgstr ":class:`bool`"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:45
msgid "Whether the bot requires the completion of the full oauth2 code grant flow to join."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:52
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:25
msgid "A list of RPC origin URLs, if RPC is enabled."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:54
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:27
msgid "Optional[List[:class:`str`]]"
msgstr "Optional[List[:class:`str`]]"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:58
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:31
msgid "If this application is a game sold on Discord, this field will be the summary field for the store page of its primary SKU."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:67
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:38
msgid "The hex encoded key for verification in interactions and the GameSDK's `GetTicket <https://discord.com/developers/docs/game-sdk/applications#getticket>`_."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:76
msgid "If this application is a game sold on Discord, this field will be the guild to which it has been linked to."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:85
msgid "If this application is a game sold on Discord, this field will be the id of the \"Game SKU\" that is created, if it exists."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:95
msgid "If this application is a game sold on Discord, this field will be the URL slug that links to the store page."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:100
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:108
#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:116
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:47
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:53
#: ../../../discord/team.py:docstring of discord.team.TeamMember:45
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:52
#: ../../api.rst:3150
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:64
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:89
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:41
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:66
#: ../../../discord/user.py:docstring of discord.user.ClientUser:63
#: ../../../discord/message.py:docstring of discord.message.Attachment:75
#: ../../../discord/components.py:docstring of discord.components.Button:23
#: ../../../discord/components.py:docstring of discord.components.Button:29
#: ../../../discord/components.py:docstring of discord.components.Button:41
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:17
#: ../../../discord/components.py:docstring of discord.components.SelectMenu:23
#: ../../../discord/guild.py:docstring of discord.guild.Guild:112
#: ../../../discord/guild.py:docstring of discord.guild.Guild:191
#: ../../api.rst:3627
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:21
#: ../../../discord/member.py:docstring of discord.member.Member:54
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:32
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:49
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:45
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:57
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:52
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:55
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:61
#: ../../../discord/widget.py:docstring of discord.Widget.invite_url:3
#: ../../../discord/components.py:docstring of discord.components.SelectOption:27
#: ../../../discord/file.py:docstring of discord.file.File:30
#: ../../../discord/activity.py:docstring of discord.activity.Activity:22
#: ../../../discord/activity.py:docstring of discord.activity.Activity:28
#: ../../../discord/activity.py:docstring of discord.activity.Activity:40
#: ../../../discord/activity.py:docstring of discord.activity.Activity:46
#: ../../../discord/activity.py:docstring of discord.Activity.large_image_url:3
#: ../../../discord/activity.py:docstring of discord.Activity.small_image_url:3
#: ../../../discord/activity.py:docstring of discord.Activity.large_image_text:3
#: ../../../discord/activity.py:docstring of discord.Activity.small_image_text:3
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:29
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:35
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:41
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:49
#: ../../../discord/activity.py:docstring of discord.Streaming.twitch_name:6
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:27
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:5
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:3
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:3
msgid "Optional[:class:`str`]"
msgstr "Optional[:class:`str`]"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:104
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:45
msgid "The application's terms of service URL, if set."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.appinfo.AppInfo:112
#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:51
msgid "The application's privacy policy URL, if set."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.icon:1
#: ../../../discord/appinfo.py:docstring of discord.PartialAppInfo.icon:1
msgid "Retrieves the application's icon asset, if any."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.icon:3
#: ../../../discord/appinfo.py:docstring of discord.AppInfo.cover_image:5
#: ../../../discord/appinfo.py:docstring of discord.PartialAppInfo.icon:3
#: ../../../discord/team.py:docstring of discord.Team.icon:3
msgid "Optional[:class:`.Asset`]"
msgstr "Optional[:class:`.Asset`]"

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.cover_image:1
msgid "Retrieves the cover image on a store embed, if any."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.cover_image:3
msgid "This is only available if the application is a game sold on Discord."
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.guild:1
msgid "If this application is a game sold on Discord, this field will be the guild to which it has been linked"
msgstr ""

#: ../../../discord/appinfo.py:docstring of discord.AppInfo.guild:6
#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.guild:3
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.guild:5
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.guild:5
#: ../../../discord/message.py:docstring of discord.message.Message:200
#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:3
#: ../../docstring of discord.GuildSticker.guild:6
#: ../../docstring of discord.PartialMessage.guild:3
msgid "Optional[:class:`Guild`]"
msgstr "Optional[:class:`Guild`]"

#: ../../api.rst:84
msgid "PartialAppInfo"
msgstr "PartialAppInfo"

#: ../../../discord/appinfo.py:docstring of discord.appinfo.PartialAppInfo:1
msgid "Represents a partial AppInfo given by :func:`~discord.abc.GuildChannel.create_invite`"
msgstr ""

#: ../../api.rst:92
msgid "Team"
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:1
msgid "Represents an application team for a bot provided by Discord."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:5
msgid "The team ID."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:11
msgid "The team name"
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:17
msgid "The team's owner ID."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:23
msgid "A list of the members in the team"
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.Team:27
msgid "List[:class:`TeamMember`]"
msgstr "List[:class:`TeamMember`]"

#: ../../../discord/team.py:docstring of discord.Team.icon:1
msgid "Retrieves the team's icon asset, if any."
msgstr ""

#: ../../../discord/team.py:docstring of discord.Team.owner:1
msgid "The team's owner."
msgstr ""

#: ../../../discord/team.py:docstring of discord.Team.owner:3
msgid "Optional[:class:`TeamMember`]"
msgstr "Optional[:class:`TeamMember`]"

#: ../../api.rst:100
msgid "TeamMember"
msgstr "TeamMember"

#: ../../../discord/team.py:docstring of discord.team.TeamMember:1
msgid "Represents a team member in a team."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:7
msgid "Checks if two team members are equal."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:11
msgid "Checks if two team members are not equal."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:15
msgid "Return the team member's hash."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:19
msgid "Returns the team member's name with discriminator."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:25
msgid "The team member's username."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:31
msgid "The team member's unique ID."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:37
msgid "The team member's discriminator. This is given when the username has conflicts."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:43
msgid "The avatar hash the team member has. Could be None."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:49
#: ../../../discord/user.py:docstring of discord.user.ClientUser:41
#: ../../../discord/user.py:docstring of discord.user.User:41
msgid "Specifies if the user is a bot account."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:55
msgid "The team that the member is from."
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:57
msgid ":class:`Team`"
msgstr ":class:`Team`"

#: ../../../discord/team.py:docstring of discord.team.TeamMember:61
msgid "The membership state of the member (e.g. invited or accepted)"
msgstr ""

#: ../../../discord/team.py:docstring of discord.team.TeamMember:63
msgid ":class:`TeamMembershipState`"
msgstr ":class:`TeamMembershipState`"

#: ../../api.rst:108
msgid "Voice Related"
msgstr ""

#: ../../api.rst:111
msgid "VoiceClient"
msgstr "VoiceClient"

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:1
msgid "Represents a Discord voice connection."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:3
msgid "You do not create these, you typically get them from e.g. :meth:`VoiceChannel.connect`."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:8
msgid "In order to use PCM based AudioSources, you must have the opus library installed on your system and loaded through :func:`opus.load_opus`. Otherwise, your AudioSources must be opus encoded (e.g. using :class:`FFmpegOpusAudio`) or the library will not be able to transmit audio."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:15
msgid "The voice connection session ID."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:21
msgid "The voice connection token."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:27
msgid "The endpoint we are connecting to."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:33
msgid "The voice channel connected to."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:35
msgid ":class:`abc.Connectable`"
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient:39
msgid "The event loop that the voice client is running on."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.guild:1
msgid "The guild we're connected to, if applicable."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.user:1
msgid "The user connected to voice (i.e. ourselves)."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.user:3
#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:27
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:33
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:31
msgid ":class:`ClientUser`"
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.latency:1
msgid "Latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.latency:3
msgid "This could be referred to as the Discord Voice WebSocket latency and is an analogue of user's voice latencies as seen in the Discord client."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.average_latency:1
msgid "Average of most recent 20 HEARTBEAT latencies in seconds."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.disconnect:3
msgid "Disconnects this voice client from voice."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.move_to:3
msgid "Moves you to a different voice channel."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.move_to:5
msgid "The channel to move to. Must be a voice channel."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.is_connected:1
msgid "Indicates if the voice client is connected to voice."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:1
msgid "Plays an :class:`AudioSource`."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:3
msgid "The finalizer, ``after`` is called after the source has been exhausted or an error occurred."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:6
msgid "If an error happens while the audio player is running, the exception is caught and the audio player is then stopped.  If no after callback is passed, any caught exception will be displayed as if it were raised."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:10
msgid "The audio source we're reading from."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:12
msgid "The finalizer that is called after the stream is exhausted. This function must have a single parameter, ``error``, that denotes an optional exception that was raised during playing."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:17
msgid "Already playing audio or not connected."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:18
msgid "Source is not a :class:`AudioSource` or after is not a callable."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.play:19
msgid "Source is not opus encoded and opus is not loaded."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.is_playing:1
msgid "Indicates if we're currently playing audio."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.is_paused:1
msgid "Indicates if we're playing audio, but if we're paused."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.stop:1
msgid "Stops playing audio."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.pause:1
msgid "Pauses the audio playing."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.resume:1
msgid "Resumes the audio playing."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.source:1
msgid "The audio source being played, if playing."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.source:3
msgid "This property can also be used to change the audio source currently being played."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.VoiceClient.source:5
msgid "Optional[:class:`AudioSource`]"
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:1
msgid "Sends an audio packet composed of the data."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:3
msgid "You must be connected to play audio."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:5
msgid "The :term:`py:bytes-like object` denoting PCM or Opus voice data."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:7
msgid "Indicates if ``data`` should be encoded into Opus."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:10
msgid "You are not connected."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceClient.send_audio_packet:11
msgid "Encoding the data failed."
msgstr ""

#: ../../api.rst:120
msgid "VoiceProtocol"
msgstr "VoiceProtocol"

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:1
msgid "A class that represents the Discord voice protocol."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:3
msgid "This is an abstract class. The library provides a concrete implementation under :class:`VoiceClient`."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:6
msgid "This class allows you to implement a protocol to allow for an external method of sending voice, such as Lavalink_ or a native library implementation."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:9
msgid "These classes are passed to :meth:`abc.Connectable.connect <VoiceChannel.connect>`."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:13
msgid "The client (or its subclasses) that started the connection request."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol:15
msgid "The voice channel that is being connected to."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_state_update:3
msgid "An abstract method that is called when the client's voice state has changed. This corresponds to ``VOICE_STATE_UPDATE``."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_state_update:6
msgid "The raw `voice state payload`__.  .. _voice_state_update_payload: https://discord.com/developers/docs/resources/voice#voice-state-object  __ voice_state_update_payload_"
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_state_update:6
msgid "The raw `voice state payload`__."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_server_update:3
msgid "An abstract method that is called when initially connecting to voice. This corresponds to ``VOICE_SERVER_UPDATE``."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_server_update:6
msgid "The raw `voice server update payload`__.  .. _voice_server_update_payload: https://discord.com/developers/docs/topics/gateway#voice-server-update-voice-server-update-event-fields  __ voice_server_update_payload_"
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.on_voice_server_update:6
msgid "The raw `voice server update payload`__."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:3
msgid "An abstract method called when the client initiates the connection request."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:5
msgid "When a connection is requested initially, the library calls the constructor under ``__init__`` and then calls :meth:`connect`. If :meth:`connect` fails at some point then :meth:`disconnect` is called."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:9
msgid "Within this method, to start the voice connection flow it is recommended to use :meth:`Guild.change_voice_state` to start the flow. After which, :meth:`on_voice_server_update` and :meth:`on_voice_state_update` will be called. The order that these two are called is unspecified."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:14
msgid "The timeout for the connection."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.connect:16
msgid "Whether reconnection is expected."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.disconnect:3
msgid "An abstract method called when the client terminates the connection."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.disconnect:5
msgid "See :meth:`cleanup`."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.disconnect:7
msgid "Whether the disconnection was forced."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.cleanup:1
msgid "This method *must* be called to ensure proper clean-up during a disconnect."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.cleanup:3
msgid "It is advisable to call this from within :meth:`disconnect` when you are completely done with the voice protocol instance."
msgstr ""

#: ../../../discord/voice_client.py:docstring of discord.voice_client.VoiceProtocol.cleanup:6
msgid "This method removes it from the internal state cache that keeps track of currently alive voice clients. Failure to clean-up will cause subsequent connections to report that it's still connected."
msgstr ""

#: ../../api.rst:128
msgid "AudioSource"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource:1
msgid "Represents an audio stream."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource:3
msgid "The audio stream can be Opus encoded or not, however if the audio stream is not Opus encoded then the audio format must be 16-bit 48KHz stereo PCM."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource:8
msgid "The audio source reads are done in a separate thread."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:1
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:1
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:1
msgid "Reads 20ms worth of audio."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:3
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:3
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:3
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:3
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:3
msgid "Subclasses must implement this."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:5
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:5
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:5
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:5
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:5
msgid "If the audio is complete, then returning an empty :term:`py:bytes-like object` to signal this is the way to do so."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:8
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:8
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:8
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:8
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:8
msgid "If :meth:`~AudioSource.is_opus` method returns ``True``, then it must return 20ms worth of Opus encoded audio. Otherwise, it must be 20ms worth of 16-bit 48KHz stereo PCM, which is about 3,840 bytes per frame (20ms worth of audio)."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:13
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:13
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:13
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:13
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:13
msgid "A bytes like object that represents the PCM or Opus data."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.read:14
#: ../../../discord/player.py:docstring of discord.player.PCMAudio.read:14
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.read:14
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.read:14
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.read:14
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:20
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:10
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:10
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:10
msgid ":class:`bytes`"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.is_opus:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio.is_opus:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.is_opus:1
msgid "Checks if the audio source is already encoded in Opus."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.cleanup:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegAudio.cleanup:1
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.cleanup:1
msgid "Called when clean-up is needed to be done."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.AudioSource.cleanup:3
#: ../../../discord/player.py:docstring of discord.player.FFmpegAudio.cleanup:3
#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer.cleanup:3
msgid "Useful for clearing buffer data or processes after it is done playing audio."
msgstr ""

#: ../../api.rst:136
msgid "PCMAudio"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMAudio:1
msgid "Represents raw 16-bit 48KHz stereo PCM audio source."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMAudio:5
msgid "A file-like object that reads byte data representing raw PCM."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMAudio:7
msgid ":term:`py:file object`"
msgstr ""

#: ../../api.rst:144
msgid "FFmpegAudio"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegAudio:1
msgid "Represents an FFmpeg (or AVConv) based AudioSource."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegAudio:3
msgid "User created AudioSources using FFmpeg differently from how :class:`FFmpegPCMAudio` and :class:`FFmpegOpusAudio` work should subclass this."
msgstr ""

#: ../../api.rst:152
msgid "FFmpegPCMAudio"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:1
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:1
msgid "An audio source from FFmpeg (or AVConv)."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:3
msgid "This launches a sub-process to a specific input file given."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:7
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:18
msgid "You must have the ffmpeg or avconv executable in your path environment variable in order for this to work."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:10
msgid "The input that ffmpeg will take and convert to PCM bytes. If ``pipe`` is ``True`` then this is a file-like object that is passed to the stdin of ffmpeg."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:14
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:39
msgid "The executable name (and path) to use. Defaults to ``ffmpeg``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:16
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:41
msgid "If ``True``, denotes that ``source`` parameter will be passed to the stdin of ffmpeg. Defaults to ``False``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:19
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:44
msgid "A file-like object to pass to the Popen constructor. Could also be an instance of ``subprocess.PIPE``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:22
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:47
msgid "Extra command line arguments to pass to ffmpeg before the ``-i`` flag."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:24
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:49
msgid "Extra command line arguments to pass to ffmpeg after the ``-i`` flag."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegPCMAudio:27
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:52
msgid "The subprocess failed to be created."
msgstr ""

#: ../../api.rst:160
msgid "FFmpegOpusAudio"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:3
msgid "This launches a sub-process to a specific input file given.  However, rather than producing PCM packets like :class:`FFmpegPCMAudio` does that need to be encoded to Opus, this class produces Opus packets, skipping the encoding step done by the library."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:7
msgid "Alternatively, instead of instantiating this class directly, you can use :meth:`FFmpegOpusAudio.from_probe` to probe for bitrate and codec information.  This can be used to opportunistically skip pointless re-encoding of existing Opus audio data for a boost in performance at the cost of a short initial delay to gather the information. The same can be achieved by passing ``copy`` to the ``codec`` parameter, but only if you know that the input source is Opus encoded beforehand."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:21
msgid "The input that ffmpeg will take and convert to Opus bytes. If ``pipe`` is ``True`` then this is a file-like object that is passed to the stdin of ffmpeg."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:25
msgid "The bitrate in kbps to encode the output to.  Defaults to ``128``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:27
msgid "The codec to use to encode the audio data.  Normally this would be just ``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to opportunistically skip pointlessly re-encoding Opus audio data by passing ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``.  .. warning::      Do not provide this parameter unless you are certain that the audio input is     already Opus encoded.  For typical use :meth:`FFmpegOpusAudio.from_probe`     should be used to determine the proper value for this parameter."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:27
msgid "The codec to use to encode the audio data.  Normally this would be just ``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to opportunistically skip pointlessly re-encoding Opus audio data by passing ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio:35
msgid "Do not provide this parameter unless you are certain that the audio input is already Opus encoded.  For typical use :meth:`FFmpegOpusAudio.from_probe` should be used to determine the proper value for this parameter."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:3
msgid "A factory method that creates a :class:`FFmpegOpusAudio` after probing the input source for audio codec and bitrate information."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:8
msgid "Use this function to create an :class:`FFmpegOpusAudio` instance instead of the constructor: ::"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:13
msgid "If you are on Windows and don't have ffprobe installed, use the ``fallback`` method to probe using ffmpeg instead: ::"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:19
msgid "Using a custom method of determining codec and bitrate: ::"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:28
msgid "Identical to the ``source`` parameter for the constructor."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:29
msgid "The probing method used to determine bitrate and codec information. As a string, valid values are ``native`` to use ffprobe (or avprobe) and ``fallback`` to use ffmpeg (or avconv).  As a callable, it must take two string arguments, ``source`` and ``executable``.  Both parameters are the same values passed to this factory function. ``executable`` will default to ``ffmpeg`` if not provided as a keyword argument."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:35
msgid "The remaining parameters to be passed to the :class:`FFmpegOpusAudio` constructor, excluding ``bitrate`` and ``codec``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:38
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:10
msgid "Invalid probe method, must be ``'native'`` or ``'fallback'``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:39
#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:11
msgid "Invalid value for ``probe`` parameter, must be :class:`str` or a callable."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:41
msgid "An instance of this class."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.from_probe:42
msgid ":class:`FFmpegOpusAudio`"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:3
msgid "Probes the input source for bitrate and codec information."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:5
msgid "Identical to the ``source`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:6
msgid "Identical to the ``method`` parameter for :meth:`FFmpegOpusAudio.from_probe`."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:7
msgid "Identical to the ``executable`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:13
msgid "A 2-tuple with the codec and bitrate of the input source."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.FFmpegOpusAudio.probe:14
msgid "Optional[Tuple[Optional[:class:`str`], Optional[:class:`int`]]]"
msgstr ""

#: ../../api.rst:168
msgid "PCMVolumeTransformer"
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:1
msgid "Transforms a previous :class:`AudioSource` to have volume controls."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:3
msgid "This does not work on audio sources that have :meth:`AudioSource.is_opus` set to ``True``."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:6
msgid "The original AudioSource to transform."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:8
msgid "The initial volume to set it to. See :attr:`volume` for more info."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:12
msgid "Not an audio source."
msgstr ""

#: ../../../discord/player.py:docstring of discord.player.PCMVolumeTransformer:13
msgid "The audio source is opus encoded."
msgstr ""

#: ../../../discord/player.py:docstring of discord.PCMVolumeTransformer.volume:1
msgid "Retrieves or sets the volume as a floating point percentage (e.g. ``1.0`` for 100%)."
msgstr ""

#: ../../api.rst:176
msgid "Opus Library"
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:1
msgid "Loads the libopus shared library for use with voice."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:3
msgid "If this function is not called then the library uses the function :func:`ctypes.util.find_library` and then loads that one if available."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:6
msgid "Not loading a library and attempting to use PCM based AudioSources will lead to voice not working."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:9
msgid "This function propagates the exceptions thrown."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:13
msgid "The bitness of the library must match the bitness of your python interpreter. If the library is 64-bit then your python interpreter must be 64-bit as well. Usually if there's a mismatch in bitness then the load will throw an exception."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:20
msgid "On Windows, this function should not need to be called as the binaries are automatically loaded."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:25
msgid "On Windows, the .dll extension is not necessary. However, on Linux the full extension is required to load the library, e.g. ``libopus.so.1``. On Linux however, :func:`ctypes.util.find_library` will usually find the library automatically without you having to call this."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.load_opus:30
msgid "The filename of the shared library."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:1
msgid "Function to check if opus lib is successfully loaded either via the :func:`ctypes.util.find_library` call of :func:`load_opus`."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:4
msgid "This must return ``True`` for voice to work."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.is_loaded:6
msgid "Indicates if the opus library has been loaded."
msgstr ""

#: ../../api.rst:185
msgid "Event Reference"
msgstr ""

#: ../../api.rst:187
msgid "This section outlines the different types of events listened by :class:`Client`."
msgstr ""

#: ../../api.rst:189
msgid "There are two ways to register an event, the first way is through the use of :meth:`Client.event`. The second way is through subclassing :class:`Client` and overriding the specific events. For example: ::"
msgstr ""

#: ../../api.rst:204
msgid "If an event handler raises an exception, :func:`on_error` will be called to handle it, which defaults to print a traceback and ignoring the exception."
msgstr ""

#: ../../api.rst:209
msgid "All the events must be a |coroutine_link|_. If they aren't, then you might get unexpected errors. In order to turn a function into a coroutine they must be ``async def`` functions."
msgstr ""

#: ../../api.rst:215
msgid "Called when the client has successfully connected to Discord. This is not the same as the client being fully prepared, see :func:`on_ready` for that."
msgstr ""

#: ../../api.rst:218
msgid "The warnings on :func:`on_ready` also apply."
msgstr ""

#: ../../api.rst:222
msgid "Similar to :func:`on_connect` except used by :class:`AutoShardedClient` to denote when a particular shard ID has connected to Discord."
msgstr ""

#: ../../api.rst:227
msgid "The shard ID that has connected."
msgstr ""

#: ../../api.rst:232
msgid "Called when the client has disconnected from Discord, or a connection attempt to Discord has failed. This could happen either through the internet being disconnected, explicit calls to close, or Discord terminating the connection one way or the other."
msgstr ""

#: ../../api.rst:236
msgid "This function can be called many times without a corresponding :func:`on_connect` call."
msgstr ""

#: ../../api.rst:240
msgid "Similar to :func:`on_disconnect` except used by :class:`AutoShardedClient` to denote when a particular shard ID has disconnected from Discord."
msgstr ""

#: ../../api.rst:245
msgid "The shard ID that has disconnected."
msgstr ""

#: ../../api.rst:250
msgid "Called when the client is done preparing the data received from Discord. Usually after login is successful and the :attr:`Client.guilds` and co. are filled up."
msgstr ""

#: ../../api.rst:255
msgid "This function is not guaranteed to be the first event called. Likewise, this function is **not** guaranteed to only be called once. This library implements reconnection logic and thus will end up calling this event whenever a RESUME request fails."
msgstr ""

#: ../../api.rst:262
msgid "Similar to :func:`on_ready` except used by :class:`AutoShardedClient` to denote when a particular shard ID has become ready."
msgstr ""

#: ../../api.rst:265
msgid "The shard ID that is ready."
msgstr ""

#: ../../api.rst:270
msgid "Called when the client has resumed a session."
msgstr ""

#: ../../api.rst:274
msgid "Similar to :func:`on_resumed` except used by :class:`AutoShardedClient` to denote when a particular shard ID has resumed a session."
msgstr ""

#: ../../api.rst:279
msgid "The shard ID that has resumed."
msgstr ""

#: ../../api.rst:284
msgid "Usually when an event raises an uncaught exception, a traceback is printed to stderr and the exception is ignored. If you want to change this behaviour and handle the exception for whatever reason yourself, this event can be overridden. Which, when done, will suppress the default action of printing the traceback."
msgstr ""

#: ../../api.rst:290
msgid "The information of the exception raised and the exception itself can be retrieved with a standard call to :func:`sys.exc_info`."
msgstr ""

#: ../../api.rst:293
msgid "If you want exception to propagate out of the :class:`Client` class you can define an ``on_error`` handler consisting of a single empty :ref:`raise statement <py:raise>`. Exceptions raised by ``on_error`` will not be handled in any way by :class:`Client`."
msgstr ""

#: ../../api.rst:300
msgid "``on_error`` will only be dispatched to :meth:`Client.event`."
msgstr ""

#: ../../api.rst:302
msgid "It will not be received by :meth:`Client.wait_for`, or, if used, :ref:`ext_commands_api_bot` listeners such as :meth:`~ext.commands.Bot.listen` or :meth:`~ext.commands.Cog.listener`."
msgstr ""

#: ../../api.rst:306
msgid "The name of the event that raised the exception."
msgstr ""

#: ../../api.rst:309
msgid "The positional arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:311
msgid "The keyword arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:316
msgid "Called whenever a websocket event is received from the WebSocket."
msgstr ""

#: ../../api.rst:318
msgid "This is mainly useful for logging how many events you are receiving from the Discord gateway."
msgstr ""

#: ../../api.rst:323
msgid "The event type from Discord that is received, e.g. ``'READY'``."
msgstr ""

#: ../../api.rst:328
msgid "Called whenever a message is completely received from the WebSocket, before it's processed and parsed. This event is always dispatched when a complete message is received and the passed data is not parsed in any way."
msgstr ""

#: ../../api.rst:332
#: ../../api.rst:351
msgid "This is only really useful for grabbing the WebSocket stream and debugging purposes."
msgstr ""

#: ../../api.rst:335
#: ../../api.rst:354
msgid "This requires setting the ``enable_debug_events`` setting in the :class:`Client`."
msgstr ""

#: ../../api.rst:339
msgid "This is only for the messages received from the client WebSocket. The voice WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:342
msgid "The message passed in from the WebSocket library."
msgstr ""

#: ../../api.rst:347
msgid "Called whenever a send operation is done on the WebSocket before the message is sent. The passed parameter is the message that is being sent to the WebSocket."
msgstr ""

#: ../../api.rst:358
msgid "This is only for the messages sent from the client WebSocket. The voice WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:361
msgid "The message that is about to be passed on to the WebSocket library. It can be :class:`bytes` to denote a binary message or :class:`str` to denote a regular text message."
msgstr ""

#: ../../api.rst:367
msgid "Called when someone begins typing a message."
msgstr ""

#: ../../api.rst:369
msgid "The ``channel`` parameter can be a :class:`abc.Messageable` instance. Which could either be :class:`TextChannel`, :class:`GroupChannel`, or :class:`DMChannel`."
msgstr ""

#: ../../api.rst:373
msgid "If the ``channel`` is a :class:`TextChannel` then the ``user`` parameter is a :class:`Member`, otherwise it is a :class:`User`."
msgstr ""

#: ../../api.rst:376
msgid "This requires :attr:`Intents.typing` to be enabled."
msgstr ""

#: ../../api.rst:378
msgid "The location where the typing originated from."
msgstr ""

#: ../../api.rst:380
msgid "The user that started typing."
msgstr ""

#: ../../api.rst:382
msgid "When the typing started as an aware datetime in UTC."
msgstr ""

#: ../../api.rst:387
msgid "Called when a :class:`Message` is created and sent."
msgstr ""

#: ../../api.rst:389
#: ../../api.rst:412
#: ../../api.rst:429
#: ../../api.rst:442
#: ../../api.rst:455
#: ../../api.rst:481
#: ../../api.rst:507
#: ../../api.rst:654
msgid "This requires :attr:`Intents.messages` to be enabled."
msgstr ""

#: ../../api.rst:393
msgid "Your bot's own messages and private messages are sent through this event. This can lead cases of 'recursion' depending on how your bot was programmed. If you want the bot to not reply to itself, consider checking the user IDs. Note that :class:`~ext.commands.Bot` does not have this problem."
msgstr ""

#: ../../api.rst:399
msgid "The current message."
msgstr ""

#: ../../api.rst:404
msgid "Called when a message is deleted. If the message is not found in the internal message cache, then this event will not be called. Messages might not be in cache if the message is too old or the client is participating in high traffic guilds."
msgstr ""

#: ../../api.rst:409
msgid "If this occurs increase the :class:`max_messages <Client>` parameter or use the :func:`on_raw_message_delete` event instead."
msgstr ""

#: ../../api.rst:414
msgid "The deleted message."
msgstr ""

#: ../../api.rst:419
msgid "Called when messages are bulk deleted. If none of the messages deleted are found in the internal message cache, then this event will not be called. If individual messages were not found in the internal message cache, this event will still be called, but the messages not found will not be included in the messages list. Messages might not be in cache if the message is too old or the client is participating in high traffic guilds."
msgstr ""

#: ../../api.rst:426
msgid "If this occurs increase the :class:`max_messages <Client>` parameter or use the :func:`on_raw_bulk_message_delete` event instead."
msgstr ""

#: ../../api.rst:431
msgid "The messages that have been deleted."
msgstr ""

#: ../../api.rst:436
msgid "Called when a message is deleted. Unlike :func:`on_message_delete`, this is called regardless of the message being in the internal message cache or not."
msgstr ""

#: ../../api.rst:439
msgid "If the message is found in the message cache, it can be accessed via :attr:`RawMessageDeleteEvent.cached_message`"
msgstr ""

#: ../../api.rst:444
#: ../../api.rst:457
#: ../../api.rst:509
#: ../../api.rst:544
#: ../../api.rst:576
#: ../../api.rst:599
#: ../../api.rst:624
#: ../../api.rst:819
#: ../../api.rst:831
msgid "The raw event payload data."
msgstr ""

#: ../../api.rst:449
msgid "Called when a bulk delete is triggered. Unlike :func:`on_bulk_message_delete`, this is called regardless of the messages being in the internal message cache or not."
msgstr ""

#: ../../api.rst:452
msgid "If the messages are found in the message cache, they can be accessed via :attr:`RawBulkMessageDeleteEvent.cached_messages`"
msgstr ""

#: ../../api.rst:462
msgid "Called when a :class:`Message` receives an update event. If the message is not found in the internal message cache, then these events will not be called. Messages might not be in cache if the message is too old or the client is participating in high traffic guilds."
msgstr ""

#: ../../api.rst:467
msgid "If this occurs increase the :class:`max_messages <Client>` parameter or use the :func:`on_raw_message_edit` event instead."
msgstr ""

#: ../../api.rst:470
msgid "The following non-exhaustive cases trigger this event:"
msgstr ""

#: ../../api.rst:472
msgid "A message has been pinned or unpinned."
msgstr ""

#: ../../api.rst:473
msgid "The message content has been changed."
msgstr ""

#: ../../api.rst:474
msgid "The message has received an embed."
msgstr ""

#: ../../api.rst:476
msgid "For performance reasons, the embed server does not do this in a \"consistent\" manner."
msgstr ""

#: ../../api.rst:478
msgid "The message's embeds were suppressed or unsuppressed."
msgstr ""

#: ../../api.rst:479
msgid "A call message has received an update to its participants or ending time."
msgstr ""

#: ../../api.rst:483
msgid "The previous version of the message."
msgstr ""

#: ../../api.rst:485
msgid "The current version of the message."
msgstr ""

#: ../../api.rst:490
msgid "Called when a message is edited. Unlike :func:`on_message_edit`, this is called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:493
msgid "If the message is found in the message cache, it can be accessed via :attr:`RawMessageUpdateEvent.cached_message`. The cached message represents the message before it has been edited. For example, if the content of a message is modified and triggers the :func:`on_raw_message_edit` coroutine, the :attr:`RawMessageUpdateEvent.cached_message` will return a :class:`Message` object that represents the message before the content was modified."
msgstr ""

#: ../../api.rst:499
msgid "Due to the inherently raw nature of this event, the data parameter coincides with the raw data given by the `gateway <https://discord.com/developers/docs/topics/gateway#message-update>`_."
msgstr ""

#: ../../api.rst:502
msgid "Since the data payload can be partial, care must be taken when accessing stuff in the dictionary. One example of a common case of partial data is when the ``'content'`` key is inaccessible. This denotes an \"embed\" only edit, which is an edit in which only the embeds are updated by the Discord embed server."
msgstr ""

#: ../../api.rst:514
msgid "Called when a message has a reaction added to it. Similar to :func:`on_message_edit`, if the message is not found in the internal message cache, then this event will not be called. Consider using :func:`on_raw_reaction_add` instead."
msgstr ""

#: ../../api.rst:520
msgid "To get the :class:`Message` being reacted, access it via :attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:522
#: ../../api.rst:542
#: ../../api.rst:574
#: ../../api.rst:585
#: ../../api.rst:597
#: ../../api.rst:608
#: ../../api.rst:620
msgid "This requires :attr:`Intents.reactions` to be enabled."
msgstr ""

#: ../../api.rst:526
msgid "This doesn't require :attr:`Intents.members` within a guild context, but due to Discord not providing updated user information in a direct message it's required for direct messages to receive this event. Consider using :func:`on_raw_reaction_add` if you need this and do not otherwise want to enable the members intent."
msgstr ""

#: ../../api.rst:532
#: ../../api.rst:564
msgid "The current state of the reaction."
msgstr ""

#: ../../api.rst:534
#: ../../api.rst:566
msgid "The user who added the reaction."
msgstr ""

#: ../../api.rst:539
msgid "Called when a message has a reaction added. Unlike :func:`on_reaction_add`, this is called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:549
msgid "Called when a message has a reaction removed from it. Similar to on_message_edit, if the message is not found in the internal message cache, then this event will not be called."
msgstr ""

#: ../../api.rst:555
msgid "To get the message being reacted, access it via :attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:557
msgid "This requires both :attr:`Intents.reactions` and :attr:`Intents.members` to be enabled."
msgstr ""

#: ../../api.rst:561
msgid "Consider using :func:`on_raw_reaction_remove` if you need this and do not want to enable the members intent."
msgstr ""

#: ../../api.rst:571
msgid "Called when a message has a reaction removed. Unlike :func:`on_reaction_remove`, this is called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:581
msgid "Called when a message has all its reactions removed from it. Similar to :func:`on_message_edit`, if the message is not found in the internal message cache, then this event will not be called. Consider using :func:`on_raw_reaction_clear` instead."
msgstr ""

#: ../../api.rst:587
msgid "The message that had its reactions cleared."
msgstr ""

#: ../../api.rst:589
msgid "The reactions that were removed."
msgstr ""

#: ../../api.rst:594
msgid "Called when a message has all its reactions removed. Unlike :func:`on_reaction_clear`, this is called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:604
msgid "Called when a message has a specific reaction removed from it. Similar to :func:`on_message_edit`, if the message is not found in the internal message cache, then this event will not be called. Consider using :func:`on_raw_reaction_clear_emoji` instead."
msgstr ""

#: ../../api.rst:612
msgid "The reaction that got cleared."
msgstr ""

#: ../../api.rst:617
msgid "Called when a message has a specific reaction removed from it. Unlike :func:`on_reaction_clear_emoji` this is called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:629
msgid "Called when an interaction happened."
msgstr ""

#: ../../api.rst:631
msgid "This currently happens due to slash command invocations or components being used."
msgstr ""

#: ../../api.rst:635
msgid "This is a low level function that is not generally meant to be used. If you are working with components, consider using the callbacks associated with the :class:`~discord.ui.View` instead as it provides a nicer user experience."
msgstr ""

#: ../../api.rst:641
msgid "The interaction data."
msgstr ""

#: ../../api.rst:646
msgid "Called after the bot has registered every application commands with Discord."
msgstr ""

#: ../../api.rst:652
msgid "Called whenever a private group DM is updated. e.g. changed name or topic."
msgstr ""

#: ../../api.rst:656
msgid "The updated group channel's old info."
msgstr ""

#: ../../api.rst:658
msgid "The updated group channel's new info."
msgstr ""

#: ../../api.rst:663
msgid "Called whenever a message is pinned or unpinned from a private channel."
msgstr ""

#: ../../api.rst:665
msgid "The private channel that had its pins updated."
msgstr ""

#: ../../api.rst:667
#: ../../api.rst:701
msgid "The latest message that was pinned as an aware datetime in UTC. Could be ``None``."
msgstr ""

#: ../../api.rst:673
msgid "Called whenever a guild channel is deleted or created."
msgstr ""

#: ../../api.rst:675
msgid "Note that you can get the guild from :attr:`~abc.GuildChannel.guild`."
msgstr ""

#: ../../api.rst:677
#: ../../api.rst:686
#: ../../api.rst:697
#: ../../api.rst:711
#: ../../api.rst:724
#: ../../api.rst:744
#: ../../api.rst:769
#: ../../api.rst:827
#: ../../api.rst:910
#: ../../api.rst:929
#: ../../api.rst:943
#: ../../api.rst:957
#: ../../api.rst:966
#: ../../api.rst:1007
msgid "This requires :attr:`Intents.guilds` to be enabled."
msgstr ""

#: ../../api.rst:679
msgid "The guild channel that got created or deleted."
msgstr ""

#: ../../api.rst:684
msgid "Called whenever a guild channel is updated. e.g. changed name, topic, permissions."
msgstr ""

#: ../../api.rst:688
msgid "The updated guild channel's old info."
msgstr ""

#: ../../api.rst:690
msgid "The updated guild channel's new info."
msgstr ""

#: ../../api.rst:695
msgid "Called whenever a message is pinned or unpinned from a guild channel."
msgstr ""

#: ../../api.rst:699
msgid "The guild channel that had its pins updated."
msgstr ""

#: ../../api.rst:706
msgid "Called whenever a thread is joined or created. Note that from the API's perspective there is no way to differentiate between a thread being created or the bot joining a thread."
msgstr ""

#: ../../api.rst:709
#: ../../api.rst:722
#: ../../api.rst:742
msgid "Note that you can get the guild from :attr:`Thread.guild`."
msgstr ""

#: ../../api.rst:715
msgid "The thread that got joined."
msgstr ""

#: ../../api.rst:720
msgid "Called whenever a thread is removed. This is different from a thread being deleted."
msgstr ""

#: ../../api.rst:728
msgid "Due to technical limitations, this event might not be called as soon as one expects. Since the library tracks thread membership locally, the API only sends updated thread membership status upon being synced by joining a thread."
msgstr ""

#: ../../api.rst:735
msgid "The thread that got removed."
msgstr ""

#: ../../api.rst:740
msgid "Called whenever a thread is deleted."
msgstr ""

#: ../../api.rst:748
msgid "The thread that got deleted."
msgstr ""

#: ../../api.rst:754
msgid "Called when a :class:`ThreadMember` leaves or joins a :class:`Thread`."
msgstr ""

#: ../../api.rst:756
msgid "You can get the thread a member belongs in by accessing :attr:`ThreadMember.thread`."
msgstr ""

#: ../../api.rst:758
#: ../../api.rst:848
#: ../../api.rst:863
#: ../../api.rst:898
msgid "This requires :attr:`Intents.members` to be enabled."
msgstr ""

#: ../../api.rst:762
#: ../../api.rst:850
msgid "The member who joined or left."
msgstr ""

#: ../../api.rst:767
msgid "Called whenever a thread is updated."
msgstr ""

#: ../../api.rst:773
msgid "The updated thread's old info."
msgstr ""

#: ../../api.rst:775
msgid "The updated thread's new info."
msgstr ""

#: ../../api.rst:780
msgid "Called whenever an integration is created, modified, or removed from a guild."
msgstr ""

#: ../../api.rst:782
#: ../../api.rst:793
#: ../../api.rst:804
#: ../../api.rst:815
msgid "This requires :attr:`Intents.integrations` to be enabled."
msgstr ""

#: ../../api.rst:786
msgid "The guild that had its integrations updated."
msgstr ""

#: ../../api.rst:791
msgid "Called when an integration is created."
msgstr ""

#: ../../api.rst:797
#: ../../api.rst:808
msgid "The integration that was created."
msgstr ""

#: ../../api.rst:802
msgid "Called when an integration is updated."
msgstr ""

#: ../../api.rst:813
msgid "Called when an integration is deleted."
msgstr ""

#: ../../api.rst:824
msgid "Called whenever a thread is deleted. Unlike :func:`on_thread_delete` this is called regardless of the thread being in the internal thread cache or not."
msgstr ""

#: ../../api.rst:836
msgid "Called whenever a webhook is created, modified, or removed from a guild channel."
msgstr ""

#: ../../api.rst:838
msgid "This requires :attr:`Intents.webhooks` to be enabled."
msgstr ""

#: ../../api.rst:840
msgid "The channel that had its webhooks updated."
msgstr ""

#: ../../api.rst:846
msgid "Called when a :class:`Member` leaves or joins a :class:`Guild`."
msgstr ""

#: ../../api.rst:855
msgid "Called when a :class:`Member` updates their profile."
msgstr ""

#: ../../api.rst:857
#: ../../api.rst:874
#: ../../api.rst:892
msgid "This is called when one or more of the following things change:"
msgstr ""

#: ../../api.rst:859
msgid "nickname"
msgstr ""

#: ../../api.rst:860
#: ../../../discord/member.py:docstring of discord.member.Member.edit:16
msgid "roles"
msgstr ""

#: ../../api.rst:861
msgid "pending"
msgstr ""

#: ../../api.rst:865
#: ../../api.rst:883
msgid "The updated member's old info."
msgstr ""

#: ../../api.rst:867
#: ../../api.rst:885
msgid "The updated member's updated info."
msgstr ""

#: ../../api.rst:872
msgid "Called when a :class:`Member` updates their presence."
msgstr ""

#: ../../api.rst:876
msgid "status"
msgstr ""

#: ../../api.rst:877
msgid "activity"
msgstr ""

#: ../../api.rst:879
msgid "This requires :attr:`Intents.presences` and :attr:`Intents.members` to be enabled."
msgstr ""

#: ../../api.rst:890
msgid "Called when a :class:`User` updates their profile."
msgstr ""

#: ../../api.rst:894
msgid "avatar"
msgstr ""

#: ../../api.rst:895
msgid "username"
msgstr ""

#: ../../api.rst:896
msgid "discriminator"
msgstr ""

#: ../../api.rst:900
msgid "The updated user's old info."
msgstr ""

#: ../../api.rst:902
msgid "The updated user's updated info."
msgstr ""

#: ../../api.rst:907
msgid "Called when a :class:`Guild` is either created by the :class:`Client` or when the :class:`Client` joins a guild."
msgstr ""

#: ../../api.rst:912
msgid "The guild that was joined."
msgstr ""

#: ../../api.rst:917
msgid "Called when a :class:`Guild` is removed from the :class:`Client`."
msgstr ""

#: ../../api.rst:919
msgid "This happens through, but not limited to, these circumstances:"
msgstr ""

#: ../../api.rst:921
msgid "The client got banned."
msgstr ""

#: ../../api.rst:922
msgid "The client got kicked."
msgstr ""

#: ../../api.rst:923
msgid "The client left the guild."
msgstr ""

#: ../../api.rst:924
msgid "The client or the guild owner deleted the guild."
msgstr ""

#: ../../api.rst:926
msgid "In order for this event to be invoked then the :class:`Client` must have been part of the guild to begin with. (i.e. it is part of :attr:`Client.guilds`)"
msgstr ""

#: ../../api.rst:931
msgid "The guild that got removed."
msgstr ""

#: ../../api.rst:936
msgid "Called when a :class:`Guild` updates, for example:"
msgstr ""

#: ../../api.rst:938
msgid "Changed name"
msgstr ""

#: ../../api.rst:939
msgid "Changed AFK channel"
msgstr ""

#: ../../api.rst:940
msgid "Changed AFK timeout"
msgstr ""

#: ../../api.rst:941
msgid "etc"
msgstr ""

#: ../../api.rst:945
msgid "The guild prior to being updated."
msgstr ""

#: ../../api.rst:947
msgid "The guild after being updated."
msgstr ""

#: ../../api.rst:953
msgid "Called when a :class:`Guild` creates or deletes a new :class:`Role`."
msgstr ""

#: ../../api.rst:955
msgid "To get the guild it belongs to, use :attr:`Role.guild`."
msgstr ""

#: ../../api.rst:959
msgid "The role that was created or deleted."
msgstr ""

#: ../../api.rst:964
msgid "Called when a :class:`Role` is changed guild-wide."
msgstr ""

#: ../../api.rst:968
msgid "The updated role's old info."
msgstr ""

#: ../../api.rst:970
msgid "The updated role's updated info."
msgstr ""

#: ../../api.rst:975
msgid "Called when a :class:`Guild` adds or removes :class:`Emoji`."
msgstr ""

#: ../../api.rst:977
#: ../../api.rst:990
msgid "This requires :attr:`Intents.emojis_and_stickers` to be enabled."
msgstr ""

#: ../../api.rst:979
msgid "The guild who got their emojis updated."
msgstr ""

#: ../../api.rst:981
msgid "A list of emojis before the update."
msgstr ""

#: ../../api.rst:983
msgid "A list of emojis after the update."
msgstr ""

#: ../../api.rst:988
msgid "Called when a :class:`Guild` updates its stickers."
msgstr ""

#: ../../api.rst:994
msgid "The guild who got their stickers updated."
msgstr ""

#: ../../api.rst:996
msgid "A list of stickers before the update."
msgstr ""

#: ../../api.rst:998
msgid "A list of stickers after the update."
msgstr ""

#: ../../api.rst:1004
msgid "Called when a guild becomes available or unavailable. The guild must have existed in the :attr:`Client.guilds` cache."
msgstr ""

#: ../../api.rst:1009
msgid "The :class:`Guild` that has changed availability."
msgstr ""

#: ../../api.rst:1013
msgid "Called when a :class:`Member` changes their :class:`VoiceState`."
msgstr ""

#: ../../api.rst:1015
#: ../../api.rst:1045
msgid "The following, but not limited to, examples illustrate when this event is called:"
msgstr ""

#: ../../api.rst:1017
msgid "A member joins a voice or stage channel."
msgstr ""

#: ../../api.rst:1018
msgid "A member leaves a voice or stage channel."
msgstr ""

#: ../../api.rst:1019
msgid "A member is muted or deafened by their own accord."
msgstr ""

#: ../../api.rst:1020
msgid "A member is muted or deafened by a guild administrator."
msgstr ""

#: ../../api.rst:1022
msgid "This requires :attr:`Intents.voice_states` to be enabled."
msgstr ""

#: ../../api.rst:1024
msgid "The member whose voice states changed."
msgstr ""

#: ../../api.rst:1026
msgid "The voice state prior to the changes."
msgstr ""

#: ../../api.rst:1028
msgid "The voice state after the changes."
msgstr ""

#: ../../api.rst:1034
msgid "Called when a :class:`StageInstance` is created or deleted for a :class:`StageChannel`."
msgstr ""

#: ../../api.rst:1038
msgid "The stage instance that was created or deleted."
msgstr ""

#: ../../api.rst:1043
msgid "Called when a :class:`StageInstance` is updated."
msgstr ""

#: ../../api.rst:1047
msgid "The topic is changed."
msgstr ""

#: ../../api.rst:1048
msgid "The privacy level is changed."
msgstr ""

#: ../../api.rst:1052
msgid "The stage instance before the update."
msgstr ""

#: ../../api.rst:1054
msgid "The stage instance after the update."
msgstr ""

#: ../../api.rst:1059
msgid "Called when user gets banned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1061
#: ../../api.rst:1074
msgid "This requires :attr:`Intents.bans` to be enabled."
msgstr ""

#: ../../api.rst:1063
msgid "The guild the user got banned from."
msgstr ""

#: ../../api.rst:1065
msgid "The user that got banned. Can be either :class:`User` or :class:`Member` depending if the user was in the guild or not at the time of removal."
msgstr ""

#: ../../api.rst:1072
msgid "Called when a :class:`User` gets unbanned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1076
msgid "The guild the user got unbanned from."
msgstr ""

#: ../../api.rst:1078
msgid "The user that got unbanned."
msgstr ""

#: ../../api.rst:1083
msgid "Called when an :class:`Invite` is created. You must have the :attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1090
#: ../../api.rst:1107
msgid "There is a rare possibility that the :attr:`Invite.guild` and :attr:`Invite.channel` attributes will be of :class:`Object` rather than the respective models."
msgstr ""

#: ../../api.rst:1093
#: ../../api.rst:1113
msgid "This requires :attr:`Intents.invites` to be enabled."
msgstr ""

#: ../../api.rst:1095
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:39
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:39
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:39
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:39
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:39
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:39
msgid "The invite that was created."
msgstr ""

#: ../../api.rst:1100
msgid "Called when an :class:`Invite` is deleted. You must have the :attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1110
msgid "Outside of those two attributes, the only other attribute guaranteed to be filled by the Discord gateway for this event is :attr:`Invite.code`."
msgstr ""

#: ../../api.rst:1115
msgid "The invite that was deleted."
msgstr ""

#: ../../api.rst:1121
msgid "Called when someone joins or leaves a :class:`GroupChannel`."
msgstr ""

#: ../../api.rst:1123
msgid "The group that the user joined or left."
msgstr ""

#: ../../api.rst:1125
msgid "The user that joined or left."
msgstr ""

#: ../../api.rst:1131
msgid "Utility Functions"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.find:1
msgid "A helper to return the first element found in the sequence that meets the predicate. For example: ::"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.find:6
msgid "would find the first :class:`~discord.Member` whose name is 'Mighty' and return it. If an entry is not found, then ``None`` is returned."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.find:9
msgid "This is different from :func:`py:filter` due to the fact it stops the moment it finds a valid entry."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.find:12
msgid "A function that returns a boolean-like result."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.find:13
msgid "The iterable to search through."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:1
msgid "A helper that returns the first element in the iterable that meets all the traits passed in ``attrs``. This is an alternative for :func:`~discord.utils.find`."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:5
msgid "When multiple attributes are specified, they are checked using logical AND, not logical OR. Meaning they have to meet every attribute passed in and not one of them."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:9
msgid "To have a nested attribute search (i.e. search by ``x.y``) then pass in ``x__y`` as the keyword argument."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:12
msgid "If nothing is found that matches the attributes passed, then ``None`` is returned."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:17
msgid "Basic usage:"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:23
msgid "Multiple attribute matching:"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:29
msgid "Nested attribute matching:"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:35
msgid "An iterable to search through."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.get:36
msgid "Keyword arguments that denote attributes to search with."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:1
msgid "The snowflake ID."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:4
msgid "An aware datetime in UTC representing the creation time of the snowflake."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.snowflake_time:5
#: ../../../discord/utils.py:docstring of discord.utils.utcnow:9
#: ../../docstring of discord.AuditLogEntry.created_at:3
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.created_at:3
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.created_at:3
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.created_at:3
#: ../../../discord/user.py:docstring of discord.ClientUser.created_at:5
#: ../../../discord/user.py:docstring of discord.User.created_at:5
#: ../../../discord/message.py:docstring of discord.Message.created_at:3
#: ../../../discord/guild.py:docstring of discord.Guild.created_at:3
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:75
#: ../../../discord/activity.py:docstring of discord.Spotify.start:3
#: ../../../discord/activity.py:docstring of discord.Spotify.end:3
#: ../../../discord/emoji.py:docstring of discord.Emoji.created_at:3
#: ../../../discord/role.py:docstring of discord.Role.created_at:3
#: ../../../discord/channel.py:docstring of discord.TextChannel.created_at:3
#: ../../../discord/threads.py:docstring of discord.threads.Thread:124
#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:39
#: ../../../discord/channel.py:docstring of discord.StoreChannel.created_at:3
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.created_at:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.created_at:3
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.created_at:3
#: ../../../discord/channel.py:docstring of discord.DMChannel.created_at:3
#: ../../../discord/channel.py:docstring of discord.GroupChannel.created_at:3
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.created_at:3
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.created_at:3
#: ../../../discord/invite.py:docstring of discord.invite.Invite:77
#: ../../../discord/template.py:docstring of discord.template.Template:39
#: ../../../discord/template.py:docstring of discord.template.Template:46
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.created_at:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.created_at:5
#: ../../../discord/widget.py:docstring of discord.Widget.created_at:3
#: ../../../discord/sticker.py:docstring of discord.Sticker.created_at:3
#: ../../../discord/object.py:docstring of discord.Object.created_at:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:61
#: ../../../discord/message.py:docstring of discord.PartialMessage.created_at:3
msgid ":class:`datetime.datetime`"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:1
msgid "A helper function that returns the OAuth2 URL for inviting the bot into guilds."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:4
msgid "The client ID for your bot."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:6
msgid "The permissions you're requesting. If not given then you won't be requesting any permissions."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:9
msgid "The guild to pre-select in the authorization screen, if available."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:11
msgid "An optional valid redirect URI."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:13
msgid "An optional valid list of scopes. Defaults to ``('bot',)``.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:13
msgid "An optional valid list of scopes. Defaults to ``('bot',)``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:17
msgid "Whether to disallow the user from changing the guild dropdown.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:17
msgid "Whether to disallow the user from changing the guild dropdown."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.oauth_url:22
msgid "The OAuth2 URL for inviting the bot into guilds."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:1
msgid "A helper function that removes markdown characters."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:6
msgid "This function is not markdown aware and may remove meaning from the original text. For example, if the input contains ``10 * 5`` then it will be converted into ``10  5``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:9
msgid "The text to remove markdown from."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:11
msgid "Whether to leave links alone when removing markdown. For example, if a URL in the text contains characters such as ``_`` then it will be left alone. Defaults to ``True``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.remove_markdown:16
msgid "The text with the markdown special characters removed."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:1
msgid "A helper function that escapes Discord's markdown."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:3
msgid "The text to escape markdown from."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:5
msgid "Whether to escape the markdown characters as needed. This means that it does not escape extraneous characters if it's not necessary, e.g. ``**hello**`` is escaped into ``\\*\\*hello**`` instead of ``\\*\\*hello\\*\\*``. Note however that this can open you up to some clever syntax abuse. Defaults to ``False``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:11
msgid "Whether to leave links alone when escaping markdown. For example, if a URL in the text contains characters such as ``_`` then it will be left alone. This option is not supported with ``as_needed``. Defaults to ``True``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_markdown:17
msgid "The text with the markdown special characters escaped with a slash."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:1
msgid "A helper function that escapes everyone, here, role, and user mentions."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:5
msgid "This does not include channel mentions."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:9
msgid "For more granular control over what mentions should be escaped within messages, refer to the :class:`~discord.AllowedMentions` class."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:13
msgid "The text to escape mentions from."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.escape_mentions:16
msgid "The text with the mentions removed."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:1
msgid "Resolves an invite from a :class:`~discord.Invite`, URL or code."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:3
msgid "The invite."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_invite:6
msgid "The invite code."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:1
msgid "Resolves a template code from a :class:`~discord.Template`, URL or code."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:5
msgid "The code."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.resolve_template:8
#: ../../../discord/template.py:docstring of discord.template.Template:7
msgid "The template code."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:3
msgid "Sleep until a specified time."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:5
msgid "If the time supplied is in the past this function will yield instantly."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:9
msgid "The timestamp in which to sleep until. If the datetime is naive then it is assumed to be local time."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.sleep_until:12
msgid "If provided is returned to the caller when the coroutine completes."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.utcnow:1
msgid "A helper function to return an aware UTC datetime representing the current time."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.utcnow:3
msgid "This should be preferred to :meth:`datetime.datetime.utcnow` since it is an aware datetime, compared to the naive datetime in the standard library."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.utcnow:8
msgid "The current aware datetime in UTC."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:1
msgid "A helper function to format a :class:`datetime.datetime` for presentation within Discord."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:3
msgid "This allows for a locale-independent way of presenting data using Discord specific Markdown."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:6
msgid "Style"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:6
msgid "Example Output"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:6
#: ../../api.rst:2879
#: ../../api.rst:2899
msgid "Description"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:8
msgid "t"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:8
msgid "22:57"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:8
msgid "Short Time"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:10
msgid "T"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:10
msgid "22:57:58"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:10
msgid "Long Time"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:12
msgid "d"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:12
msgid "17/05/2016"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:12
msgid "Short Date"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:14
msgid "D"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:14
msgid "17 May 2016"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:14
msgid "Long Date"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:16
msgid "f (default)"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:16
msgid "17 May 2016 22:57"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:16
msgid "Short Date Time"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:18
msgid "F"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:18
msgid "Tuesday, 17 May 2016 22:57"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:18
msgid "Long Date Time"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:20
msgid "R"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:20
msgid "5 years ago"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:20
msgid "Relative Time"
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:23
msgid "Note that the exact output depends on the user's locale setting in the client. The example output presented is using the ``en-GB`` locale."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:28
msgid "The datetime to format."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:30
msgid "The style to format the datetime with."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.format_dt:33
msgid "The formatted string."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:1
msgid "A helper function that collects an iterator into chunks of a given size."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:5
msgid "The iterator to chunk, can be sync or async."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:7
msgid "The maximum chunk size."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:12
#: ../../api.rst:2804
msgid "The last chunk collected may not be as large as ``max_size``."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:14
msgid "A new iterator which yields chunks of a given size."
msgstr ""

#: ../../../discord/utils.py:docstring of discord.utils.as_chunks:15
msgid "Union[:class:`Iterator`, :class:`AsyncIterator`]"
msgstr ""

#: ../../api.rst:1162
msgid "Enumerations"
msgstr ""

#: ../../api.rst:1164
msgid "The API provides some enumerations for certain types of strings to avoid the API from being stringly typed in case the strings change in the future."
msgstr ""

#: ../../api.rst:1167
msgid "All enumerations are subclasses of an internal class which mimics the behaviour of :class:`enum.Enum`."
msgstr ""

#: ../../api.rst:1172
msgid "Specifies the type of channel."
msgstr ""

#: ../../api.rst:1176
msgid "A text channel."
msgstr ""

#: ../../api.rst:1179
msgid "A voice channel."
msgstr ""

#: ../../api.rst:1182
msgid "A private text channel. Also called a direct message."
msgstr ""

#: ../../api.rst:1185
msgid "A private group text channel."
msgstr ""

#: ../../api.rst:1188
msgid "A category channel."
msgstr ""

#: ../../api.rst:1191
msgid "A guild news channel."
msgstr ""

#: ../../api.rst:1195
msgid "A guild store channel."
msgstr ""

#: ../../api.rst:1199
msgid "A guild stage voice channel."
msgstr ""

#: ../../api.rst:1205
msgid "A news thread"
msgstr ""

#: ../../api.rst:1211
msgid "A public thread"
msgstr ""

#: ../../api.rst:1217
msgid "A private thread"
msgstr ""

#: ../../api.rst:1223
msgid "Specifies the type of :class:`Message`. This is used to denote if a message is to be interpreted as a system message or a regular message."
msgstr ""

#: ../../api.rst:1230
#: ../../../discord/message.py:docstring of discord.message.Message:7
msgid "Checks if two messages are equal."
msgstr ""

#: ../../api.rst:1233
#: ../../../discord/message.py:docstring of discord.message.Message:11
msgid "Checks if two messages are not equal."
msgstr ""

#: ../../api.rst:1237
msgid "The default message type. This is the same as regular messages."
msgstr ""

#: ../../api.rst:1240
msgid "The system message when a user is added to a group private message or a thread."
msgstr ""

#: ../../api.rst:1244
msgid "The system message when a user is removed from a group private message or a thread."
msgstr ""

#: ../../api.rst:1248
msgid "The system message denoting call state, e.g. missed call, started call, etc."
msgstr ""

#: ../../api.rst:1252
msgid "The system message denoting that a channel's name has been changed."
msgstr ""

#: ../../api.rst:1255
msgid "The system message denoting that a channel's icon has been changed."
msgstr ""

#: ../../api.rst:1258
msgid "The system message denoting that a pinned message has been added to a channel."
msgstr ""

#: ../../api.rst:1261
msgid "The system message denoting that a new member has joined a Guild."
msgstr ""

#: ../../api.rst:1265
msgid "The system message denoting that a member has \"nitro boosted\" a guild."
msgstr ""

#: ../../api.rst:1268
msgid "The system message denoting that a member has \"nitro boosted\" a guild and it achieved level 1."
msgstr ""

#: ../../api.rst:1272
msgid "The system message denoting that a member has \"nitro boosted\" a guild and it achieved level 2."
msgstr ""

#: ../../api.rst:1276
msgid "The system message denoting that a member has \"nitro boosted\" a guild and it achieved level 3."
msgstr ""

#: ../../api.rst:1280
msgid "The system message denoting that an announcement channel has been followed."
msgstr ""

#: ../../api.rst:1285
msgid "The system message denoting that a member is streaming in the guild."
msgstr ""

#: ../../api.rst:1290
msgid "The system message denoting that the guild is no longer eligible for Server Discovery."
msgstr ""

#: ../../api.rst:1296
msgid "The system message denoting that the guild has become eligible again for Server Discovery."
msgstr ""

#: ../../api.rst:1302
msgid "The system message denoting that the guild has failed to meet the Server Discovery requirements for one week."
msgstr ""

#: ../../api.rst:1308
msgid "The system message denoting that the guild has failed to meet the Server Discovery requirements for 3 weeks in a row."
msgstr ""

#: ../../api.rst:1314
msgid "The system message denoting that a thread has been created. This is only sent if the thread has been created from an older message. The period of time required for a message to be considered old cannot be relied upon and is up to Discord."
msgstr ""

#: ../../api.rst:1322
msgid "The system message denoting that the author is replying to a message."
msgstr ""

#: ../../api.rst:1327
msgid "The system message denoting that an application (or \"slash\") command was executed."
msgstr ""

#: ../../api.rst:1333
msgid "Originally this was ``application_command``, but changed following Discord changes."
msgstr ""

#: ../../api.rst:1336
msgid "The system message sent as a reminder to invite people to the guild."
msgstr ""

#: ../../api.rst:1341
msgid "The system message denoting the message in the thread that is the one that started the thread's conversation topic."
msgstr ""

#: ../../api.rst:1347
msgid "The system message denoting that an context menu (\"user\" or \"message\") command was executed."
msgstr ""

#: ../../api.rst:1353
msgid "Represents Discord User flags."
msgstr ""

#: ../../api.rst:1357
msgid "The user is a Discord Employee."
msgstr ""

#: ../../api.rst:1360
msgid "The user is a Discord Partner."
msgstr ""

#: ../../api.rst:1363
msgid "The user is a HypeSquad Events member."
msgstr ""

#: ../../api.rst:1366
msgid "The user is a Bug Hunter."
msgstr ""

#: ../../api.rst:1369
msgid "The user has SMS recovery for Multi Factor Authentication enabled."
msgstr ""

#: ../../api.rst:1372
msgid "The user has dismissed the Discord Nitro promotion."
msgstr ""

#: ../../api.rst:1375
msgid "The user is a HypeSquad Bravery member."
msgstr ""

#: ../../api.rst:1378
msgid "The user is a HypeSquad Brilliance member."
msgstr ""

#: ../../api.rst:1381
msgid "The user is a HypeSquad Balance member."
msgstr ""

#: ../../api.rst:1384
msgid "The user is an Early Supporter."
msgstr ""

#: ../../api.rst:1387
msgid "The user is a Team User."
msgstr ""

#: ../../api.rst:1390
msgid "The user is a system user (i.e. represents Discord officially)."
msgstr ""

#: ../../api.rst:1393
msgid "The user has an unread system message."
msgstr ""

#: ../../api.rst:1396
msgid "The user is a Bug Hunter Level 2."
msgstr ""

#: ../../api.rst:1399
msgid "The user is a Verified Bot."
msgstr ""

#: ../../api.rst:1402
msgid "The user is an Early Verified Bot Developer."
msgstr ""

#: ../../api.rst:1405
msgid "The user is a Discord Certified Moderator."
msgstr ""

#: ../../api.rst:1409
msgid "Specifies the type of :class:`Activity`. This is used to check how to interpret the activity itself."
msgstr ""

#: ../../api.rst:1414
msgid "An unknown activity type. This should generally not happen."
msgstr ""

#: ../../api.rst:1417
msgid "A \"Playing\" activity type."
msgstr ""

#: ../../api.rst:1420
msgid "A \"Streaming\" activity type."
msgstr ""

#: ../../api.rst:1423
msgid "A \"Listening\" activity type."
msgstr ""

#: ../../api.rst:1426
msgid "A \"Watching\" activity type."
msgstr ""

#: ../../api.rst:1429
msgid "A custom activity type."
msgstr ""

#: ../../api.rst:1432
msgid "A competing activity type."
msgstr ""

#: ../../api.rst:1438
msgid "Specifies the type of :class:`Interaction`."
msgstr ""

#: ../../api.rst:1444
msgid "Represents Discord pinging to see if the interaction response server is alive."
msgstr ""

#: ../../api.rst:1447
msgid "Represents a slash command interaction."
msgstr ""

#: ../../api.rst:1450
msgid "Represents a component based interaction, i.e. using the Discord Bot UI Kit."
msgstr ""

#: ../../api.rst:1454
msgid "Specifies the response type for the interaction."
msgstr ""

#: ../../api.rst:1460
msgid "Pongs the interaction when given a ping."
msgstr ""

#: ../../api.rst:1462
msgid "See also :meth:`InteractionResponse.pong`"
msgstr ""

#: ../../api.rst:1465
msgid "Respond to the interaction with a message."
msgstr ""

#: ../../api.rst:1467
msgid "See also :meth:`InteractionResponse.send_message`"
msgstr ""

#: ../../api.rst:1470
msgid "Responds to the interaction with a message at a later time."
msgstr ""

#: ../../api.rst:1472
#: ../../api.rst:1478
msgid "See also :meth:`InteractionResponse.defer`"
msgstr ""

#: ../../api.rst:1475
msgid "Acknowledges the component interaction with a promise that the message will update later (though there is no need to actually update the message)."
msgstr ""

#: ../../api.rst:1481
msgid "Responds to the interaction by editing the message."
msgstr ""

#: ../../api.rst:1483
msgid "See also :meth:`InteractionResponse.edit_message`"
msgstr ""

#: ../../api.rst:1487
msgid "Represents the application type that Discord have."
msgstr ""

#: ../../api.rst:1493
msgid "Represents a slash command."
msgstr ""

#: ../../api.rst:1496
msgid "Represents a user context command."
msgstr ""

#: ../../api.rst:1499
msgid "Represents a message context command."
msgstr ""

#: ../../api.rst:1503
msgid "Represents the slash command option type."
msgstr ""

#: ../../api.rst:1509
msgid "Represents a slash subcommand."
msgstr ""

#: ../../api.rst:1513
msgid "Represents a slash subcommand group."
msgstr ""

#: ../../api.rst:1517
msgid "Represents that the option is a string."
msgstr ""

#: ../../api.rst:1521
msgid "Represents that the option is a integer."
msgstr ""

#: ../../api.rst:1525
msgid "Represents that the option is a boolean (true/false)."
msgstr ""

#: ../../api.rst:1529
msgid "Represents that the option is a :class:`User` or :class:`Member`."
msgstr ""

#: ../../api.rst:1533
msgid "Represents that the option is a :class:`GuildChannel`."
msgstr ""

#: ../../api.rst:1537
msgid "Represents that the option is a :class:`Role`."
msgstr ""

#: ../../api.rst:1541
msgid "Represents that the option is a mentionable type."
msgstr ""

#: ../../api.rst:1543
msgid "Should be one of:"
msgstr ""

#: ../../api.rst:1545
msgid ":class:`abc.Snowflake`"
msgstr ""

#: ../../api.rst:1546
msgid ":class:`abc.GuildChannel`"
msgstr ""

#: ../../api.rst:1547
#: ../../../discord/guild.py:docstring of discord.Guild.default_role:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:39
#: ../../../discord/member.py:docstring of discord.Member.top_role:6
#: ../../../discord/role.py:docstring of discord.role.Role.edit:40
msgid ":class:`Role`"
msgstr ""

#: ../../api.rst:1548
#: ../../../discord/guild.py:docstring of discord.Guild.me:4
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:16
msgid ":class:`Member`"
msgstr ""

#: ../../api.rst:1552
msgid "Represents that the option is a number."
msgstr ""

#: ../../api.rst:1554
msgid "It support both ``float`` and ``int``."
msgstr ""

#: ../../api.rst:1558
msgid "Represents a custom type."
msgstr ""

#: ../../api.rst:1560
msgid "You should provide a way to parse this custom format later."
msgstr ""

#: ../../api.rst:1564
msgid "Represents the component type of a component."
msgstr ""

#: ../../api.rst:1570
msgid "Represents the group component which holds different components in a row."
msgstr ""

#: ../../api.rst:1573
msgid "Represents a button component."
msgstr ""

#: ../../api.rst:1576
msgid "Represents a select component."
msgstr ""

#: ../../api.rst:1581
msgid "Represents the style of the button component."
msgstr ""

#: ../../api.rst:1587
msgid "Represents a blurple button for the primary action."
msgstr ""

#: ../../api.rst:1590
msgid "Represents a grey button for the secondary action."
msgstr ""

#: ../../api.rst:1593
msgid "Represents a green button for a successful action."
msgstr ""

#: ../../api.rst:1596
msgid "Represents a red button for a dangerous action."
msgstr ""

#: ../../api.rst:1599
msgid "Represents a link button."
msgstr ""

#: ../../api.rst:1603
msgid "An alias for :attr:`primary`."
msgstr ""

#: ../../api.rst:1606
#: ../../api.rst:1609
msgid "An alias for :attr:`secondary`."
msgstr ""

#: ../../api.rst:1612
msgid "An alias for :attr:`success`."
msgstr ""

#: ../../api.rst:1615
msgid "An alias for :attr:`danger`."
msgstr ""

#: ../../api.rst:1618
msgid "An alias for :attr:`link`."
msgstr ""

#: ../../api.rst:1622
msgid "Specifies the region a voice server belongs to."
msgstr ""

#: ../../api.rst:1626
msgid "The Amsterdam region."
msgstr ""

#: ../../api.rst:1629
msgid "The Brazil region."
msgstr ""

#: ../../api.rst:1632
msgid "The Dubai region."
msgstr ""

#: ../../api.rst:1638
msgid "The EU Central region."
msgstr ""

#: ../../api.rst:1641
msgid "The EU West region."
msgstr ""

#: ../../api.rst:1644
msgid "The Europe region."
msgstr ""

#: ../../api.rst:1650
msgid "The Frankfurt region."
msgstr ""

#: ../../api.rst:1653
msgid "The Hong Kong region."
msgstr ""

#: ../../api.rst:1656
msgid "The India region."
msgstr ""

#: ../../api.rst:1662
msgid "The Japan region."
msgstr ""

#: ../../api.rst:1665
msgid "The London region."
msgstr ""

#: ../../api.rst:1668
msgid "The Russia region."
msgstr ""

#: ../../api.rst:1671
msgid "The Singapore region."
msgstr ""

#: ../../api.rst:1674
msgid "The South Africa region."
msgstr ""

#: ../../api.rst:1677
msgid "The South Korea region."
msgstr ""

#: ../../api.rst:1680
msgid "The Sydney region."
msgstr ""

#: ../../api.rst:1683
msgid "The US Central region."
msgstr ""

#: ../../api.rst:1686
msgid "The US East region."
msgstr ""

#: ../../api.rst:1689
msgid "The US South region."
msgstr ""

#: ../../api.rst:1692
msgid "The US West region."
msgstr ""

#: ../../api.rst:1695
msgid "The Amsterdam region for VIP guilds."
msgstr ""

#: ../../api.rst:1698
msgid "The US East region for VIP guilds."
msgstr ""

#: ../../api.rst:1701
msgid "The US West region for VIP guilds."
msgstr ""

#: ../../api.rst:1705
msgid "Specifies a :class:`Guild`\\'s verification level, which is the criteria in which a member must meet before being able to send messages to the guild."
msgstr ""

#: ../../api.rst:1714
msgid "Checks if two verification levels are equal."
msgstr ""

#: ../../api.rst:1717
msgid "Checks if two verification levels are not equal."
msgstr ""

#: ../../api.rst:1720
msgid "Checks if a verification level is higher than another."
msgstr ""

#: ../../api.rst:1723
msgid "Checks if a verification level is lower than another."
msgstr ""

#: ../../api.rst:1726
msgid "Checks if a verification level is higher or equal to another."
msgstr ""

#: ../../api.rst:1729
msgid "Checks if a verification level is lower or equal to another."
msgstr ""

#: ../../api.rst:1733
msgid "No criteria set."
msgstr ""

#: ../../api.rst:1736
msgid "Member must have a verified email on their Discord account."
msgstr ""

#: ../../api.rst:1739
msgid "Member must have a verified email and be registered on Discord for more than five minutes."
msgstr ""

#: ../../api.rst:1743
msgid "Member must have a verified email, be registered on Discord for more than five minutes, and be a member of the guild itself for more than ten minutes."
msgstr ""

#: ../../api.rst:1748
msgid "Member must have a verified phone on their Discord account."
msgstr ""

#: ../../api.rst:1752
msgid "Specifies whether a :class:`Guild` has notifications on for all messages or mentions only by default."
msgstr ""

#: ../../api.rst:1760
msgid "Checks if two notification levels are equal."
msgstr ""

#: ../../api.rst:1763
msgid "Checks if two notification levels are not equal."
msgstr ""

#: ../../api.rst:1766
msgid "Checks if a notification level is higher than another."
msgstr ""

#: ../../api.rst:1769
msgid "Checks if a notification level is lower than another."
msgstr ""

#: ../../api.rst:1772
msgid "Checks if a notification level is higher or equal to another."
msgstr ""

#: ../../api.rst:1775
msgid "Checks if a notification level is lower or equal to another."
msgstr ""

#: ../../api.rst:1779
msgid "Members receive notifications for every message regardless of them being mentioned."
msgstr ""

#: ../../api.rst:1782
msgid "Members receive notifications for messages they are mentioned in."
msgstr ""

#: ../../api.rst:1786
msgid "Specifies a :class:`Guild`\\'s explicit content filter, which is the machine learning algorithms that Discord uses to detect if an image contains pornography or otherwise explicit content."
msgstr ""

#: ../../api.rst:1796
msgid "Checks if two content filter levels are equal."
msgstr ""

#: ../../api.rst:1799
msgid "Checks if two content filter levels are not equal."
msgstr ""

#: ../../api.rst:1802
msgid "Checks if a content filter level is higher than another."
msgstr ""

#: ../../api.rst:1805
msgid "Checks if a content filter level is lower than another."
msgstr ""

#: ../../api.rst:1808
msgid "Checks if a content filter level is higher or equal to another."
msgstr ""

#: ../../api.rst:1811
msgid "Checks if a content filter level is lower or equal to another."
msgstr ""

#: ../../api.rst:1815
msgid "The guild does not have the content filter enabled."
msgstr ""

#: ../../api.rst:1818
msgid "The guild has the content filter enabled for members without a role."
msgstr ""

#: ../../api.rst:1821
msgid "The guild has the content filter enabled for every member."
msgstr ""

#: ../../api.rst:1825
msgid "Specifies a :class:`Member` 's status."
msgstr ""

#: ../../api.rst:1829
msgid "The member is online."
msgstr ""

#: ../../api.rst:1832
msgid "The member is offline."
msgstr ""

#: ../../api.rst:1835
msgid "The member is idle."
msgstr ""

#: ../../api.rst:1838
msgid "The member is \"Do Not Disturb\"."
msgstr ""

#: ../../api.rst:1841
msgid "An alias for :attr:`dnd`."
msgstr ""

#: ../../api.rst:1844
msgid "The member is \"invisible\". In reality, this is only used in sending a presence a la :meth:`Client.change_presence`. When you receive a user's presence this will be :attr:`offline` instead."
msgstr ""

#: ../../api.rst:1851
msgid "Represents the type of action being done for a :class:`AuditLogEntry`\\, which is retrievable via :meth:`Guild.audit_logs`."
msgstr ""

#: ../../api.rst:1856
msgid "The guild has updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:1858
msgid "Changing the guild vanity URL"
msgstr ""

#: ../../api.rst:1859
msgid "Changing the guild invite splash"
msgstr ""

#: ../../api.rst:1860
msgid "Changing the guild AFK channel or timeout"
msgstr ""

#: ../../api.rst:1861
msgid "Changing the guild voice server region"
msgstr ""

#: ../../api.rst:1862
msgid "Changing the guild icon, banner, or discovery splash"
msgstr ""

#: ../../api.rst:1863
msgid "Changing the guild moderation settings"
msgstr ""

#: ../../api.rst:1864
msgid "Changing things related to the guild widget"
msgstr ""

#: ../../api.rst:1866
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Guild`."
msgstr ""

#: ../../api.rst:1869
#: ../../api.rst:1895
#: ../../api.rst:1914
#: ../../api.rst:1936
#: ../../api.rst:1955
#: ../../api.rst:1971
#: ../../api.rst:1986
#: ../../api.rst:2045
#: ../../api.rst:2059
#: ../../api.rst:2104
#: ../../api.rst:2124
#: ../../api.rst:2139
#: ../../api.rst:2154
#: ../../api.rst:2178
#: ../../api.rst:2195
#: ../../api.rst:2211
#: ../../api.rst:2224
#: ../../api.rst:2237
#: ../../api.rst:2248
#: ../../api.rst:2259
#: ../../api.rst:2356
#: ../../api.rst:2371
#: ../../api.rst:2392
#: ../../api.rst:2411
#: ../../api.rst:2430
#: ../../api.rst:2449
#: ../../api.rst:2466
#: ../../api.rst:2483
msgid "Possible attributes for :class:`AuditLogDiff`:"
msgstr ""

#: ../../api.rst:1871
msgid ":attr:`~AuditLogDiff.afk_channel`"
msgstr ""

#: ../../api.rst:1872
msgid ":attr:`~AuditLogDiff.system_channel`"
msgstr ""

#: ../../api.rst:1873
msgid ":attr:`~AuditLogDiff.afk_timeout`"
msgstr ""

#: ../../api.rst:1874
msgid ":attr:`~AuditLogDiff.default_message_notifications`"
msgstr ""

#: ../../api.rst:1875
msgid ":attr:`~AuditLogDiff.explicit_content_filter`"
msgstr ""

#: ../../api.rst:1876
msgid ":attr:`~AuditLogDiff.mfa_level`"
msgstr ""

#: ../../api.rst:1877
#: ../../api.rst:1897
#: ../../api.rst:1916
#: ../../api.rst:1938
#: ../../api.rst:2109
#: ../../api.rst:2129
#: ../../api.rst:2144
#: ../../api.rst:2198
#: ../../api.rst:2214
#: ../../api.rst:2227
#: ../../api.rst:2239
#: ../../api.rst:2250
#: ../../api.rst:2261
#: ../../api.rst:2394
#: ../../api.rst:2413
#: ../../api.rst:2432
#: ../../api.rst:2451
#: ../../api.rst:2468
#: ../../api.rst:2485
msgid ":attr:`~AuditLogDiff.name`"
msgstr ""

#: ../../api.rst:1878
msgid ":attr:`~AuditLogDiff.owner`"
msgstr ""

#: ../../api.rst:1879
msgid ":attr:`~AuditLogDiff.splash`"
msgstr ""

#: ../../api.rst:1880
msgid ":attr:`~AuditLogDiff.discovery_splash`"
msgstr ""

#: ../../api.rst:1881
msgid ":attr:`~AuditLogDiff.icon`"
msgstr ""

#: ../../api.rst:1882
msgid ":attr:`~AuditLogDiff.banner`"
msgstr ""

#: ../../api.rst:1883
msgid ":attr:`~AuditLogDiff.vanity_url_code`"
msgstr ""

#: ../../api.rst:1887
msgid "A new channel was created."
msgstr ""

#: ../../api.rst:1889
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is either a :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1892
msgid "A more filled out object in the :class:`Object` case can be found by using :attr:`~AuditLogEntry.after`."
msgstr ""

#: ../../api.rst:1898
#: ../../api.rst:1917
#: ../../api.rst:1939
#: ../../api.rst:1960
#: ../../api.rst:1976
#: ../../api.rst:1991
#: ../../api.rst:2396
#: ../../api.rst:2415
#: ../../api.rst:2434
msgid ":attr:`~AuditLogDiff.type`"
msgstr ""

#: ../../api.rst:1899
#: ../../api.rst:1919
#: ../../api.rst:1940
msgid ":attr:`~AuditLogDiff.overwrites`"
msgstr ""

#: ../../api.rst:1903
msgid "A channel was updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:1905
msgid "The channel name or topic was changed"
msgstr ""

#: ../../api.rst:1906
msgid "The channel bitrate was changed"
msgstr ""

#: ../../api.rst:1908
#: ../../api.rst:1946
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1911
msgid "A more filled out object in the :class:`Object` case can be found by using :attr:`~AuditLogEntry.after` or :attr:`~AuditLogEntry.before`."
msgstr ""

#: ../../api.rst:1918
msgid ":attr:`~AuditLogDiff.position`"
msgstr ""

#: ../../api.rst:1920
#: ../../api.rst:2358
#: ../../api.rst:2373
msgid ":attr:`~AuditLogDiff.topic`"
msgstr ""

#: ../../api.rst:1921
msgid ":attr:`~AuditLogDiff.bitrate`"
msgstr ""

#: ../../api.rst:1922
msgid ":attr:`~AuditLogDiff.rtc_region`"
msgstr ""

#: ../../api.rst:1923
msgid ":attr:`~AuditLogDiff.video_quality_mode`"
msgstr ""

#: ../../api.rst:1924
msgid ":attr:`~AuditLogDiff.default_auto_archive_duration`"
msgstr ""

#: ../../api.rst:1928
msgid "A channel was deleted."
msgstr ""

#: ../../api.rst:1930
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is an :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:1933
msgid "A more filled out object can be found by using the :attr:`~AuditLogEntry.before` object."
msgstr ""

#: ../../api.rst:1944
msgid "A channel permission overwrite was created."
msgstr ""

#: ../../api.rst:1949
msgid "When this is the action, the type of :attr:`~AuditLogEntry.extra` is either a :class:`Role` or :class:`Member`. If the object is not found then it is a :class:`Object` with an ID being filled, a name, and a ``type`` attribute set to either ``'role'`` or ``'member'`` to help dictate what type of ID it is."
msgstr ""

#: ../../api.rst:1957
#: ../../api.rst:1973
#: ../../api.rst:1988
msgid ":attr:`~AuditLogDiff.deny`"
msgstr ""

#: ../../api.rst:1958
#: ../../api.rst:1974
#: ../../api.rst:1989
msgid ":attr:`~AuditLogDiff.allow`"
msgstr ""

#: ../../api.rst:1959
#: ../../api.rst:1975
#: ../../api.rst:1990
msgid ":attr:`~AuditLogDiff.id`"
msgstr ""

#: ../../api.rst:1964
msgid "A channel permission overwrite was changed, this is typically when the permission values change."
msgstr ""

#: ../../api.rst:1967
#: ../../api.rst:1982
msgid "See :attr:`overwrite_create` for more information on how the :attr:`~AuditLogEntry.target` and :attr:`~AuditLogEntry.extra` fields are set."
msgstr ""

#: ../../api.rst:1980
msgid "A channel permission overwrite was deleted."
msgstr ""

#: ../../api.rst:1995
msgid "A member was kicked."
msgstr ""

#: ../../api.rst:1997
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`User` who got kicked."
msgstr ""

#: ../../api.rst:2000
#: ../../api.rst:2015
#: ../../api.rst:2024
#: ../../api.rst:2033
msgid "When this is the action, :attr:`~AuditLogEntry.changes` is empty."
msgstr ""

#: ../../api.rst:2004
msgid "A member prune was triggered."
msgstr ""

#: ../../api.rst:2006
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is set to ``None``."
msgstr ""

#: ../../api.rst:2009
#: ../../api.rst:2068
#: ../../api.rst:2271
#: ../../api.rst:2298
#: ../../api.rst:2313
msgid "When this is the action, the type of :attr:`~AuditLogEntry.extra` is set to an unspecified proxy object with two attributes:"
msgstr ""

#: ../../api.rst:2012
msgid "``delete_members_days``: An integer specifying how far the prune was."
msgstr ""

#: ../../api.rst:2013
msgid "``members_removed``: An integer specifying how many members were removed."
msgstr ""

#: ../../api.rst:2019
msgid "A member was banned."
msgstr ""

#: ../../api.rst:2021
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`User` who got banned."
msgstr ""

#: ../../api.rst:2028
msgid "A member was unbanned."
msgstr ""

#: ../../api.rst:2030
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`User` who got unbanned."
msgstr ""

#: ../../api.rst:2037
msgid "A member has updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2039
msgid "A nickname was changed"
msgstr ""

#: ../../api.rst:2040
msgid "They were server muted or deafened (or it was undo'd)"
msgstr ""

#: ../../api.rst:2042
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` who got updated."
msgstr ""

#: ../../api.rst:2047
msgid ":attr:`~AuditLogDiff.nick`"
msgstr ""

#: ../../api.rst:2048
msgid ":attr:`~AuditLogDiff.mute`"
msgstr ""

#: ../../api.rst:2049
msgid ":attr:`~AuditLogDiff.deaf`"
msgstr ""

#: ../../api.rst:2053
msgid "A member's role has been updated. This triggers when a member either gains a role or loses a role."
msgstr ""

#: ../../api.rst:2056
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` who got the role."
msgstr ""

#: ../../api.rst:2061
msgid ":attr:`~AuditLogDiff.roles`"
msgstr ""

#: ../../api.rst:2065
msgid "A member's voice channel has been updated. This triggers when a member is moved to a different voice channel."
msgstr ""

#: ../../api.rst:2071
msgid "``channel``: A :class:`TextChannel` or :class:`Object` with the channel ID where the members were moved."
msgstr ""

#: ../../api.rst:2072
msgid "``count``: An integer specifying how many members were moved."
msgstr ""

#: ../../api.rst:2078
msgid "A member's voice state has changed. This triggers when a member is force disconnected from voice."
msgstr ""

#: ../../api.rst:2081
#: ../../api.rst:2284
msgid "When this is the action, the type of :attr:`~AuditLogEntry.extra` is set to an unspecified proxy object with one attribute:"
msgstr ""

#: ../../api.rst:2084
msgid "``count``: An integer specifying how many members were disconnected."
msgstr ""

#: ../../api.rst:2090
msgid "A bot was added to the guild."
msgstr ""

#: ../../api.rst:2092
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` which was added to the guild."
msgstr ""

#: ../../api.rst:2099
msgid "A new role was created."
msgstr ""

#: ../../api.rst:2101
#: ../../api.rst:2121
#: ../../api.rst:2136
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Role` or a :class:`Object` with the ID."
msgstr ""

#: ../../api.rst:2106
#: ../../api.rst:2126
#: ../../api.rst:2141
msgid ":attr:`~AuditLogDiff.colour`"
msgstr ""

#: ../../api.rst:2107
#: ../../api.rst:2127
#: ../../api.rst:2142
msgid ":attr:`~AuditLogDiff.mentionable`"
msgstr ""

#: ../../api.rst:2108
#: ../../api.rst:2128
#: ../../api.rst:2143
msgid ":attr:`~AuditLogDiff.hoist`"
msgstr ""

#: ../../api.rst:2110
#: ../../api.rst:2130
#: ../../api.rst:2145
msgid ":attr:`~AuditLogDiff.permissions`"
msgstr ""

#: ../../api.rst:2114
msgid "A role was updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2116
msgid "The name has changed"
msgstr ""

#: ../../api.rst:2117
msgid "The permissions have changed"
msgstr ""

#: ../../api.rst:2118
msgid "The colour has changed"
msgstr ""

#: ../../api.rst:2119
msgid "Its hoist/mentionable state has changed"
msgstr ""

#: ../../api.rst:2134
msgid "A role was deleted."
msgstr ""

#: ../../api.rst:2149
msgid "An invite was created."
msgstr ""

#: ../../api.rst:2151
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Invite` that was created."
msgstr ""

#: ../../api.rst:2156
#: ../../api.rst:2180
msgid ":attr:`~AuditLogDiff.max_age`"
msgstr ""

#: ../../api.rst:2157
#: ../../api.rst:2181
msgid ":attr:`~AuditLogDiff.code`"
msgstr ""

#: ../../api.rst:2158
#: ../../api.rst:2182
msgid ":attr:`~AuditLogDiff.temporary`"
msgstr ""

#: ../../api.rst:2159
#: ../../api.rst:2183
msgid ":attr:`~AuditLogDiff.inviter`"
msgstr ""

#: ../../api.rst:2160
#: ../../api.rst:2184
#: ../../api.rst:2197
#: ../../api.rst:2213
#: ../../api.rst:2226
msgid ":attr:`~AuditLogDiff.channel`"
msgstr ""

#: ../../api.rst:2161
#: ../../api.rst:2185
msgid ":attr:`~AuditLogDiff.uses`"
msgstr ""

#: ../../api.rst:2162
#: ../../api.rst:2186
msgid ":attr:`~AuditLogDiff.max_uses`"
msgstr ""

#: ../../api.rst:2166
msgid "An invite was updated."
msgstr ""

#: ../../api.rst:2168
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Invite` that was updated."
msgstr ""

#: ../../api.rst:2173
msgid "An invite was deleted."
msgstr ""

#: ../../api.rst:2175
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Invite` that was deleted."
msgstr ""

#: ../../api.rst:2190
msgid "A webhook was created."
msgstr ""

#: ../../api.rst:2192
#: ../../api.rst:2208
#: ../../api.rst:2221
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Object` with the webhook ID."
msgstr ""

#: ../../api.rst:2199
#: ../../api.rst:2228
msgid ":attr:`~AuditLogDiff.type` (always set to ``1`` if so)"
msgstr ""

#: ../../api.rst:2203
msgid "A webhook was updated. This trigger in the following situations:"
msgstr ""

#: ../../api.rst:2205
msgid "The webhook name changed"
msgstr ""

#: ../../api.rst:2206
msgid "The webhook channel changed"
msgstr ""

#: ../../api.rst:2215
msgid ":attr:`~AuditLogDiff.avatar`"
msgstr ""

#: ../../api.rst:2219
msgid "A webhook was deleted."
msgstr ""

#: ../../api.rst:2232
msgid "An emoji was created."
msgstr ""

#: ../../api.rst:2234
#: ../../api.rst:2245
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Emoji` or :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2243
msgid "An emoji was updated. This triggers when the name has changed."
msgstr ""

#: ../../api.rst:2254
msgid "An emoji was deleted."
msgstr ""

#: ../../api.rst:2256
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2265
msgid "A message was deleted by a moderator. Note that this only triggers if the message was deleted by someone other than the author."
msgstr ""

#: ../../api.rst:2268
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` who had their message deleted."
msgstr ""

#: ../../api.rst:2274
#: ../../api.rst:2287
msgid "``count``: An integer specifying how many messages were deleted."
msgstr ""

#: ../../api.rst:2275
msgid "``channel``: A :class:`TextChannel` or :class:`Object` with the channel ID where the message got deleted."
msgstr ""

#: ../../api.rst:2279
msgid "Messages were bulk deleted by a moderator."
msgstr ""

#: ../../api.rst:2281
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`TextChannel` or :class:`Object` with the ID of the channel that was purged."
msgstr ""

#: ../../api.rst:2293
msgid "A message was pinned in a channel."
msgstr ""

#: ../../api.rst:2295
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` who had their message pinned."
msgstr ""

#: ../../api.rst:2301
msgid "``channel``: A :class:`TextChannel` or :class:`Object` with the channel ID where the message was pinned."
msgstr ""

#: ../../api.rst:2302
msgid "``message_id``: the ID of the message which was pinned."
msgstr ""

#: ../../api.rst:2308
msgid "A message was unpinned in a channel."
msgstr ""

#: ../../api.rst:2310
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Member` or :class:`User` who had their message unpinned."
msgstr ""

#: ../../api.rst:2316
msgid "``channel``: A :class:`TextChannel` or :class:`Object` with the channel ID where the message was unpinned."
msgstr ""

#: ../../api.rst:2317
msgid "``message_id``: the ID of the message which was unpinned."
msgstr ""

#: ../../api.rst:2323
msgid "A guild integration was created."
msgstr ""

#: ../../api.rst:2325
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Object` with the integration ID of the integration which was created."
msgstr ""

#: ../../api.rst:2332
msgid "A guild integration was updated."
msgstr ""

#: ../../api.rst:2334
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Object` with the integration ID of the integration which was updated."
msgstr ""

#: ../../api.rst:2341
msgid "A guild integration was deleted."
msgstr ""

#: ../../api.rst:2343
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Object` with the integration ID of the integration which was deleted."
msgstr ""

#: ../../api.rst:2350
msgid "A stage instance was started."
msgstr ""

#: ../../api.rst:2352
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`StageInstance` or :class:`Object` with the ID of the stage instance which was created."
msgstr ""

#: ../../api.rst:2359
#: ../../api.rst:2374
msgid ":attr:`~AuditLogDiff.privacy_level`"
msgstr ""

#: ../../api.rst:2365
msgid "A stage instance was updated."
msgstr ""

#: ../../api.rst:2367
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`StageInstance` or :class:`Object` with the ID of the stage instance which was updated."
msgstr ""

#: ../../api.rst:2380
msgid "A stage instance was ended."
msgstr ""

#: ../../api.rst:2386
msgid "A sticker was created."
msgstr ""

#: ../../api.rst:2388
#: ../../api.rst:2407
#: ../../api.rst:2426
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`GuildSticker` or :class:`Object` with the ID of the sticker which was updated."
msgstr ""

#: ../../api.rst:2395
#: ../../api.rst:2414
#: ../../api.rst:2433
msgid ":attr:`~AuditLogDiff.emoji`"
msgstr ""

#: ../../api.rst:2397
#: ../../api.rst:2416
#: ../../api.rst:2435
msgid ":attr:`~AuditLogDiff.format_type`"
msgstr ""

#: ../../api.rst:2398
#: ../../api.rst:2417
#: ../../api.rst:2436
msgid ":attr:`~AuditLogDiff.description`"
msgstr ""

#: ../../api.rst:2399
#: ../../api.rst:2418
#: ../../api.rst:2437
msgid ":attr:`~AuditLogDiff.available`"
msgstr ""

#: ../../api.rst:2405
msgid "A sticker was updated."
msgstr ""

#: ../../api.rst:2424
msgid "A sticker was deleted."
msgstr ""

#: ../../api.rst:2443
msgid "A thread was created."
msgstr ""

#: ../../api.rst:2445
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Thread` or :class:`Object` with the ID of the thread which was created."
msgstr ""

#: ../../api.rst:2452
#: ../../api.rst:2469
#: ../../api.rst:2486
msgid ":attr:`~AuditLogDiff.archived`"
msgstr ""

#: ../../api.rst:2453
#: ../../api.rst:2470
#: ../../api.rst:2487
msgid ":attr:`~AuditLogDiff.locked`"
msgstr ""

#: ../../api.rst:2454
#: ../../api.rst:2471
#: ../../api.rst:2488
msgid ":attr:`~AuditLogDiff.auto_archive_duration`"
msgstr ""

#: ../../api.rst:2460
msgid "A thread was updated."
msgstr ""

#: ../../api.rst:2462
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Thread` or :class:`Object` with the ID of the thread which was updated."
msgstr ""

#: ../../api.rst:2477
msgid "A thread was deleted."
msgstr ""

#: ../../api.rst:2479
msgid "When this is the action, the type of :attr:`~AuditLogEntry.target` is the :class:`Thread` or :class:`Object` with the ID of the thread which was deleted."
msgstr ""

#: ../../api.rst:2494
msgid "Represents the category that the :class:`AuditLogAction` belongs to."
msgstr ""

#: ../../api.rst:2496
msgid "This can be retrieved via :attr:`AuditLogEntry.category`."
msgstr ""

#: ../../api.rst:2500
msgid "The action is the creation of something."
msgstr ""

#: ../../api.rst:2504
msgid "The action is the deletion of something."
msgstr ""

#: ../../api.rst:2508
msgid "The action is the update of something."
msgstr ""

#: ../../api.rst:2512
msgid "Represents the membership state of a team member retrieved through :func:`Client.application_info`."
msgstr ""

#: ../../api.rst:2518
msgid "Represents an invited member."
msgstr ""

#: ../../api.rst:2522
msgid "Represents a member currently in the team."
msgstr ""

#: ../../api.rst:2526
msgid "Represents the type of webhook that can be received."
msgstr ""

#: ../../api.rst:2532
msgid "Represents a webhook that can post messages to channels with a token."
msgstr ""

#: ../../api.rst:2536
msgid "Represents a webhook that is internally managed by Discord, used for following channels."
msgstr ""

#: ../../api.rst:2540
msgid "Represents a webhook that is used for interactions or applications."
msgstr ""

#: ../../api.rst:2546
msgid "Represents the behaviour the :class:`Integration` should perform when a user's subscription has finished."
msgstr ""

#: ../../api.rst:2549
msgid "There is an alias for this called ``ExpireBehavior``."
msgstr ""

#: ../../api.rst:2555
msgid "This will remove the :attr:`StreamIntegration.role` from the user when their subscription is finished."
msgstr ""

#: ../../api.rst:2560
msgid "This will kick the user when their subscription is finished."
msgstr ""

#: ../../api.rst:2564
msgid "Represents the default avatar of a Discord :class:`User`"
msgstr ""

#: ../../api.rst:2568
msgid "Represents the default avatar with the color blurple. See also :attr:`Colour.blurple`"
msgstr ""

#: ../../api.rst:2572
msgid "Represents the default avatar with the color grey. See also :attr:`Colour.greyple`"
msgstr ""

#: ../../api.rst:2576
msgid "An alias for :attr:`grey`."
msgstr ""

#: ../../api.rst:2579
msgid "Represents the default avatar with the color green. See also :attr:`Colour.green`"
msgstr ""

#: ../../api.rst:2583
msgid "Represents the default avatar with the color orange. See also :attr:`Colour.orange`"
msgstr ""

#: ../../api.rst:2587
msgid "Represents the default avatar with the color red. See also :attr:`Colour.red`"
msgstr ""

#: ../../api.rst:2592
msgid "Represents the type of sticker."
msgstr ""

#: ../../api.rst:2598
msgid "Represents a standard sticker that all Nitro users can use."
msgstr ""

#: ../../api.rst:2602
msgid "Represents a custom sticker created in a guild."
msgstr ""

#: ../../api.rst:2606
msgid "Represents the type of sticker images."
msgstr ""

#: ../../api.rst:2612
msgid "Represents a sticker with a png image."
msgstr ""

#: ../../api.rst:2616
msgid "Represents a sticker with an apng image."
msgstr ""

#: ../../api.rst:2620
msgid "Represents a sticker with a lottie image."
msgstr ""

#: ../../api.rst:2624
msgid "Represents the invite type for voice channel invites."
msgstr ""

#: ../../api.rst:2630
msgid "The invite doesn't target anyone or anything."
msgstr ""

#: ../../api.rst:2634
msgid "A stream invite that targets a user."
msgstr ""

#: ../../api.rst:2638
msgid "A stream invite that targets an embedded application."
msgstr ""

#: ../../api.rst:2642
msgid "Represents the camera video quality mode for voice channel participants."
msgstr ""

#: ../../api.rst:2648
msgid "Represents auto camera video quality."
msgstr ""

#: ../../api.rst:2652
msgid "Represents full camera video quality."
msgstr ""

#: ../../api.rst:2656
msgid "Represents a stage instance's privacy level."
msgstr ""

#: ../../api.rst:2662
msgid "The stage instance can be joined by external users."
msgstr ""

#: ../../api.rst:2666
msgid "The stage instance can only be joined by members of the guild."
msgstr ""

#: ../../api.rst:2670
msgid "Alias for :attr:`.closed`"
msgstr ""

#: ../../api.rst:2674
msgid "Represents the NSFW level of a guild."
msgstr ""

#: ../../api.rst:2682
msgid "Checks if two NSFW levels are equal."
msgstr ""

#: ../../api.rst:2685
msgid "Checks if two NSFW levels are not equal."
msgstr ""

#: ../../api.rst:2688
msgid "Checks if a NSFW level is higher than another."
msgstr ""

#: ../../api.rst:2691
msgid "Checks if a NSFW level is lower than another."
msgstr ""

#: ../../api.rst:2694
msgid "Checks if a NSFW level is higher or equal to another."
msgstr ""

#: ../../api.rst:2697
msgid "Checks if a NSFW level is lower or equal to another."
msgstr ""

#: ../../api.rst:2701
msgid "The guild has not been categorised yet."
msgstr ""

#: ../../api.rst:2705
msgid "The guild contains NSFW content."
msgstr ""

#: ../../api.rst:2709
msgid "The guild does not contain any NSFW content."
msgstr ""

#: ../../api.rst:2713
msgid "The guild may contain NSFW content."
msgstr ""

#: ../../api.rst:2716
msgid "Async Iterator"
msgstr ""

#: ../../api.rst:2718
msgid "Some API functions return an \"async iterator\". An async iterator is something that is capable of being used in an :ref:`async for statement <py:async for>`."
msgstr ""

#: ../../api.rst:2721
msgid "These async iterators can be used as follows: ::"
msgstr ""

#: ../../api.rst:2726
msgid "Certain utilities make working with async iterators easier, detailed below."
msgstr ""

#: ../../api.rst:2730
msgid "Represents the \"AsyncIterator\" concept. Note that no such class exists, it is purely abstract."
msgstr ""

#: ../../api.rst:2737
msgid "Iterates over the contents of the async iterator."
msgstr ""

#: ../../api.rst:2745
msgid "Advances the iterator by one, if possible. If no more items are found then this raises :exc:`NoMoreItems`."
msgstr ""

#: ../../api.rst:2753
msgid "Similar to :func:`utils.get` except run over the async iterator."
msgstr ""

#: ../../api.rst:2755
msgid "Getting the last message by a user named 'Dave' or ``None``: ::"
msgstr ""

#: ../../api.rst:2764
msgid "Similar to :func:`utils.find` except run over the async iterator."
msgstr ""

#: ../../api.rst:2766
msgid "Unlike :func:`utils.find`\\, the predicate provided can be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2769
msgid "Getting the last audit log with a reason or ``None``: ::"
msgstr ""

#: ../../api.rst:2776
msgid "The predicate to use. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2777
msgid "The first element that returns ``True`` for the predicate or ``None``."
msgstr ""

#: ../../api.rst:2784
msgid "Flattens the async iterator into a :class:`list` with all the elements."
msgstr ""

#: ../../api.rst:2786
msgid "A list of every element in the async iterator."
msgstr ""

#: ../../api.rst:2791
msgid "Collects items into chunks of up to a given maximum size. Another :class:`AsyncIterator` is returned which collects items into :class:`list`\\s of a given size. The maximum chunk size must be a positive integer."
msgstr ""

#: ../../api.rst:2797
msgid "Collecting groups of users: ::"
msgstr ""

#: ../../api.rst:2806
msgid "The size of individual chunks."
msgstr ""

#: ../../api.rst:2807
#: ../../api.rst:2825
#: ../../api.rst:2842
msgid ":class:`AsyncIterator`"
msgstr ""

#: ../../api.rst:2811
msgid "This is similar to the built-in :func:`map <py:map>` function. Another :class:`AsyncIterator` is returned that executes the function on every element it is iterating over. This function can either be a regular function or a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2816
msgid "Creating a content iterator: ::"
msgstr ""

#: ../../api.rst:2824
msgid "The function to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2829
msgid "This is similar to the built-in :func:`filter <py:filter>` function. Another :class:`AsyncIterator` is returned that filters over the original async iterator. This predicate can be a regular function or a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2833
msgid "Getting messages by non-bot accounts: ::"
msgstr ""

#: ../../api.rst:2841
msgid "The predicate to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:2847
msgid "Audit Log Data"
msgstr ""

#: ../../api.rst:2849
msgid "Working with :meth:`Guild.audit_logs` is a complicated process with a lot of machinery involved. The library attempts to make it easy to use and friendly. In order to accomplish this goal, it must make use of a couple of data classes that aid in this goal."
msgstr ""

#: ../../api.rst:2854
msgid "AuditLogEntry"
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:1
msgid "Represents an Audit Log entry."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:3
msgid "You retrieve these via :meth:`Guild.audit_logs`."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:9
msgid "Checks if two entries are equal."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:13
msgid "Checks if two entries are not equal."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:17
msgid "Returns the entry's hash."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:19
msgid "Audit log entries are now comparable and hashable."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:24
msgid "The action that was done."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:26
msgid ":class:`AuditLogAction`"
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:30
msgid "The user who initiated this action. Usually a :class:`Member`\\, unless gone then it's a :class:`User`."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:33
msgid ":class:`abc.User`"
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:37
msgid "The entry ID."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:43
msgid "The target that got changed. The exact type of this depends on the action being done."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:46
#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:61
msgid "Any"
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:50
msgid "The reason this action was done."
msgstr ""

#: ../../../discord/audit_logs.py:docstring of discord.audit_logs.AuditLogEntry:56
msgid "Extra information that this entry has that might be useful. For most actions, this is ``None``. However in some cases it contains extra information. See :class:`AuditLogAction` for which actions have this field filled out."
msgstr ""

#: ../../docstring of discord.AuditLogEntry.created_at:1
msgid "Returns the entry's creation time in UTC."
msgstr ""

#: ../../docstring of discord.AuditLogEntry.category:1
msgid "The category of the action, if applicable."
msgstr ""

#: ../../docstring of discord.AuditLogEntry.category:3
msgid "Optional[:class:`AuditLogActionCategory`]"
msgstr ""

#: ../../docstring of discord.AuditLogEntry.changes:1
msgid "The list of changes this entry has."
msgstr ""

#: ../../docstring of discord.AuditLogEntry.changes:3
msgid ":class:`AuditLogChanges`"
msgstr ""

#: ../../docstring of discord.AuditLogEntry.before:1
msgid "The target's prior state."
msgstr ""

#: ../../docstring of discord.AuditLogEntry.before:3
#: ../../docstring of discord.AuditLogEntry.after:3
msgid ":class:`AuditLogDiff`"
msgstr ""

#: ../../docstring of discord.AuditLogEntry.after:1
msgid "The target's subsequent state."
msgstr ""

#: ../../api.rst:2862
msgid "AuditLogChanges"
msgstr ""

#: ../../api.rst:2868
msgid "An audit log change set."
msgstr ""

#: ../../api.rst:2872
msgid "The old value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:2874
#: ../../api.rst:2894
msgid "Depending on the :class:`AuditLogActionCategory` retrieved by :attr:`~AuditLogEntry.category`\\, the data retrieved by this attribute differs:"
msgstr ""

#: ../../api.rst:2879
#: ../../api.rst:2899
msgid "Category"
msgstr ""

#: ../../api.rst:2881
#: ../../api.rst:2901
msgid ":attr:`~AuditLogActionCategory.create`"
msgstr ""

#: ../../api.rst:2881
msgid "All attributes are set to ``None``."
msgstr ""

#: ../../api.rst:2883
#: ../../api.rst:2903
msgid ":attr:`~AuditLogActionCategory.delete`"
msgstr ""

#: ../../api.rst:2883
msgid "All attributes are set the value before deletion."
msgstr ""

#: ../../api.rst:2885
#: ../../api.rst:2905
msgid ":attr:`~AuditLogActionCategory.update`"
msgstr ""

#: ../../api.rst:2885
msgid "All attributes are set the value before updating."
msgstr ""

#: ../../api.rst:2887
#: ../../api.rst:2907
msgid "``None``"
msgstr ""

#: ../../api.rst:2887
#: ../../api.rst:2907
msgid "No attributes are set."
msgstr ""

#: ../../api.rst:2892
msgid "The new value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:2901
msgid "All attributes are set to the created value"
msgstr ""

#: ../../api.rst:2903
msgid "All attributes are set to ``None``"
msgstr ""

#: ../../api.rst:2905
msgid "All attributes are set the value after updating."
msgstr ""

#: ../../api.rst:2911
msgid "AuditLogDiff"
msgstr ""

#: ../../api.rst:2917
msgid "Represents an audit log \"change\" object. A change object has dynamic attributes that depend on the type of action being done. Certain actions map to certain attributes being set."
msgstr ""

#: ../../api.rst:2921
msgid "Note that accessing an attribute that does not match the specified action will lead to an attribute error."
msgstr ""

#: ../../api.rst:2924
msgid "To get a list of attributes that have been set, you can iterate over them. To see a list of all possible attributes that could be set based on the action being done, check the documentation for :class:`AuditLogAction`, otherwise check the documentation below for all attributes that are possible."
msgstr ""

#: ../../api.rst:2933
msgid "Returns an iterator over (attribute, value) tuple of this diff."
msgstr ""

#: ../../api.rst:2937
msgid "A name of something."
msgstr ""

#: ../../api.rst:2943
msgid "A guild's icon. See also :attr:`Guild.icon`."
msgstr ""

#: ../../api.rst:2945
#: ../../api.rst:2951
#: ../../api.rst:2957
#: ../../api.rst:2963
#: ../../api.rst:3277
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.avatar:6
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.avatar:6
#: ../../../discord/user.py:docstring of discord.ClientUser.default_avatar:4
#: ../../../discord/user.py:docstring of discord.ClientUser.display_avatar:7
#: ../../../discord/user.py:docstring of discord.User.default_avatar:4
#: ../../../discord/user.py:docstring of discord.User.display_avatar:7
#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:15
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:9
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:9
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:12
#: ../../../discord/member.py:docstring of discord.Member.display_avatar:9
#: ../../../discord/widget.py:docstring of discord.WidgetMember.default_avatar:4
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_avatar:7
#: ../../../discord/sticker.py:docstring of discord.StickerPack.banner:3
msgid ":class:`Asset`"
msgstr ""

#: ../../api.rst:2949
msgid "The guild's invite splash. See also :attr:`Guild.splash`."
msgstr ""

#: ../../api.rst:2955
msgid "The guild's discovery splash. See also :attr:`Guild.discovery_splash`."
msgstr ""

#: ../../api.rst:2961
msgid "The guild's banner. See also :attr:`Guild.banner`."
msgstr ""

#: ../../api.rst:2967
msgid "The guild's owner. See also :attr:`Guild.owner`"
msgstr ""

#: ../../api.rst:2969
msgid "Union[:class:`Member`, :class:`User`]"
msgstr ""

#: ../../api.rst:2973
msgid "The guild's voice region. See also :attr:`Guild.region`."
msgstr ""

#: ../../api.rst:2975
#: ../../api.rst:3295
#: ../../../discord/guild.py:docstring of discord.guild.Guild:48
msgid ":class:`VoiceRegion`"
msgstr ""

#: ../../api.rst:2979
msgid "The guild's AFK channel."
msgstr ""

#: ../../api.rst:2981
#: ../../api.rst:2992
msgid "If this could not be found, then it falls back to a :class:`Object` with the ID being set."
msgstr ""

#: ../../api.rst:2984
msgid "See :attr:`Guild.afk_channel`."
msgstr ""

#: ../../api.rst:2986
msgid "Union[:class:`VoiceChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:2990
msgid "The guild's system channel."
msgstr ""

#: ../../api.rst:2995
msgid "See :attr:`Guild.system_channel`."
msgstr ""

#: ../../api.rst:2997
#: ../../api.rst:3009
#: ../../api.rst:3021
#: ../../api.rst:3048
msgid "Union[:class:`TextChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3002
msgid "The guild's rules channel."
msgstr ""

#: ../../api.rst:3004
#: ../../api.rst:3016
#: ../../api.rst:3045
msgid "If this could not be found then it falls back to a :class:`Object` with the ID being set."
msgstr ""

#: ../../api.rst:3007
msgid "See :attr:`Guild.rules_channel`."
msgstr ""

#: ../../api.rst:3014
msgid "The guild's public updates channel."
msgstr ""

#: ../../api.rst:3019
msgid "See :attr:`Guild.public_updates_channel`."
msgstr ""

#: ../../api.rst:3025
msgid "The guild's AFK timeout. See :attr:`Guild.afk_timeout`."
msgstr ""

#: ../../api.rst:3031
msgid "The guild's MFA level. See :attr:`Guild.mfa_level`."
msgstr ""

#: ../../api.rst:3037
msgid "The guild's widget has been enabled or disabled."
msgstr ""

#: ../../api.rst:3043
msgid "The widget's channel."
msgstr ""

#: ../../api.rst:3052
#: ../../../discord/guild.py:docstring of discord.guild.Guild:124
msgid "The guild's verification level."
msgstr ""

#: ../../api.rst:3054
msgid "See also :attr:`Guild.verification_level`."
msgstr ""

#: ../../api.rst:3056
#: ../../../discord/guild.py:docstring of discord.guild.Guild:126
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:40
msgid ":class:`VerificationLevel`"
msgstr ""

#: ../../api.rst:3060
msgid "The guild's default notification level."
msgstr ""

#: ../../api.rst:3062
msgid "See also :attr:`Guild.default_notifications`."
msgstr ""

#: ../../api.rst:3064
#: ../../../discord/guild.py:docstring of discord.guild.Guild:138
msgid ":class:`NotificationLevel`"
msgstr ""

#: ../../api.rst:3068
msgid "The guild's content filter."
msgstr ""

#: ../../api.rst:3070
msgid "See also :attr:`Guild.explicit_content_filter`."
msgstr ""

#: ../../api.rst:3072
#: ../../../discord/guild.py:docstring of discord.guild.Guild:132
msgid ":class:`ContentFilter`"
msgstr ""

#: ../../api.rst:3076
msgid "The guild's default message notification setting."
msgstr ""

#: ../../api.rst:3082
msgid "The guild's vanity URL."
msgstr ""

#: ../../api.rst:3084
msgid "See also :meth:`Guild.vanity_invite` and :meth:`Guild.edit`."
msgstr ""

#: ../../api.rst:3090
msgid "The position of a :class:`Role` or :class:`abc.GuildChannel`."
msgstr ""

#: ../../api.rst:3096
msgid "The type of channel or sticker."
msgstr ""

#: ../../api.rst:3098
msgid "Union[:class:`ChannelType`, :class:`StickerType`]"
msgstr ""

#: ../../api.rst:3102
msgid "The topic of a :class:`TextChannel` or :class:`StageChannel`."
msgstr ""

#: ../../api.rst:3104
msgid "See also :attr:`TextChannel.topic` or :attr:`StageChannel.topic`."
msgstr ""

#: ../../api.rst:3110
msgid "The bitrate of a :class:`VoiceChannel`."
msgstr ""

#: ../../api.rst:3112
msgid "See also :attr:`VoiceChannel.bitrate`."
msgstr ""

#: ../../api.rst:3118
msgid "A list of permission overwrite tuples that represents a target and a :class:`PermissionOverwrite` for said target."
msgstr ""

#: ../../api.rst:3121
msgid "The first element is the object being targeted, which can either be a :class:`Member` or :class:`User` or :class:`Role`. If this object is not found then it is a :class:`Object` with an ID being filled and a ``type`` attribute set to either ``'role'`` or ``'member'`` to help decide what type of ID it is."
msgstr ""

#: ../../api.rst:3127
msgid "List[Tuple[target, :class:`PermissionOverwrite`]]"
msgstr ""

#: ../../api.rst:3131
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:45
msgid "The privacy level of the stage instance."
msgstr ""

#: ../../api.rst:3133
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:47
msgid ":class:`StagePrivacyLevel`"
msgstr ""

#: ../../api.rst:3137
msgid "A list of roles being added or removed from a member."
msgstr ""

#: ../../api.rst:3139
msgid "If a role is not found then it is a :class:`Object` with the ID and name being filled in."
msgstr ""

#: ../../api.rst:3142
msgid "List[Union[:class:`Role`, :class:`Object`]]"
msgstr ""

#: ../../api.rst:3146
msgid "The nickname of a member."
msgstr ""

#: ../../api.rst:3148
msgid "See also :attr:`Member.nick`"
msgstr ""

#: ../../api.rst:3154
msgid "Whether the member is being server deafened."
msgstr ""

#: ../../api.rst:3156
msgid "See also :attr:`VoiceState.deaf`."
msgstr ""

#: ../../api.rst:3162
msgid "Whether the member is being server muted."
msgstr ""

#: ../../api.rst:3164
msgid "See also :attr:`VoiceState.mute`."
msgstr ""

#: ../../api.rst:3170
msgid "The permissions of a role."
msgstr ""

#: ../../api.rst:3172
msgid "See also :attr:`Role.permissions`."
msgstr ""

#: ../../api.rst:3174
#: ../../api.rst:3263
#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:5
#: ../../../discord/member.py:docstring of discord.Member.guild_permissions:11
#: ../../../discord/role.py:docstring of discord.Role.permissions:3
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:18
msgid ":class:`Permissions`"
msgstr ""

#: ../../api.rst:3179
msgid "The colour of a role."
msgstr ""

#: ../../api.rst:3181
msgid "See also :attr:`Role.colour`"
msgstr ""

#: ../../api.rst:3183
#: ../../../discord/user.py:docstring of discord.ClientUser.color:6
#: ../../../discord/user.py:docstring of discord.ClientUser.colour:6
#: ../../../discord/user.py:docstring of discord.User.color:6
#: ../../../discord/user.py:docstring of discord.User.colour:6
#: ../../../discord/member.py:docstring of discord.Member.colour:7
#: ../../../discord/member.py:docstring of discord.Member.color:7
#: ../../../discord/activity.py:docstring of discord.Spotify.colour:5
#: ../../../discord/activity.py:docstring of discord.Spotify.color:5
#: ../../../discord/role.py:docstring of discord.Role.colour:3
#: ../../../discord/role.py:docstring of discord.Role.color:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.color:6
#: ../../../discord/widget.py:docstring of discord.WidgetMember.colour:6
msgid ":class:`Colour`"
msgstr ""

#: ../../api.rst:3187
msgid "Whether the role is being hoisted or not."
msgstr ""

#: ../../api.rst:3189
msgid "See also :attr:`Role.hoist`"
msgstr ""

#: ../../api.rst:3195
msgid "Whether the role is mentionable or not."
msgstr ""

#: ../../api.rst:3197
msgid "See also :attr:`Role.mentionable`"
msgstr ""

#: ../../api.rst:3203
msgid "The invite's code."
msgstr ""

#: ../../api.rst:3205
msgid "See also :attr:`Invite.code`"
msgstr ""

#: ../../api.rst:3211
msgid "A guild channel."
msgstr ""

#: ../../api.rst:3213
msgid "If the channel is not found then it is a :class:`Object` with the ID being set. In some cases the channel name is also set."
msgstr ""

#: ../../api.rst:3216
msgid "Union[:class:`abc.GuildChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3220
#: ../../../discord/invite.py:docstring of discord.invite.Invite:101
msgid "The user who created the invite."
msgstr ""

#: ../../api.rst:3222
msgid "See also :attr:`Invite.inviter`."
msgstr ""

#: ../../api.rst:3224
#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:39
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:76
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:27
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:43
#: ../../../discord/invite.py:docstring of discord.invite.Invite:103
#: ../../../discord/invite.py:docstring of discord.invite.Invite:147
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:60
msgid "Optional[:class:`User`]"
msgstr ""

#: ../../api.rst:3228
msgid "The invite's max uses."
msgstr ""

#: ../../api.rst:3230
msgid "See also :attr:`Invite.max_uses`."
msgstr ""

#: ../../api.rst:3236
msgid "The invite's current uses."
msgstr ""

#: ../../api.rst:3238
msgid "See also :attr:`Invite.uses`."
msgstr ""

#: ../../api.rst:3244
msgid "The invite's max age in seconds."
msgstr ""

#: ../../api.rst:3246
msgid "See also :attr:`Invite.max_age`."
msgstr ""

#: ../../api.rst:3252
msgid "If the invite is a temporary invite."
msgstr ""

#: ../../api.rst:3254
msgid "See also :attr:`Invite.temporary`."
msgstr ""

#: ../../api.rst:3261
msgid "The permissions being allowed or denied."
msgstr ""

#: ../../api.rst:3267
msgid "The ID of the object being changed."
msgstr ""

#: ../../api.rst:3273
msgid "The avatar of a member."
msgstr ""

#: ../../api.rst:3275
msgid "See also :attr:`User.avatar`."
msgstr ""

#: ../../api.rst:3281
msgid "The number of seconds members have to wait before sending another message in the channel."
msgstr ""

#: ../../api.rst:3284
msgid "See also :attr:`TextChannel.slowmode_delay`."
msgstr ""

#: ../../api.rst:3290
msgid "The region for the voice channel’s voice communication. A value of ``None`` indicates automatic voice region detection."
msgstr ""

#: ../../api.rst:3293
msgid "See also :attr:`VoiceChannel.rtc_region`."
msgstr ""

#: ../../api.rst:3299
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:27
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:75
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:38
msgid "The camera video quality for the voice channel's participants."
msgstr ""

#: ../../api.rst:3301
msgid "See also :attr:`VoiceChannel.video_quality_mode`."
msgstr ""

#: ../../api.rst:3303
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:79
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:85
msgid ":class:`VideoQualityMode`"
msgstr ""

#: ../../api.rst:3307
msgid "The format type of a sticker being changed."
msgstr ""

#: ../../api.rst:3309
msgid "See also :attr:`GuildSticker.format`"
msgstr ""

#: ../../api.rst:3311
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:35
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:47
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:47
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:41
msgid ":class:`StickerFormatType`"
msgstr ""

#: ../../api.rst:3315
msgid "The name of the emoji that represents a sticker being changed."
msgstr ""

#: ../../api.rst:3317
msgid "See also :attr:`GuildSticker.emoji`"
msgstr ""

#: ../../api.rst:3323
msgid "The description of a sticker being changed."
msgstr ""

#: ../../api.rst:3325
msgid "See also :attr:`GuildSticker.description`"
msgstr ""

#: ../../api.rst:3331
msgid "The availability of a sticker being changed."
msgstr ""

#: ../../api.rst:3333
msgid "See also :attr:`GuildSticker.available`"
msgstr ""

#: ../../api.rst:3339
msgid "The thread is now archived."
msgstr ""

#: ../../api.rst:3345
msgid "The thread is being locked or unlocked."
msgstr ""

#: ../../api.rst:3351
msgid "The thread's auto archive duration being changed."
msgstr ""

#: ../../api.rst:3353
msgid "See also :attr:`Thread.auto_archive_duration`"
msgstr ""

#: ../../api.rst:3359
msgid "The default auto archive duration for newly created threads being changed."
msgstr ""

#: ../../api.rst:3367
msgid "Webhook Support"
msgstr ""

#: ../../api.rst:3369
msgid "ndiscord.py offers support for creating, editing, and executing webhooks through the :class:`Webhook` class."
msgstr ""

#: ../../api.rst:3372
msgid "Webhook"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:1
msgid "Represents an asynchronous Discord webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:3
msgid "Webhooks are a form to send messages to channels in Discord without a bot user or authentication."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:6
msgid "There are two main ways to use Webhooks. The first is through the ones received by the library such as :meth:`.Guild.webhooks` and :meth:`.TextChannel.webhooks`. The ones received by the library will automatically be bound using the library's internal HTTP session."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:11
msgid "The second form involves creating a webhook object manually using the :meth:`~.Webhook.from_url` or :meth:`~.Webhook.partial` classmethods."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:14
msgid "For example, creating a webhook from a URL and using :doc:`aiohttp <aio:index>`:"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:26
msgid "For a synchronous counterpart, see :class:`SyncWebhook`."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:32
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:9
msgid "Checks if two webhooks are equal."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:36
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:13
msgid "Checks if two webhooks are not equal."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:40
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:17
msgid "Returns the webhooks's hash."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:42
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:19
msgid "Webhooks are now comparable and hashable."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:47
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:24
msgid "The webhook's ID"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:53
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:30
msgid "The type of the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:57
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:34
msgid ":class:`WebhookType`"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:61
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:38
msgid "The authentication token of the webhook. If this is ``None`` then the webhook cannot be used to make requests."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:68
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:45
msgid "The guild ID this webhook is for."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:74
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:51
msgid "The channel ID this webhook is for."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:80
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:57
msgid "The user this webhook was created by. If the webhook was received without authentication then this will be ``None``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:83
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:60
msgid "Optional[:class:`abc.User`]"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:87
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:64
msgid "The default name of the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:93
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:70
msgid "The guild of the channel that this webhook is following. Only given if :attr:`type` is :attr:`WebhookType.channel_follower`."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:98
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:75
msgid "Optional[:class:`PartialWebhookGuild`]"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:102
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:79
msgid "The channel that this webhook is following. Only given if :attr:`type` is :attr:`WebhookType.channel_follower`."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook:107
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:84
msgid "Optional[:class:`PartialWebhookChannel`]"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.url:1
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.url:1
msgid "Returns the webhook's url."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:1
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:1
msgid "Creates a partial :class:`Webhook`."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:3
msgid "The ID of the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:5
msgid "The authentication token of the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:7
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:5
msgid "The session to use to send requests with. Note that the library does not manage the session and will not close it.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:7
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:5
msgid "The session to use to send requests with. Note that the library does not manage the session and will not close it."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:13
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:11
msgid "The bot authentication token for authenticated requests involving the webhook.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:13
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:12
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:10
msgid "The bot authentication token for authenticated requests involving the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:19
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:19
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:16
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:16
msgid "A partial :class:`Webhook`. A partial webhook is just a webhook object with an ID and a token."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.partial:21
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:21
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:24
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:18
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:18
#: ../../docstring of discord.Interaction.followup:3
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:22
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:23
msgid ":class:`Webhook`"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:1
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:1
msgid "Creates a partial :class:`Webhook` from a webhook URL."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:3
msgid "The URL of the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.from_url:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:14
msgid "The URL is invalid."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:1
msgid "Fetches the current webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:3
msgid "This could be used to get a full webhook from a partial webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:7
msgid "When fetching with an unauthenticated webhook, i.e. :meth:`is_authenticated` returns ``False``, then the returned webhook does not contain any user information."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:15
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:9
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:7
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:13
msgid "Whether to use the bot token over the webhook token if available. Defaults to ``True``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:19
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:15
msgid "Could not fetch the webhook"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:20
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:16
msgid "Could not find the webhook by this ID"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:21
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:18
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:14
msgid "This webhook does not have a token associated with it."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch:23
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:19
msgid "The fetched webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:1
msgid "Deletes this Webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:3
msgid "The reason for deleting this webhook. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:3
msgid "The reason for deleting this webhook. Shows up on the audit log."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:9
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:17
msgid "Whether to use the bot token over the webhook token if available. Defaults to ``True``.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:15
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:11
msgid "Deleting the webhook failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:16
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:24
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:12
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:18
msgid "This webhook does not exist."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete:13
msgid "You do not have permissions to delete this webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:1
msgid "Edits this Webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:3
msgid "The webhook's new default name."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:7
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:5
msgid "A :term:`py:bytes-like object` representing the webhook's new default avatar."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:9
msgid "The webhook's new channel. This requires an authenticated webhook.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:9
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:7
msgid "The webhook's new channel. This requires an authenticated webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:13
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:9
msgid "The reason for editing this webhook. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:13
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:9
msgid "The reason for editing this webhook. Shows up on the audit log."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:23
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:17
msgid "Editing the webhook failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit:25
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:19
msgid "This webhook does not have a token associated with it     or it tried editing a channel without authentication."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.avatar:1
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.avatar:1
msgid "Returns an :class:`Asset` for the avatar the webhook has."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.avatar:3
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.avatar:3
msgid "If the webhook does not have a traditional avatar, an asset for the default avatar is returned instead."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.channel:1
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.channel:1
msgid "The text channel this webhook belongs to."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.channel:3
#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.guild:3
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.channel:3
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.guild:3
msgid "If this is a partial webhook, then this will always return ``None``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.channel:5
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.channel:5
#: ../../../discord/guild.py:docstring of discord.Guild.system_channel:5
#: ../../../discord/guild.py:docstring of discord.Guild.rules_channel:8
#: ../../../discord/guild.py:docstring of discord.Guild.public_updates_channel:9
#: ../../../discord/threads.py:docstring of discord.Thread.parent:3
msgid "Optional[:class:`TextChannel`]"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.created_at:1
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.created_at:1
msgid "Returns the webhook's creation time in UTC."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.Webhook.guild:1
#: ../../../discord/webhook/sync.py:docstring of discord.SyncWebhook.guild:1
msgid "The guild this webhook belongs to."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.BaseWebhook.is_authenticated:1
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.async_.BaseWebhook.is_authenticated:1
msgid ":class:`bool`: Whether the webhook is authenticated with a bot token."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.BaseWebhook.is_partial:1
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.async_.BaseWebhook.is_partial:1
msgid ":class:`bool`: Whether the webhook is a \"partial\" webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:1
msgid "Sends a message using the webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:3
msgid "The content must be a type that can convert to a string through ``str(content)``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:7
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:5
msgid "To upload a single file, the ``file`` parameter should be used with a single :class:`File` object."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:8
msgid "If the ``embed`` parameter is provided, it must be of type :class:`Embed` and it must be a rich embed type. You cannot mix the ``embed`` parameter with the ``embeds`` parameter, which must be a :class:`list` of :class:`Embed` objects to send."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:14
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:12
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:5
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:19
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:19
msgid "The content of the message to send."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:16
msgid "Whether the server should wait before sending a response. This essentially means that the return type of this function changes from ``None`` to a :class:`WebhookMessage` if set to ``True``. If the type of webhook is :attr:`WebhookType.application` then this is always set to ``True``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:21
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:18
msgid "The username to send with this message. If no username is provided then the default username for the webhook is used."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:24
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:21
msgid "The avatar URL to send with this message. If no avatar URL is provided then the default avatar for the webhook is used. If this is not a string then it is explicitly cast using ``str``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:28
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:13
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:21
msgid "Indicates if the message should be sent using text-to-speech."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:30
msgid "Indicates if the message should only be visible to the user. This is only available to :attr:`WebhookType.application` webhooks. If a view is sent with an ephemeral message and it has no timeout set then the timeout is set to 15 minutes.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:30
msgid "Indicates if the message should only be visible to the user. This is only available to :attr:`WebhookType.application` webhooks. If a view is sent with an ephemeral message and it has no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:37
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:22
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:27
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:17
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:10
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:18
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:12
msgid "The file to upload. This cannot be mixed with ``files`` parameter."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:39
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:26
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:21
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:29
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:19
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:12
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:20
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:14
msgid "A list of files to send with the content. This cannot be mixed with the ``file`` parameter."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:42
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:32
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:10
msgid "The rich embed for the content to send. This cannot be mixed with ``embeds`` parameter."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:45
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:35
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:7
msgid "A list of embeds to send with the content. Maximum of 10. This cannot be mixed with the ``embed`` parameter."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:48
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:38
msgid "Controls the mentions being processed in this message.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:48
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:38
msgid "Controls the mentions being processed in this message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:52
msgid "The view to send with the message. You can only send a view if this webhook is not partial and has state attached. A webhook has state attached if the webhook is managed by the library.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:52
msgid "The view to send with the message. You can only send a view if this webhook is not partial and has state attached. A webhook has state attached if the webhook is managed by the library."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:59
msgid "The thread to send this webhook to.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:59
msgid "The thread to send this webhook to."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:64
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:47
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/message.py:docstring of discord.message.Message.reply:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:22
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:67
#: ../../../discord/message.py:docstring of discord.message.Message.reply:8
msgid "Sending the message failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:65
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:48
msgid "This webhook was not found."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:66
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:49
msgid "The authorization token for the webhook is incorrect."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:67
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:68
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:33
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:24
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:27
msgid "The length of ``embeds`` was invalid."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:69
msgid "There was no token associated with this webhook or ``ephemeral``     was passed with the improper webhook type or there was no state     attached with this webhook when giving it a view."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:71
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:54
msgid "If ``wait`` is ``True`` then the message that was sent, otherwise ``None``."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.send:72
msgid "Optional[:class:`WebhookMessage`]"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:3
msgid "Retrieves a single :class:`~discord.WebhookMessage` owned by this webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:7
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:5
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:5
msgid "The message ID to look for."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:8
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:8
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:8
msgid "The specified message was not found."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:9
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:9
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:6
msgid "You do not have the permissions required to get a message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:12
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:10
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:7
msgid "Retrieving the message failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:13
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:39
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:52
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:30
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:23
msgid "There was no token associated with this webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:15
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:13
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:12
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:12
msgid "The message asked for."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.fetch_message:16
msgid ":class:`~discord.WebhookMessage`"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:1
msgid "Edits a message owned by this webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:3
msgid "This is a lower level interface to :meth:`WebhookMessage.edit` in case you only have an ID."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:10
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:7
msgid "The edit is no longer in-place, instead the newly edited message is returned."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:13
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:8
msgid "The message ID to edit."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:15
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:3
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:11
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:5
msgid "The content to edit the message with or ``None`` to clear it."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:17
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:12
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:12
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:5
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:7
msgid "A list of embeds to edit the message with."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:19
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:14
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:14
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:7
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:15
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:10
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:9
msgid "The embed to edit the message with. ``None`` suppresses the embeds. This should not be mixed with the ``embeds`` parameter."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:22
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:17
msgid "The file to upload. This cannot be mixed with ``files`` parameter.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:26
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:21
msgid "A list of files to send with the content. This cannot be mixed with the ``file`` parameter.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:31
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:26
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:22
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:15
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:23
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:17
msgid "Controls the mentions being processed in this message. See :meth:`.abc.Messageable.send` for more information."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:34
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed. The webhook must have state attached, similar to :meth:`send`.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:34
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed. The webhook must have state attached, similar to :meth:`send`."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:41
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:35
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:26
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:19
#: ../../../discord/message.py:docstring of discord.message.Message.edit:46
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:30
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:20
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:24
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:39
msgid "Editing the message failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:42
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:36
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:27
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:20
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:31
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:25
msgid "Edited a message that is not yours."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:43
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:37
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:50
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:28
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:21
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:32
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:26
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:44
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:38
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:51
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit_message:29
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:22
msgid "The length of ``embeds`` was invalid"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:45
msgid "There was no token associated with this webhook or the webhook had     no state."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:47
msgid "The newly edited webhook message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.edit_message:48
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:42
msgid ":class:`WebhookMessage`"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:1
msgid "Deletes a message owned by this webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:5
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:3
msgid "This is a lower level interface to :meth:`WebhookMessage.delete` in case you only have an ID."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:8
msgid "The message ID to delete."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:13
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:11
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:9
#: ../../../discord/message.py:docstring of discord.message.Message.delete:18
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:11
#: ../../../discord/message.py:docstring of discord.message.Message.delete:18
msgid "Deleting the message failed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.Webhook.delete_message:14
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.delete_message:12
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:9
msgid "Deleted a message that is not yours."
msgstr ""

#: ../../api.rst:3381
msgid "WebhookMessage"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage:1
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage:1
msgid "Represents a message sent from your webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage:3
msgid "This allows you to edit or delete a message sent by your webhook."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage:6
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage:6
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:6
msgid "This inherits from :class:`discord.Message` with changes to :meth:`edit` and :meth:`delete` to work."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:1
#: ../../../discord/message.py:docstring of discord.message.Message.edit:3
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:3
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:3
msgid "Edits the message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:29
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:32
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:29
#: ../../../discord/message.py:docstring of discord.message.Message.edit:42
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:26
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:16
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:20
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:32
msgid "The updated view to update this message with. If ``None`` is passed then the view is removed."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.edit:41
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:25
#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:35
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:29
msgid "The newly edited message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:3
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:1
#: ../../../discord/message.py:docstring of discord.message.Message.delete:3
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:3
#: ../../../discord/message.py:docstring of discord.message.Message.delete:3
msgid "Deletes the message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:5
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:5
msgid "If provided, the number of seconds to wait before deleting the message. The waiting is done in the background and deletion failures are ignored."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:9
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:7
#: ../../../discord/message.py:docstring of discord.message.Message.delete:16
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:9
#: ../../../discord/message.py:docstring of discord.message.Message.delete:16
msgid "You do not have proper permissions to delete the message."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.WebhookMessage.delete:10
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.delete:10
msgid "The message was deleted already."
msgstr ""

#: ../../api.rst:3389
msgid "SyncWebhook"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:1
msgid "Represents a synchronous Discord webhook."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook:3
msgid "For an asynchronous counterpart, see :class:`Webhook`."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.partial:7
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.from_url:5
msgid "The session to use to send requests with. Note that the library does not manage the session and will not close it. If not given, the ``requests`` auto session creation functions are used instead."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch:20
#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:22
msgid ":class:`SyncWebhook`"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.edit:21
msgid "The newly edited webhook."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:14
msgid "Whether the server should wait before sending a response. This essentially means that the return type of this function changes from ``None`` to a :class:`WebhookMessage` if set to ``True``."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:42
msgid "The thread to send this message to.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:42
msgid "The thread to send this message to."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.send:55
msgid "Optional[:class:`SyncWebhookMessage`]"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:1
msgid "Retrieves a single :class:`~discord.SyncWebhookMessage` owned by this webhook."
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhook.fetch_message:14
msgid ":class:`~discord.SyncWebhookMessage`"
msgstr ""

#: ../../api.rst:3398
msgid "SyncWebhookMessage"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.edit:26
msgid ":class:`SyncWebhookMessage`"
msgstr ""

#: ../../../discord/webhook/sync.py:docstring of discord.webhook.sync.SyncWebhookMessage.delete:3
msgid "If provided, the number of seconds to wait before deleting the message. This blocks the thread."
msgstr ""

#: ../../api.rst:3408
msgid "Abstract Base Classes"
msgstr ""

#: ../../api.rst:3410
msgid "An :term:`abstract base class` (also known as an ``abc``) is a class that models can inherit to get their behaviour. **Abstract base classes should not be instantiated**. They are mainly there for usage with :func:`isinstance` and :func:`issubclass`\\."
msgstr ""

#: ../../api.rst:3414
msgid "This library has a module related to abstract base classes, in which all the ABCs are subclasses of :class:`typing.Protocol`."
msgstr ""

#: ../../api.rst:3418
msgid "Snowflake"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:1
msgid "An ABC that details the common operations on a Discord model."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:3
msgid "Almost all :ref:`Discord models <discord_api_models>` meet this abstract base class."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:6
msgid "If you want to create a snowflake on your own, consider using :class:`.Object`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Snowflake:11
msgid "The model's unique ID."
msgstr ""

#: ../../api.rst:3426
#: ../../api.rst:3508
msgid "User"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:1
msgid "An ABC that details the common operations on a Discord user."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:3
#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:3
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:3
#: ../../../discord/abc.py:docstring of discord.abc.Connectable:4
msgid "The following implement this ABC:"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:6
#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:14
msgid ":class:`~discord.ClientUser`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:9
msgid ":class:`~discord.Member`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:9
#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:8
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:10
msgid "This ABC must also implement :class:`~discord.abc.Snowflake`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:13
#: ../../../discord/user.py:docstring of discord.user.ClientUser:23
#: ../../../discord/user.py:docstring of discord.user.User:23
msgid "The user's username."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:19
msgid "The user's discriminator."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:25
msgid "The avatar asset the user has."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:27
msgid ":class:`~discord.Asset`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User:31
msgid "If the user is a bot account."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User.display_name:1
#: ../../../discord/user.py:docstring of discord.ClientUser.display_name:1
#: ../../../discord/user.py:docstring of discord.User.display_name:1
#: ../../../discord/member.py:docstring of discord.Member.display_name:1
msgid "Returns the user's display name."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.User.mention:1
#: ../../../discord/user.py:docstring of discord.ClientUser.mention:1
#: ../../../discord/user.py:docstring of discord.User.mention:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.mention:1
msgid "Returns a string that allows you to mention the given user."
msgstr ""

#: ../../api.rst:3434
msgid "PrivateChannel"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:1
msgid "An ABC that details the common operations on a private Discord channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:5
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:6
msgid ":class:`~discord.DMChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:6
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:7
msgid ":class:`~discord.GroupChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.PrivateChannel:12
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:31
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:29
msgid "The user presenting yourself."
msgstr ""

#: ../../api.rst:3442
msgid "GuildChannel"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:1
msgid "An ABC that details the common operations on a Discord guild channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:5
#: ../../../discord/abc.py:docstring of discord.abc.Messageable:5
msgid ":class:`~discord.TextChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:6
#: ../../../discord/abc.py:docstring of discord.abc.Connectable:6
msgid ":class:`~discord.VoiceChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:7
msgid ":class:`~discord.CategoryChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:8
#: ../../../discord/abc.py:docstring of discord.abc.Connectable:7
msgid ":class:`~discord.StageChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:14
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:23
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:23
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:23
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:25
msgid "The channel name."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:20
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:29
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:29
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:29
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:31
msgid "The guild the channel belongs to."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:22
msgid ":class:`~discord.Guild`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel:26
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:48
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:15
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:19
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:53
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:47
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:47
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:55
msgid "The position in the channel list. This is a number that starts at 0. e.g. the top channel is position 0."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.changed_roles:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.changed_roles:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.changed_roles:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.changed_roles:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.changed_roles:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.changed_roles:1
msgid "Returns a list of roles that have been overridden from their default values in the :attr:`~discord.Guild.roles` attribute."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.changed_roles:4
#: ../../../discord/channel.py:docstring of discord.TextChannel.changed_roles:4
#: ../../../discord/channel.py:docstring of discord.StoreChannel.changed_roles:4
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.changed_roles:4
#: ../../../discord/channel.py:docstring of discord.StageChannel.changed_roles:4
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.changed_roles:4
msgid "List[:class:`~discord.Role`]"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.mention:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.mention:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.mention:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.mention:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.mention:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.mention:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.mention:1
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.mention:1
msgid "The string that allows you to mention the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.created_at:1
#: ../../../discord/channel.py:docstring of discord.GroupChannel.created_at:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteChannel.created_at:1
#: ../../../discord/widget.py:docstring of discord.WidgetChannel.created_at:1
msgid "Returns the channel's creation time in UTC."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:1
msgid "Returns the channel-specific overwrites for a member or a role."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:3
msgid "The role or user denoting whose overwrite to get."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:7
msgid "The permission overwrites for this object."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.overwrites_for:8
msgid ":class:`~discord.PermissionOverwrite`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:1
msgid "Returns all of the channel's overwrites."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:3
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:3
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:3
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:3
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:3
msgid "This is returned as a dictionary where the key contains the target which can be either a :class:`~discord.Role` or a :class:`~discord.Member` and the value is the overwrite as a :class:`~discord.PermissionOverwrite`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:7
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:7
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:7
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:7
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:7
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:7
msgid "The channel's permission overwrites."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.overwrites:8
#: ../../../discord/channel.py:docstring of discord.TextChannel.overwrites:8
#: ../../../discord/channel.py:docstring of discord.StoreChannel.overwrites:8
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.overwrites:8
#: ../../../discord/channel.py:docstring of discord.StageChannel.overwrites:8
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.overwrites:8
msgid "Dict[Union[:class:`~discord.Role`, :class:`~discord.Member`], :class:`~discord.PermissionOverwrite`]"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.category:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.category:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.category:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.category:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.category:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.category:1
msgid "The category this channel belongs to."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.category:3
#: ../../../discord/channel.py:docstring of discord.TextChannel.category:3
#: ../../../discord/channel.py:docstring of discord.StoreChannel.category:3
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.category:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.category:3
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.category:3
msgid "If there is no category then this is ``None``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.category:5
#: ../../../discord/channel.py:docstring of discord.TextChannel.category:5
#: ../../../discord/channel.py:docstring of discord.StoreChannel.category:5
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.category:5
#: ../../../discord/channel.py:docstring of discord.StageChannel.category:5
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.category:5
msgid "Optional[:class:`~discord.CategoryChannel`]"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_synced:1
#: ../../../discord/channel.py:docstring of discord.TextChannel.permissions_synced:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.permissions_synced:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.permissions_synced:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.permissions_synced:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.permissions_synced:1
msgid "Whether or not the permissions for this channel are synced with the category it belongs to."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_synced:4
#: ../../../discord/channel.py:docstring of discord.TextChannel.permissions_synced:4
#: ../../../discord/channel.py:docstring of discord.StoreChannel.permissions_synced:4
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.permissions_synced:4
#: ../../../discord/channel.py:docstring of discord.StageChannel.permissions_synced:4
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.permissions_synced:4
msgid "If there is no category then this is ``False``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:1
msgid "Handles permission resolution for the :class:`~discord.Member` or :class:`~discord.Role`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:4
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:4
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:4
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:4
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:4
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:4
msgid "This function takes into consideration the following cases:"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:6
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:6
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:6
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:6
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:6
msgid "Guild owner"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:7
msgid "Guild roles"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:8
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:8
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:8
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:8
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:8
msgid "Channel overrides"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:9
msgid "Member overrides"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:11
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:11
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:11
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:11
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:11
msgid "If a :class:`~discord.Role` is passed, then it checks the permissions someone with that role would have, which is essentially:"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:14
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:14
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:14
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:14
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:14
msgid "The default role permissions"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:15
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:15
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:15
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:15
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:15
msgid "The permissions of the role used as a parameter"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:16
msgid "The default role permission overwrites"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:17
msgid "The permission overwrites of the role used as a parameter"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:19
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:19
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:19
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:19
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:19
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:19
msgid "The object passed in can now be a role object."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:22
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:22
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:22
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:22
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:22
msgid "The object to resolve permissions for. This could be either a member or a role. If it's a role then member overwrites are not computed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:27
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:27
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:16
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:27
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:27
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:27
msgid "The resolved permissions for the member or role."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.permissions_for:28
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.permissions_for:28
#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:17
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.permissions_for:28
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:28
#: ../../../discord/channel.py:docstring of discord.channel.VocalGuildChannel.permissions_for:28
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.permissions_for:28
msgid ":class:`~discord.Permissions`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:3
msgid "Deletes the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:5
msgid "You must have :attr:`~discord.Permissions.manage_channels` permission to use this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:7
msgid "The reason for deleting this channel. Shows up on the audit log."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:11
msgid "You do not have proper permissions to delete the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:12
msgid "The channel was not found or was already deleted."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.delete:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:13
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.delete:13
msgid "Deleting the channel failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:3
msgid "Sets the channel specific permission overwrites for a target in the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:6
msgid "The ``target`` parameter should either be a :class:`~discord.Member` or a :class:`~discord.Role` that belongs to guild."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:9
msgid "The ``overwrite`` parameter, if given, must either be ``None`` or :class:`~discord.PermissionOverwrite`. For convenience, you can pass in keyword arguments denoting :class:`~discord.Permissions` attributes. If this is done, then you cannot mix the keyword arguments with the ``overwrite`` parameter."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:15
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:15
msgid "If the ``overwrite`` parameter is ``None``, then the permission overwrites are deleted."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:18
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:18
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:18
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:18
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:18
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:18
msgid "You must have the :attr:`~discord.Permissions.manage_roles` permission to use this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:22
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:22
msgid "This method *replaces* the old overwrites with the ones given."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:26
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:26
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:26
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:26
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:26
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:26
msgid "Setting allow and deny: ::"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:31
msgid "Deleting overwrites ::"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:35
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:35
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:35
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:35
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:35
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:35
msgid "Using :class:`~discord.PermissionOverwrite` ::"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:42
msgid "The member or role to overwrite permissions for."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:44
msgid "The permissions to allow and deny to the target, or ``None`` to delete the overwrite."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:47
msgid "A keyword argument list of permissions to set for ease of use. Cannot be mixed with ``overwrite``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:49
#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:21
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:12
#: ../../../discord/member.py:docstring of discord.member.Member.move_to:16
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:49
msgid "The reason for doing this action. Shows up on the audit log."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:52
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:52
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:52
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:52
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:52
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:52
msgid "You do not have permissions to edit channel specific permissions."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:53
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:53
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:53
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:53
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:53
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:53
msgid "Editing channel specific permissions failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:54
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:54
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:54
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:54
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:54
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:54
msgid "The role or member being edited is not part of the guild."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.set_permissions:55
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:55
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:55
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:55
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:55
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.set_permissions:55
msgid "The overwrite parameter invalid or the target type was not     :class:`~discord.Role` or :class:`~discord.Member`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:3
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:3
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:3
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:3
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:3
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:3
msgid "Clones this channel. This creates a channel with the same properties as this channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:6
#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:7
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:7
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:7
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:7
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:6
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:7
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:6
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:7
msgid "You must have the :attr:`~discord.Permissions.manage_channels` permission to do this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:11
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:11
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:11
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:11
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:11
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:11
msgid "The name of the new channel. If not provided, defaults to this channel name."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:14
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:14
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:14
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:14
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:14
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:14
msgid "The reason for cloning this channel. Shows up on the audit log."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:17
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:61
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:34
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:25
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:10
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:10
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:17
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:17
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:17
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:17
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:17
msgid "You do not have the proper permissions to create this channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:18
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:62
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:35
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:26
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:11
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:11
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:18
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:18
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:18
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:18
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:18
msgid "Creating the channel failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.clone:21
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.clone:21
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.clone:21
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.clone:21
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.clone:21
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.clone:21
msgid ":class:`.abc.GuildChannel`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:3
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:3
msgid "A rich interface to help move a channel relative to other channels."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:5
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:5
msgid "If exact position movement is required, ``edit`` should be used instead."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:12
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:12
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:12
msgid "Voice channels will always be sorted below text channels. This is a Discord limitation."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:17
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:17
msgid "Whether to move the channel to the beginning of the channel list (or category if given). This is mutually exclusive with ``end``, ``before``, and ``after``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:21
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:21
msgid "Whether to move the channel to the end of the channel list (or category if given). This is mutually exclusive with ``beginning``, ``before``, and ``after``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:25
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:25
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:25
msgid "The channel that should be before our current channel. This is mutually exclusive with ``beginning``, ``end``, and ``after``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:28
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:28
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:28
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:28
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:28
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:28
msgid "The channel that should be after our current channel. This is mutually exclusive with ``beginning``, ``end``, and ``before``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:31
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:31
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:31
msgid "The number of channels to offset the move by. For example, an offset of ``2`` with ``beginning=True`` would move it 2 after the beginning. A positive number moves it below while a negative number moves it above. Note that this number is relative and computed after the ``beginning``, ``end``, ``before``, and ``after`` parameters."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:38
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:38
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:38
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:38
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:38
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:38
msgid "The category to move this channel under. If ``None`` is given then it moves it out of the category. This parameter is ignored if moving a category channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:42
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:42
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:42
msgid "Whether to sync the permissions with the category (if given)."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:44
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:44
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:44
msgid "The reason for the move."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:47
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:47
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:47
msgid "An invalid position was given or a bad mix of arguments were passed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:48
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:48
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:48
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:48
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:48
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:48
msgid "You do not have permissions to move the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.move:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:49
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.move:49
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.move:49
msgid "Moving the channel failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:3
msgid "Creates an instant invite from a text or voice channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:5
msgid "You must have the :attr:`~discord.Permissions.create_instant_invite` permission to do this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:8
msgid "How long the invite should last in seconds. If it's 0 then the invite doesn't expire. Defaults to ``0``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:11
msgid "How many uses the invite could be used for. If it's 0 then there are unlimited uses. Defaults to ``0``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:14
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:14
msgid "Denotes that the invite grants temporary membership (i.e. they get kicked after they disconnect). Defaults to ``False``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:17
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:17
msgid "Indicates if a unique invite URL should be created. Defaults to True. If this is set to ``False`` then it will return a previously created invite."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:21
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:21
msgid "The reason for creating this invite. Shows up on the audit log."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
msgid "The type of target for the voice channel invite, if any.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:23
msgid "The type of target for the voice channel invite, if any."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
msgid "The user whose stream to display for this invite, required if `target_type` is `TargetType.stream`. The user must be streaming in the channel.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:27
msgid "The user whose stream to display for this invite, required if `target_type` is `TargetType.stream`. The user must be streaming in the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
msgid "Optional[:class:`int`]: The id of the embedded application for the invite, required if `target_type` is `TargetType.embedded_application`.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:32
msgid "Optional[:class:`int`]: The id of the embedded application for the invite, required if `target_type` is `TargetType.embedded_application`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:36
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:36
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:36
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:36
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:36
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:36
msgid "Invite creation failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:37
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:37
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:37
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:37
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:37
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:37
msgid "The channel that was passed is a category or an invalid channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.create_invite:40
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:40
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:40
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:40
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:40
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.create_invite:40
msgid ":class:`~discord.Invite`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:3
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:3
msgid "Returns a list of all active instant invites from this channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:5
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:5
msgid "You must have :attr:`~discord.Permissions.manage_channels` to get this information."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:11
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:8
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:7
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:7
msgid "You do not have proper permissions to get the information."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:8
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:13
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:9
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:9
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:8
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:8
msgid "An error occurred while fetching the information."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:10
#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:10
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:10
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:10
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:10
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:10
msgid "The list of invites that are currently active."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.GuildChannel.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:11
#: ../../../discord/channel.py:docstring of discord.abc.GuildChannel.invites:11
msgid "List[:class:`~discord.Invite`]"
msgstr ""

#: ../../api.rst:3450
msgid "Messageable"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable:1
msgid "An ABC that details the common operations on a model that can send messages."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable:10
msgid ":class:`~discord.ext.commands.Context`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable:11
msgid ":class:`~discord.Thread`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:1
msgid "Returns an :class:`~discord.AsyncIterator` that enables receiving the destination's message history."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:3
msgid "You must have :attr:`~discord.Permissions.read_message_history` permissions to use this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:14
msgid "Flattening into a list: ::"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:21
msgid "The number of messages to retrieve. If ``None``, retrieves every message in the channel. Note, however, that this would make it a slow operation."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:25
msgid "Retrieve messages before this date or message. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:29
msgid "Retrieve messages after this date or message. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:33
msgid "Retrieve messages around this date or message. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time. When using this argument, the maximum limit is 101. Note that if the limit is an even number then this will return at most limit + 1 messages."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:39
msgid "If set to ``True``, return messages in oldest->newest order. Defaults to ``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:43
msgid "You do not have permissions to get channel message history."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:44
msgid "The request to get message history failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.history:46
msgid ":class:`~discord.Message` -- The message with the message data parsed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:1
msgid "Returns a context manager that allows you to type for an indefinite period of time."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:3
msgid "This is useful for denoting long computations in your bot."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:7
msgid "This is both a regular context manager and an async context manager. This means that both ``with`` and ``async with`` work with this."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.typing:10
msgid "Example Usage: ::"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:3
msgid "Sends a message to the destination with the content given."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:5
msgid "The content must be a type that can convert to a string through ``str(content)``. If the content is set to ``None`` (the default), then the ``embed`` parameter must be provided."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:9
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:9
msgid "To upload a single file, the ``file`` parameter should be used with a single :class:`~discord.File` object. To upload multiple files, the ``files`` parameter should be used with a :class:`list` of :class:`~discord.File` objects. **Specifying both parameters will lead to an exception**."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:14
msgid "To upload a single embed, the ``embed`` parameter should be used with a single :class:`~discord.Embed` object. To upload multiple embeds, the ``embeds`` parameter should be used with a :class:`list` of :class:`~discord.Embed` objects. **Specifying both parameters will lead to an exception**."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:23
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:23
msgid "The rich embed for the content."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:25
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:25
msgid "The file to upload."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:27
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:27
msgid "A list of files to upload. Must be a maximum of 10."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:29
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:29
msgid "The nonce to use for sending this message. If the message was successfully sent, then the message will have a nonce with this value."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:32
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:32
msgid "If provided, the number of seconds to wait in the background before deleting the message we just sent. If the deletion fails, then it is silently ignored."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/message.py:docstring of discord.message.Message.edit:33
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
msgid "Controls the mentions being processed in this message. If this is passed, then the object is merged with :attr:`~discord.Client.allowed_mentions`. The merging behaviour only overrides attributes that have been explicitly passed to the object, otherwise it uses the attributes set in :attr:`~discord.Client.allowed_mentions`. If no object is passed at all then the defaults given by :attr:`~discord.Client.allowed_mentions` are used instead.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/message.py:docstring of discord.message.Message.edit:33
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:36
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:25
msgid "Controls the mentions being processed in this message. If this is passed, then the object is merged with :attr:`~discord.Client.allowed_mentions`. The merging behaviour only overrides attributes that have been explicitly passed to the object, otherwise it uses the attributes set in :attr:`~discord.Client.allowed_mentions`. If no object is passed at all then the defaults given by :attr:`~discord.Client.allowed_mentions` are used instead."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
msgid "A reference to the :class:`~discord.Message` to which you are replying, this can be created using :meth:`~discord.Message.to_reference` or passed directly as a :class:`~discord.Message`. You can control whether this mentions the author of the referenced message using the :attr:`~discord.AllowedMentions.replied_user` attribute of ``allowed_mentions`` or by setting ``mention_author``.  .. versionadded:: 1.6"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:45
msgid "A reference to the :class:`~discord.Message` to which you are replying, this can be created using :meth:`~discord.Message.to_reference` or passed directly as a :class:`~discord.Message`. You can control whether this mentions the author of the referenced message using the :attr:`~discord.AllowedMentions.replied_user` attribute of ``allowed_mentions`` or by setting ``mention_author``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
msgid "If set, overrides the :attr:`~discord.AllowedMentions.replied_user` attribute of ``allowed_mentions``.  .. versionadded:: 1.6"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:52
msgid "If set, overrides the :attr:`~discord.AllowedMentions.replied_user` attribute of ``allowed_mentions``."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:56
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:56
msgid "A Discord UI View to add to the message."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
msgid "A list of embeds to upload. Must be a maximum of 10.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:58
msgid "A list of embeds to upload. Must be a maximum of 10."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
msgid "A list of stickers to upload. Must be a maximum of 3.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:62
msgid "A list of stickers to upload. Must be a maximum of 3."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/message.py:docstring of discord.message.Message.reply:9
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:68
#: ../../../discord/message.py:docstring of discord.message.Message.reply:9
msgid "You do not have the proper permissions to send the message."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:69
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:69
msgid "The ``files`` list is not of the appropriate size,     you specified both ``file`` and ``files``,     or you specified both ``embed`` and ``embeds``,     or the ``reference`` object is not a :class:`~discord.Message`,     :class:`~discord.MessageReference` or :class:`~discord.PartialMessage`."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/message.py:docstring of discord.message.Message.reply:12
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:71
#: ../../../discord/message.py:docstring of discord.message.Message.reply:12
msgid "The message that was sent."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/user.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/member.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:72
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.send:72
msgid ":class:`~discord.Message`"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/user.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/member.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:3
msgid "Triggers a *typing* indicator to the destination."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/user.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/member.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:5
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.trigger_typing:5
msgid "*Typing* indicator will go away after 10 seconds, or after a message is sent."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/user.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/member.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.fetch_message:3
msgid "Retrieves a single :class:`~discord.Message` from the destination."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:3
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:3
msgid "Retrieves all messages that are currently pinned in the channel."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:7
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:7
msgid "Due to a limitation with the Discord API, the :class:`.Message` objects returned by this method do not contain complete :attr:`.Message.reactions` data."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:11
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:11
msgid "Retrieving the pinned messages failed."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:13
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:13
msgid "The messages that are currently pinned."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/user.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/member.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/threads.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:14
#: ../../../discord/channel.py:docstring of discord.abc.Messageable.pins:14
msgid "List[:class:`~discord.Message`]"
msgstr ""

#: ../../api.rst:3465
msgid "Connectable"
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Connectable:1
msgid "An ABC that details the common operations on a channel that can connect to a voice server."
msgstr ""

#: ../../../discord/abc.py:docstring of discord.abc.Connectable:11
msgid "This ABC is not decorated with :func:`typing.runtime_checkable`, so will fail :func:`isinstance`/:func:`issubclass` checks."
msgstr ""

#: ../../api.rst:3474
msgid "Discord Models"
msgstr ""

#: ../../api.rst:3476
msgid "Models are classes that are received from Discord and are not meant to be created by the user of the library."
msgstr ""

#: ../../api.rst:3481
msgid "The classes listed below are **not intended to be created by users** and are also **read-only**."
msgstr ""

#: ../../api.rst:3484
msgid "For example, this means that you should not make your own :class:`User` instances nor should you modify the :class:`User` instance yourself."
msgstr ""

#: ../../api.rst:3487
msgid "If you want to get one of these model classes instances they'd have to be through the cache, and a common way of doing so is through the :func:`utils.find` function or attributes of model classes that you receive from the events specified in the :ref:`discord-api-events`."
msgstr ""

#: ../../api.rst:3494
#: ../../api.rst:4056
msgid "Nearly all classes here have :ref:`py:slots` defined which means that it is impossible to have dynamic attributes to the data classes."
msgstr ""

#: ../../api.rst:3499
msgid "ClientUser"
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:1
msgid "Represents your Discord user."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:7
#: ../../../discord/user.py:docstring of discord.user.User:7
msgid "Checks if two users are equal."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:11
#: ../../../discord/user.py:docstring of discord.user.User:11
msgid "Checks if two users are not equal."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:15
#: ../../../discord/user.py:docstring of discord.user.User:15
msgid "Return the user's hash."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:19
#: ../../../discord/user.py:docstring of discord.user.User:19
msgid "Returns the user's name with discriminator."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:29
#: ../../../discord/user.py:docstring of discord.user.User:29
msgid "The user's unique ID."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:35
#: ../../../discord/user.py:docstring of discord.user.User:35
msgid "The user's discriminator. This is given when the username has conflicts."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:47
#: ../../../discord/user.py:docstring of discord.user.User:47
msgid "Specifies if the user is a system user (i.e. represents Discord officially)."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:55
msgid "Specifies if the user's email is verified."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:61
msgid "The IETF language tag used to identify the language the user is using."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser:67
msgid "Specifies if the user has MFA turned on and working."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:3
msgid "Edits the current profile of the client."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:7
msgid "To upload an avatar, a :term:`py:bytes-like object` must be passed in that represents the image being uploaded. If this is done through a file then the file must be opened via ``open('some_filename', 'rb')`` and the :term:`py:bytes-like object` is given through the use of ``fp.read()``."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:12
msgid "The only image formats supported for uploading is JPEG and PNG."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:14
msgid "The edit is no longer in-place, instead the newly edited client user is returned."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:17
msgid "The new username you wish to change to."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:19
msgid "A :term:`py:bytes-like object` representing the image to upload. Could be ``None`` to denote no avatar."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:23
msgid "Editing your profile failed."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:24
msgid "Wrong image format passed for ``avatar``."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.ClientUser.edit:26
msgid "The newly edited client user."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_color:1
#: ../../../discord/user.py:docstring of discord.User.accent_color:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_color:1
msgid "Returns the user's accent color, if applicable."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_color:3
#: ../../../discord/user.py:docstring of discord.User.accent_color:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_color:3
msgid "There is an alias for this named :attr:`accent_colour`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_color:9
#: ../../../discord/user.py:docstring of discord.ClientUser.accent_colour:9
#: ../../../discord/user.py:docstring of discord.ClientUser.banner:7
#: ../../../discord/user.py:docstring of discord.User.accent_color:9
#: ../../../discord/user.py:docstring of discord.User.accent_colour:9
#: ../../../discord/user.py:docstring of discord.User.banner:7
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_color:9
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_colour:9
#: ../../../discord/widget.py:docstring of discord.WidgetMember.banner:7
msgid "This information is only available via :meth:`Client.fetch_user`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_color:11
#: ../../../discord/user.py:docstring of discord.ClientUser.accent_colour:11
#: ../../../discord/user.py:docstring of discord.User.accent_color:11
#: ../../../discord/user.py:docstring of discord.User.accent_colour:11
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_color:11
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_colour:11
msgid "Optional[:class:`Colour`]"
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_colour:1
#: ../../../discord/user.py:docstring of discord.User.accent_colour:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_colour:1
msgid "Returns the user's accent colour, if applicable."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.accent_colour:3
#: ../../../discord/user.py:docstring of discord.User.accent_colour:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.accent_colour:3
msgid "There is an alias for this named :attr:`accent_color`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.avatar:1
#: ../../../discord/user.py:docstring of discord.User.avatar:1
msgid "Returns an :class:`Asset` for the avatar the user has."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.avatar:3
#: ../../../discord/user.py:docstring of discord.User.avatar:3
msgid "If the user does not have a traditional avatar, ``None`` is returned. If you want the avatar that a user has displayed, consider :attr:`display_avatar`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.avatar:6
#: ../../../discord/user.py:docstring of discord.ClientUser.banner:9
#: ../../../discord/user.py:docstring of discord.User.avatar:6
#: ../../../discord/user.py:docstring of discord.User.banner:9
#: ../../../discord/guild.py:docstring of discord.Guild.icon:3
#: ../../../discord/guild.py:docstring of discord.Guild.banner:3
#: ../../../discord/guild.py:docstring of discord.Guild.splash:3
#: ../../../discord/guild.py:docstring of discord.Guild.discovery_splash:3
#: ../../../discord/member.py:docstring of discord.Member.guild_avatar:6
#: ../../../discord/role.py:docstring of discord.Role.icon:9
#: ../../../discord/channel.py:docstring of discord.GroupChannel.icon:3
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.icon:3
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.banner:3
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.splash:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.banner:9
#: ../../../discord/webhook/async_.py:docstring of discord.PartialWebhookGuild.icon:3
msgid "Optional[:class:`Asset`]"
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.banner:1
#: ../../../discord/user.py:docstring of discord.User.banner:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.banner:1
msgid "Returns the user's banner asset, if available."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.color:1
#: ../../../discord/user.py:docstring of discord.User.color:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.color:1
msgid "A property that returns a color denoting the rendered color for the user. This always returns :meth:`Colour.default`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.color:4
#: ../../../discord/user.py:docstring of discord.User.color:4
#: ../../../discord/member.py:docstring of discord.Member.color:5
#: ../../../discord/widget.py:docstring of discord.WidgetMember.color:4
msgid "There is an alias for this named :attr:`colour`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.colour:1
#: ../../../discord/user.py:docstring of discord.User.colour:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.colour:1
msgid "A property that returns a colour denoting the rendered colour for the user. This always returns :meth:`Colour.default`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.colour:4
#: ../../../discord/user.py:docstring of discord.User.colour:4
#: ../../../discord/member.py:docstring of discord.Member.colour:5
#: ../../../discord/widget.py:docstring of discord.WidgetMember.colour:4
msgid "There is an alias for this named :attr:`color`."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.created_at:1
#: ../../../discord/user.py:docstring of discord.User.created_at:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.created_at:1
msgid "Returns the user's creation time in UTC."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.created_at:3
#: ../../../discord/user.py:docstring of discord.User.created_at:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.created_at:3
msgid "This is when the user's Discord account was created."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.default_avatar:1
#: ../../../discord/user.py:docstring of discord.User.default_avatar:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.default_avatar:1
msgid "Returns the default avatar for a given user. This is calculated by the user's discriminator."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.display_avatar:1
#: ../../../discord/user.py:docstring of discord.User.display_avatar:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_avatar:1
msgid "Returns the user's display avatar."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.display_avatar:3
#: ../../../discord/user.py:docstring of discord.User.display_avatar:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_avatar:3
msgid "For regular users this is just their default avatar or uploaded avatar."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.display_name:3
#: ../../../discord/user.py:docstring of discord.User.display_name:3
#: ../../../discord/member.py:docstring of discord.Member.display_name:3
msgid "For regular users this is just their username, but if they have a guild specific nickname then that is returned instead."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:1
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:1
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:1
msgid "Checks if the user is mentioned in the specified message."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:3
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:3
#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:3
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:3
msgid "The message to check if you're mentioned in."
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:6
#: ../../../discord/user.py:docstring of discord.user.BaseUser.mentioned_in:6
#: ../../../discord/widget.py:docstring of discord.user.BaseUser.mentioned_in:6
msgid "Indicates if the user is mentioned in the message."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.public_flags:1
#: ../../../discord/user.py:docstring of discord.User.public_flags:1
#: ../../../discord/widget.py:docstring of discord.WidgetMember.public_flags:1
msgid "The publicly available flags the user has."
msgstr ""

#: ../../../discord/user.py:docstring of discord.ClientUser.public_flags:3
#: ../../../discord/user.py:docstring of discord.User.public_flags:3
#: ../../../discord/widget.py:docstring of discord.WidgetMember.public_flags:3
msgid ":class:`PublicUserFlags`"
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.User:1
msgid "Represents a Discord user."
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.dm_channel:1
msgid "Returns the channel associated with this user if it exists."
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.dm_channel:3
msgid "If this returns ``None``, you can create a DM channel by calling the :meth:`create_dm` coroutine function."
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.dm_channel:6
msgid "Optional[:class:`DMChannel`]"
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.mutual_guilds:1
msgid "The guilds that the user shares with the client."
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.mutual_guilds:5
msgid "This will only return mutual guilds within the client's internal cache."
msgstr ""

#: ../../../discord/user.py:docstring of discord.User.mutual_guilds:9
msgid "List[:class:`Guild`]"
msgstr ""

#: ../../../discord/user.py:docstring of discord.user.User.create_dm:3
#: ../../../discord/member.py:docstring of discord.member.flatten_user.<locals>.generate_function.<locals>.general:3
msgid "Creates a :class:`DMChannel` with this user."
msgstr ""

#: ../../api.rst:3524
msgid "Attachment"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:1
msgid "Represents an attachment from Discord."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:7
msgid "Returns the URL of the attachment."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:11
msgid "Checks if the attachment is equal to another attachment."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:15
msgid "Checks if the attachment is not equal to another attachment."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:19
msgid "Returns the hash of the attachment."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:21
msgid "Attachment can now be casted to :class:`str` and is hashable."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:26
msgid "The attachment ID."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:32
msgid "The attachment size in bytes."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:38
msgid "The attachment's height, in pixels. Only applicable to images and videos."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:44
msgid "The attachment's width, in pixels. Only applicable to images and videos."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:50
msgid "The attachment's filename."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:56
msgid "The attachment URL. If the message this attachment was attached to is deleted, then this will 404."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:63
msgid "The proxy URL. This is a cached version of the :attr:`~Attachment.url` in the case of images. When the message is deleted, this URL might be valid for a few minutes or not valid at all."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:71
msgid "The attachment's `media type <https://en.wikipedia.org/wiki/Media_type>`_"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment:79
msgid "Whether this attachment is ephermal. Ephemeral attachments will automatically be removed after a set period of time. Ephemeral attachments on messages are guaranteed to be available as long as the message itself exists."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.is_spoiler:1
msgid ":class:`bool`: Whether this attachment contains a spoiler."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:3
msgid "Saves this attachment into a file-like object."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:5
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:5
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:5
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:5
msgid "The file-like object to save this attachment to or the filename to use. If a filename is passed then a file is created with that filename and used instead."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:9
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:9
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:9
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:9
msgid "Whether to seek to the beginning of the file after saving is successfully done."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:12
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:7
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:8
msgid "Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading the attachment. This will allow attachments to be saved after deletion more often, compared to the regular URL which is generally deleted right after the message is deleted. Note that this can still fail to download deleted attachments if too much time has passed and it does not work on some types of attachments."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:20
msgid "Saving the attachment failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:21
#: ../../../discord/message.py:docstring of discord.message.Attachment.read:17
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:24
msgid "The attachment was deleted."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.save:23
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:17
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:17
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:17
msgid "The number of bytes written."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.read:3
msgid "Retrieves the content of this attachment as a :class:`bytes` object."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.read:15
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:22
msgid "Downloading the attachment failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.read:16
#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:23
msgid "You do not have permissions to access this attachment"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.read:19
msgid "The contents of the attachment."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:3
msgid "Converts the attachment into a :class:`File` suitable for sending via :meth:`abc.Messageable.send`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:8
msgid "Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading the attachment. This will allow attachments to be saved after deletion more often, compared to the regular URL which is generally deleted right after the message is deleted. Note that this can still fail to download deleted attachments if too much time has passed and it does not work on some types of attachments.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:17
msgid "Whether the file is a spoiler.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:17
msgid "Whether the file is a spoiler."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:26
msgid "The attachment as a file suitable for sending."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Attachment.to_file:27
msgid ":class:`File`"
msgstr ""

#: ../../api.rst:3532
msgid "Asset"
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:1
msgid "Represents a CDN asset on Discord."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:7
msgid "Returns the URL of the CDN asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:11
msgid "Returns the length of the CDN asset's URL."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:15
msgid "Checks if the asset is equal to another asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:19
msgid "Checks if the asset is not equal to another asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset:23
msgid "Returns the hash of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.Asset.url:1
msgid "Returns the underlying URL of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.Asset.key:1
msgid "Returns the identifying key of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.is_animated:1
msgid ":class:`bool`: Returns whether the asset is animated."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:1
msgid "Returns a new asset with the passed components replaced."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:3
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:3
msgid "The new size of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:5
msgid "The new format to change it to. Must be either 'webp', 'jpeg', 'jpg', 'png', or 'gif' if it's animated."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:8
msgid "The new format to change it to if the asset isn't animated. Must be either 'webp', 'jpeg', 'jpg', or 'png'."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:12
msgid "An invalid size or format was passed."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.replace:14
msgid "The newly updated asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:1
msgid "Returns a new asset with the specified size."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:6
msgid "The asset had an invalid size."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_size:8
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:8
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:11
msgid "The new updated asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:1
msgid "Returns a new asset with the specified format."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:3
msgid "The new format of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_format:6
#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:9
msgid "The asset had an invalid format."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:1
msgid "Returns a new asset with the specified static format."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:3
msgid "This only changes the format if the underlying asset is not animated. Otherwise, the asset is not changed."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.Asset.with_static_format:6
msgid "The new static format of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:3
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:3
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:3
msgid "Retrieves the content of this asset as a :class:`bytes` object."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:5
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:13
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:5
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:13
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:5
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:13
msgid "There was no internal connection state."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:6
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:14
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:6
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:14
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:6
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:14
msgid "Downloading the asset failed."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:7
#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:15
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:7
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:15
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:7
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:15
msgid "The asset was deleted."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.read:9
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.read:9
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.read:9
msgid "The content of the asset."
msgstr ""

#: ../../../discord/asset.py:docstring of discord.asset.AssetMixin.save:3
#: ../../../discord/emoji.py:docstring of discord.asset.AssetMixin.save:3
#: ../../../discord/partial_emoji.py:docstring of discord.asset.AssetMixin.save:3
msgid "Saves this asset into a file-like object."
msgstr ""

#: ../../api.rst:3541
msgid "Message"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:1
msgid "Represents a message from Discord."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:15
msgid "Returns the message's hash."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:19
msgid "Specifies if the message was done with text-to-speech. This can only be accurately received in :func:`on_message` due to a discord limitation."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:27
msgid "The type of message. In most cases this should not be checked, but it is helpful in cases where it might be a system message for :attr:`system_content`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:30
msgid ":class:`MessageType`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:34
msgid "A :class:`Member` that sent the message. If :attr:`channel` is a private channel or the user has the left the guild, then it is a :class:`User` instead."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:37
msgid "Union[:class:`Member`, :class:`abc.User`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:41
msgid "The actual contents of the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:47
msgid "The value used by the discord guild and the client to verify that the message is successfully sent. This is not stored long term within Discord's servers and is only used ephemerally."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:50
msgid "Optional[Union[:class:`str`, :class:`int`]]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:54
msgid "A list of embeds the message has."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:56
msgid "List[:class:`Embed`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:60
msgid "The :class:`TextChannel` or :class:`Thread` that the message was sent from. Could be a :class:`DMChannel` or :class:`GroupChannel` if it's a private message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:63
msgid "Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`, :class:`GroupChannel`, :class:`PartialMessageable`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:67
msgid "The message that this message references. This is only applicable to messages of type :attr:`MessageType.pins_add`, crossposted messages created by a followed channel integration, or message replies."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:73
msgid "Optional[:class:`~discord.MessageReference`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:77
msgid "Specifies if the message mentions everyone."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:81
msgid "This does not check if the ``@everyone`` or the ``@here`` text is in the message itself. Rather this boolean indicates if either the ``@everyone`` or the ``@here`` text is in the message **and** it did end up mentioning."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:89
msgid "A list of :class:`Member` that were mentioned. If the message is in a private message then the list will be of :class:`User` instead. For messages that are not of type :attr:`MessageType.default`\\, this array can be used to aid in system messages. For more information, see :attr:`system_content`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:96
msgid "The order of the mentions list is not in any particular order so you should not rely on it. This is a Discord limitation, not one with the library."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:99
msgid "List[:class:`abc.User`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:103
msgid "A list of :class:`abc.GuildChannel` that were mentioned. If the message is in a private message then the list is always empty."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:106
#: ../../../discord/guild.py:docstring of discord.Guild.channels:3
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.channels:5
msgid "List[:class:`abc.GuildChannel`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:110
msgid "A list of :class:`Role` that were mentioned. If the message is in a private message then the list is always empty."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:113
#: ../../../discord/guild.py:docstring of discord.Guild.roles:6
#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:14
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:32
#: ../../../discord/member.py:docstring of discord.Member.roles:7
#: ../../../discord/emoji.py:docstring of discord.Emoji.roles:5
msgid "List[:class:`Role`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:117
#: ../../../discord/message.py:docstring of discord.message.PartialMessage:37
msgid "The message ID."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:123
msgid "If this message was sent by a webhook, then this is the webhook ID's that sent this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:130
msgid "A list of attachments given to a message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:132
msgid "List[:class:`Attachment`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:136
msgid "Specifies if the message is currently pinned."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:142
msgid "Extra features of the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:146
msgid ":class:`MessageFlags`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:150
msgid "Reactions to a message. Reactions can be either custom emoji or standard unicode emoji."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:152
msgid "List[:class:`Reaction`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:156
msgid "The activity associated with this message. Sent with Rich-Presence related messages that for example, request joining, spectating, or listening to or with another member."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:159
msgid "It is a dictionary with the following optional keys:"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:161
msgid "``type``: An integer denoting the type of message activity being requested."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:162
msgid "``party_id``: The party ID associated with the party."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:164
#: ../../../discord/message.py:docstring of discord.message.Message:178
msgid "Optional[:class:`dict`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:168
msgid "The rich presence enabled application associated with this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:170
msgid "It is a dictionary with the following keys:"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:172
msgid "``id``: A string representing the application's ID."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:173
msgid "``name``: A string representing the application's name."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:174
msgid "``description``: A string representing the application's description."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:175
msgid "``icon``: A string representing the icon ID of the application."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:176
msgid "``cover_image``: A string representing the embed's image asset ID."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:182
msgid "A list of sticker items given to the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:186
msgid "List[:class:`StickerItem`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:190
msgid "A list of components in the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:194
#: ../../../discord/components.py:docstring of discord.components.ActionRow:19
msgid "List[:class:`Component`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message:198
msgid "The guild that the message belongs to, if applicable."
msgstr ""

#: ../../docstring of discord.Message.raw_mentions:1
msgid "A property that returns an array of user IDs matched with the syntax of ``<@user_id>`` in the message content."
msgstr ""

#: ../../docstring of discord.Message.raw_mentions:4
msgid "This allows you to receive the user IDs of mentioned users even in a private message context."
msgstr ""

#: ../../docstring of discord.Message.raw_mentions:7
#: ../../docstring of discord.Message.raw_channel_mentions:4
#: ../../docstring of discord.Message.raw_role_mentions:4
msgid "List[:class:`int`]"
msgstr ""

#: ../../docstring of discord.Message.raw_channel_mentions:1
msgid "A property that returns an array of channel IDs matched with the syntax of ``<#channel_id>`` in the message content."
msgstr ""

#: ../../docstring of discord.Message.raw_role_mentions:1
msgid "A property that returns an array of role IDs matched with the syntax of ``<@&role_id>`` in the message content."
msgstr ""

#: ../../docstring of discord.Message.clean_content:1
msgid "A property that returns the content in a \"cleaned up\" manner. This basically means that mentions are transformed into the way the client shows it. e.g. ``<#id>`` will transform into ``#name``."
msgstr ""

#: ../../docstring of discord.Message.clean_content:6
msgid "This will also transform @everyone and @here mentions into non-mentions."
msgstr ""

#: ../../docstring of discord.Message.clean_content:11
msgid "This *does not* affect markdown. If you want to escape or remove markdown then use :func:`utils.escape_markdown` or :func:`utils.remove_markdown` respectively, along with this function."
msgstr ""

#: ../../../discord/message.py:docstring of discord.Message.created_at:1
msgid "The message's creation time in UTC."
msgstr ""

#: ../../../discord/message.py:docstring of discord.Message.edited_at:1
msgid "An aware UTC datetime object containing the edited time of the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.Message.edited_at:4
#: ../../../discord/member.py:docstring of discord.member.Member:30
#: ../../../discord/member.py:docstring of discord.member.Member:69
#: ../../../discord/activity.py:docstring of discord.Spotify.created_at:5
#: ../../../discord/member.py:docstring of discord.member.VoiceState:61
#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.created_at:5
#: ../../../discord/invite.py:docstring of discord.invite.Invite:125
#: ../../../discord/activity.py:docstring of discord.BaseActivity.created_at:5
#: ../../../discord/activity.py:docstring of discord.Activity.start:3
#: ../../../discord/activity.py:docstring of discord.Activity.end:3
#: ../../../discord/activity.py:docstring of discord.Game.start:3
#: ../../../discord/activity.py:docstring of discord.Game.end:3
msgid "Optional[:class:`datetime.datetime`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.Message.jump_url:1
#: ../../../discord/message.py:docstring of discord.PartialMessage.jump_url:1
msgid "Returns a URL that allows the client to jump to this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.is_system:1
msgid ":class:`bool`: Whether the message is a system message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.is_system:3
msgid "A system message is a message that is constructed entirely by the Discord API in response to something."
msgstr ""

#: ../../docstring of discord.Message.system_content:1
msgid "A property that returns the content that is rendered regardless of the :attr:`Message.type`."
msgstr ""

#: ../../docstring of discord.Message.system_content:4
msgid "In the case of :attr:`MessageType.default` and :attr:`MessageType.reply`\\, this just returns the regular :attr:`Message.content`. Otherwise this returns an English message denoting the contents of the system message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.delete:5
#: ../../../discord/message.py:docstring of discord.message.Message.delete:5
msgid "Your own messages could be deleted without any proper permissions. However to delete other people's messages, you need the :attr:`~Permissions.manage_messages` permission."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.delete:9
#: ../../../discord/message.py:docstring of discord.message.Message.delete:9
msgid "Added the new ``delay`` keyword-only parameter."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.delete:12
#: ../../../discord/message.py:docstring of discord.message.Message.delete:12
msgid "If provided, the number of seconds to wait in the background before deleting the message. If the deletion fails then it is silently ignored."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.delete:17
#: ../../../discord/message.py:docstring of discord.message.Message.delete:17
msgid "The message was deleted already"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:5
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:5
msgid "The content must be able to be transformed into a string via ``str(content)``."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:7
msgid "The ``suppress`` keyword-only parameter was added."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:10
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:10
msgid "The new content to replace the message with. Could be ``None`` to remove the content."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:13
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:13
msgid "The new embed to replace the original with. Could be ``None`` to remove the embed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:16
msgid "The new embeds to replace the original with. Must be a maximum of 10. To remove all embeds ``[]`` should be passed.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:16
msgid "The new embeds to replace the original with. Must be a maximum of 10. To remove all embeds ``[]`` should be passed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:21
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:13
msgid "A list of attachments to keep in the message. If ``[]`` is passed then all attachments are removed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:24
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:16
msgid "Whether to suppress embeds for the message. This removes all the embeds if set to ``True``. If set to ``False`` this brings the embeds back if they were suppressed. Using this parameter requires :attr:`~.Permissions.manage_messages`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:29
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:21
msgid "If provided, the number of seconds to wait in the background before deleting the message we just edited. If the deletion fails, then it is silently ignored."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:47
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:40
msgid "Tried to suppress a message without permissions or     edited a message's content or embed that isn't yours."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.edit:48
msgid "You specified both ``embed`` and ``embeds``"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.publish:3
#: ../../../discord/message.py:docstring of discord.message.Message.publish:3
msgid "Publishes this message to your announcement channel."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.publish:5
#: ../../../discord/message.py:docstring of discord.message.Message.publish:5
msgid "You must have the :attr:`~Permissions.send_messages` permission to do this."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.publish:7
#: ../../../discord/message.py:docstring of discord.message.Message.publish:7
msgid "If the message is not your own then the :attr:`~Permissions.manage_messages` permission is also needed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.publish:10
#: ../../../discord/message.py:docstring of discord.message.Message.publish:10
msgid "You do not have the proper permissions to publish this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.publish:11
#: ../../../discord/message.py:docstring of discord.message.Message.publish:11
msgid "Publishing the message failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:3
#: ../../../discord/message.py:docstring of discord.message.Message.pin:3
msgid "Pins the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:5
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:5
#: ../../../discord/message.py:docstring of discord.message.Message.pin:5
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:5
msgid "You must have the :attr:`~Permissions.manage_messages` permission to do this in a non-private channel context."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:8
#: ../../../discord/message.py:docstring of discord.message.Message.pin:8
msgid "The reason for pinning the message. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:8
#: ../../../discord/message.py:docstring of discord.message.Message.pin:8
msgid "The reason for pinning the message. Shows up on the audit log."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:13
#: ../../../discord/message.py:docstring of discord.message.Message.pin:13
msgid "You do not have permissions to pin the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:14
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:14
#: ../../../discord/message.py:docstring of discord.message.Message.pin:14
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:14
msgid "The message or channel was not found or deleted."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.pin:15
#: ../../../discord/message.py:docstring of discord.message.Message.pin:15
msgid "Pinning the message failed, probably due to the channel     having more than 50 pinned messages."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.unpin:3
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:3
msgid "Unpins the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.unpin:8
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:8
msgid "The reason for unpinning the message. Shows up on the audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.unpin:8
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:8
msgid "The reason for unpinning the message. Shows up on the audit log."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.unpin:13
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:13
msgid "You do not have permissions to unpin the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.unpin:15
#: ../../../discord/message.py:docstring of discord.message.Message.unpin:15
msgid "Unpinning the message failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:3
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:3
msgid "Add a reaction to the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:5
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:5
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:5
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:5
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:5
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:5
msgid "The emoji may be a unicode emoji or a custom guild :class:`Emoji`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:7
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:7
msgid "You must have the :attr:`~Permissions.read_message_history` permission to use this. If nobody else has reacted to the message using this emoji, the :attr:`~Permissions.add_reactions` permission is required."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:11
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:11
msgid "The emoji to react with."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:14
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:14
msgid "Adding the reaction failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:15
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:15
msgid "You do not have the proper permissions to react to the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:16
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:16
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:11
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:16
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:16
msgid "The emoji you specified was not found."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:17
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:21
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:17
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:12
#: ../../../discord/message.py:docstring of discord.message.Message.add_reaction:17
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:21
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:17
msgid "The emoji parameter is invalid."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:3
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:3
msgid "Remove a reaction by the member from the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:7
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:7
msgid "If the reaction is not your own (i.e. ``member`` parameter is not you) then the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:10
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:10
msgid "The ``member`` parameter must represent a member and meet the :class:`abc.Snowflake` abc."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:13
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:13
msgid "The emoji to remove."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:15
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:15
msgid "The member for which to remove the reaction."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:18
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:14
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:18
msgid "Removing the reaction failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:19
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:15
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:19
msgid "You do not have the proper permissions to remove the reaction."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:20
#: ../../../discord/message.py:docstring of discord.message.Message.remove_reaction:20
msgid "The member or emoji you specified was not found."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:3
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:3
msgid "Clears a specific reaction from the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:7
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:5
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:5
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:7
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:5
msgid "You need the :attr:`~Permissions.manage_messages` permission to use this."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:11
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:11
msgid "The emoji to clear."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:14
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:9
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:14
msgid "Clearing the reaction failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:15
#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:10
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reaction:15
msgid "You do not have the proper permissions to clear the reaction."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:3
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:3
msgid "Removes all the reactions from the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:7
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:7
msgid "Removing the reactions failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:8
#: ../../../discord/message.py:docstring of discord.message.Message.clear_reactions:8
msgid "You do not have the proper permissions to remove all the reactions."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:3
msgid "Creates a public thread from this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:5
msgid "You must have :attr:`~discord.Permissions.create_public_threads` in order to create a public thread from a message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:8
msgid "The channel this message belongs in must be a :class:`TextChannel`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:12
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:10
msgid "The name of the thread."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:14
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:16
msgid "The duration in minutes before a thread is automatically archived for inactivity. If not provided, the channel's default auto archive duration is used."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:18
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:26
msgid "You do not have permissions to create a thread."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:19
msgid "Creating the thread failed."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:20
msgid "This message does not have guild info attached."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:22
msgid "The created thread."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.create_thread:23
msgid ":class:`.Thread`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.reply:3
#: ../../../discord/message.py:docstring of discord.message.Message.reply:3
msgid "A shortcut method to :meth:`.abc.Messageable.send` to reply to the :class:`.Message`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.reply:10
#: ../../../discord/message.py:docstring of discord.message.Message.reply:10
msgid "The ``files`` list is not of the appropriate size or     you specified both ``file`` and ``files``."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.reply:13
#: ../../../discord/message.py:docstring of discord.message.Message.reply:13
msgid ":class:`.Message`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:1
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:1
msgid "Creates a :class:`~discord.MessageReference` from the current message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:5
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:5
msgid "Whether replying using the message reference should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:5
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:5
msgid "Whether replying using the message reference should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:11
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:11
msgid "The reference to this message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:12
#: ../../../discord/message.py:docstring of discord.message.Message.to_reference:12
msgid ":class:`~discord.MessageReference`"
msgstr ""

#: ../../api.rst:3549
msgid "Component"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:1
msgid "Represents a Discord Bot UI Kit Component."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:3
msgid "Currently, the only components supported by Discord are:"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:5
msgid ":class:`ActionRow`"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:6
msgid ":class:`Button`"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:7
msgid ":class:`SelectMenu`"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:9
msgid "This class is abstract and cannot be instantiated."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:15
#: ../../../discord/components.py:docstring of discord.components.ActionRow:11
msgid "The type of component."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Component:17
#: ../../../discord/components.py:docstring of discord.components.ActionRow:13
msgid ":class:`ComponentType`"
msgstr ""

#: ../../api.rst:3557
msgid "ActionRow"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:1
msgid "Represents a Discord Bot UI Kit Action Row."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:3
msgid "This is a component that holds up to 5 children components in a row."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:5
#: ../../../discord/components.py:docstring of discord.components.Button:3
msgid "This inherits from :class:`Component`."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.ActionRow:17
msgid "The children components that this holds, if any."
msgstr ""

#: ../../api.rst:3565
#: ../../api.rst:4263
msgid "Button"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:1
msgid "Represents a button from the Discord Bot UI Kit."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:7
msgid "The user constructible and usable type to create a button is :class:`discord.ui.Button` not this one."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:14
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:5
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:1
msgid "The style of the button."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:16
msgid ":class:`.ButtonStyle`"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:20
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:7
msgid "The ID of the button that gets received during an interaction. If this button is for a URL, it does not have a custom ID."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:27
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:10
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.url:1
msgid "The URL this button sends you to."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:33
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:12
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.disabled:1
msgid "Whether the button is disabled or not."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:39
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:14
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:15
msgid "The label of the button, if any."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:45
#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:16
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:1
msgid "The emoji of the button, if available."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.Button:47
#: ../../../discord/activity.py:docstring of discord.activity.Activity:96
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:33
msgid "Optional[:class:`PartialEmoji`]"
msgstr ""

#: ../../api.rst:3574
msgid "SelectMenu"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:1
msgid "Represents a select menu from the Discord Bot UI Kit."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:3
msgid "A select menu is functionally the same as a dropdown, however on mobile it renders a bit differently."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:8
msgid "The user constructible and usable type to create a select menu is :class:`discord.ui.Select` not this one."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:15
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.custom_id:1
msgid "The ID of the select menu that gets received during an interaction."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:21
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:12
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.placeholder:1
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:10
msgid "The placeholder text that is shown if nothing is selected, if any."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:27
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:14
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:21
msgid "The minimum number of items that must be chosen for this select menu. Defaults to 1 and must be between 1 and 25."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:34
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:17
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:24
msgid "The maximum number of items that must be chosen for this select menu. Defaults to 1 and must be between 1 and 25."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:41
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:20
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:1
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:27
msgid "A list of options that can be selected in this menu."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:43
msgid "List[:class:`SelectOption`]"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectMenu:47
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:22
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.disabled:1
msgid "Whether the select is disabled or not."
msgstr ""

#: ../../api.rst:3584
msgid "DeletedReferencedMessage"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.DeletedReferencedMessage:1
msgid "A special sentinel type that denotes whether the resolved message referenced message had since been deleted."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.DeletedReferencedMessage:4
msgid "The purpose of this class is to separate referenced messages that could not be fetched and those that were previously fetched but have since been deleted."
msgstr ""

#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.id:1
msgid "The message ID of the deleted referenced message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.channel_id:1
msgid "The channel ID of the deleted referenced message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.DeletedReferencedMessage.guild_id:1
msgid "The guild ID of the deleted referenced message."
msgstr ""

#: ../../api.rst:3593
msgid "Reaction"
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:1
msgid "Represents a reaction to a message."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:3
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:3
#: ../../../discord/invite.py:docstring of discord.invite.Invite:3
msgid "Depending on the way this object was created, some of the attributes can have a value of ``None``."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:10
msgid "Checks if two reactions are equal. This works by checking if the emoji is the same. So two messages with the same reaction will be considered \"equal\"."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:16
msgid "Checks if two reactions are not equal."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:20
msgid "Returns the reaction's hash."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:24
msgid "Returns the string form of the reaction's emoji."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:28
msgid "The reaction emoji. May be a custom emoji, or a unicode emoji."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:30
msgid "Union[:class:`Emoji`, :class:`PartialEmoji`, :class:`str`]"
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:34
msgid "Number of times this reaction was made"
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:40
msgid "If the user sent this reaction."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:46
msgid "Message this reaction is for."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction:48
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:10
#: ../../docstring of discord.Intents.messages:15
#: ../../docstring of discord.Intents.guild_messages:15
#: ../../docstring of discord.Intents.dm_messages:15
msgid ":class:`Message`"
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:1
msgid "Returns an :class:`AsyncIterator` representing the users that have reacted to the message."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:3
msgid "The ``after`` parameter must represent a member and meet the :class:`abc.Snowflake` abc."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:21
msgid "The maximum number of results to return. If not provided, returns all the users who reacted to the message."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:25
msgid "For pagination, reactions are sorted by member."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:28
msgid "Getting the users for the reaction failed."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.users:30
msgid "Union[:class:`User`, :class:`Member`] -- The member (if retrievable) or the user that has reacted to this message. The case where it can be a :class:`Member` is in a guild message context. Sometimes it can be a :class:`User` if the member has left the guild."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.is_custom_emoji:1
msgid ":class:`bool`: If this is a custom emoji."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:3
msgid "Remove the reaction by the provided :class:`User` from the message."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:5
msgid "If the reaction is not your own (i.e. ``user`` parameter is not you) then the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:8
msgid "The ``user`` parameter must represent a user or member and meet the :class:`abc.Snowflake` abc."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:11
msgid "The user or member from which to remove the reaction."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.remove:16
msgid "The user you specified, or the reaction's message was not found."
msgstr ""

#: ../../../discord/reaction.py:docstring of discord.reaction.Reaction.clear:3
msgid "Clears this reaction from the message."
msgstr ""

#: ../../api.rst:3605
msgid "Guild"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:1
msgid "Represents a Discord guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:3
msgid "This is referred to as a \"server\" in the official Discord UI."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:9
msgid "Checks if two guilds are equal."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:13
msgid "Checks if two guilds are not equal."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:17
msgid "Returns the guild's hash."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:21
msgid "Returns the guild's name."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:25
msgid "The guild name."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:31
msgid "All emojis that the guild owns."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:33
msgid "Tuple[:class:`Emoji`, ...]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:37
msgid "All stickers that the guild owns."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:41
msgid "Tuple[:class:`GuildSticker`, ...]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:45
msgid "The region the guild belongs on. There is a chance that the region will be a :class:`str` if the value is not recognised by the enumerator."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:52
msgid "The timeout to get sent to the AFK channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:58
msgid "The channel that denotes the AFK channel. ``None`` if it doesn't exist."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:60
msgid "Optional[:class:`VoiceChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:64
#: ../../../discord/widget.py:docstring of discord.widget.Widget:19
msgid "The guild's ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:70
msgid "The guild owner's ID. Use :attr:`Guild.owner` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:76
msgid "Indicates if the guild is unavailable. If this is ``True`` then the reliability of other attributes outside of :attr:`Guild.id` is slim and they might all be ``None``. It is best to not do anything with the guild if it is unavailable."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:80
msgid "Check the :func:`on_guild_unavailable` and :func:`on_guild_available` events."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:86
msgid "The maximum amount of presences for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:92
msgid "The maximum amount of members for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:96
msgid "This attribute is only available via :meth:`.Client.fetch_guild`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:102
msgid "The maximum amount of users in a video channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:110
msgid "The guild's description."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:116
msgid "Indicates the guild's two factor authorisation level. If this value is 0 then the guild does not require 2FA for their administrative members. If the value is 1 then they do."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:130
msgid "The guild's explicit content filter."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:136
msgid "The guild's notification settings."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:142
msgid "A list of features that the guild has. The features that a guild can have are subject to arbitrary change by Discord."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:145
msgid "They are currently as follows:"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:147
msgid "``ANIMATED_ICON``: Guild can upload an animated icon."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:148
msgid "``BANNER``: Guild can upload and use a banner. (i.e. :attr:`.banner`)"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:149
msgid "``COMMERCE``: Guild can sell things using store channels."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:150
msgid "``COMMUNITY``: Guild is a community server."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:151
msgid "``DISCOVERABLE``: Guild shows up in Server Discovery."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:152
msgid "``FEATURABLE``: Guild is able to be featured in Server Discovery."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:153
msgid "``INVITE_SPLASH``: Guild's invite page can have a special splash."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:154
msgid "``MEMBER_VERIFICATION_GATE_ENABLED``: Guild has Membership Screening enabled."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:155
msgid "``MONETIZATION_ENABLED``: Guild has enabled monetization."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:156
msgid "``MORE_EMOJI``: Guild has increased custom emoji slots."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:157
msgid "``MORE_STICKERS``: Guild has increased custom sticker slots."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:158
msgid "``NEWS``: Guild can create news channels."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:159
msgid "``PARTNERED``: Guild is a partnered server."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:160
msgid "``PREVIEW_ENABLED``: Guild can be viewed before being accepted via Membership Screening."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:161
msgid "``PRIVATE_THREADS``: Guild has access to create private threads."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:162
msgid "``ROLE_ICONS``: Guild has access to set icon for roles."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:163
msgid "``SEVEN_DAY_THREAD_ARCHIVE``: Guild has access to the seven day archive time for threads."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:164
msgid "``THREE_DAY_THREAD_ARCHIVE``: Guild has access to the three day archive time for threads."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:165
msgid "``TICKETED_EVENTS_ENABLED``: Guild has enabled ticketed events."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:166
msgid "``VANITY_URL``: Guild can have a vanity invite URL (e.g. discord.gg/discord-api)."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:167
msgid "``VERIFIED``: Guild is a verified server."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:168
msgid "``VIP_REGIONS``: Guild has VIP voice regions."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:169
msgid "``WELCOME_SCREEN_ENABLED``: Guild has enabled the welcome screen."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:171
#: ../../../discord/activity.py:docstring of discord.Spotify.artists:3
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:46
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:53
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:3
msgid "List[:class:`str`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:175
msgid "The premium tier for this guild. Corresponds to \"Nitro Server\" in the official UI. The number goes from 0 to 3 inclusive."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:182
msgid "The number of \"boosts\" this guild currently has."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:188
msgid "The preferred locale for the guild. Used when filtering Server Discovery results to a specific language."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:195
msgid "The guild's NSFW level."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild:199
msgid ":class:`NSFWLevel`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:1
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving the guild's members. In order to use this, :meth:`Intents.members` must be enabled."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:6
msgid "This method is an API call. For general usage, consider :attr:`members` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:12
msgid "The number of members to retrieve. Defaults to 1000. Pass ``None`` to fetch all members. Note that this is potentially slow."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:15
msgid "Retrieve members after this date or object. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:20
#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:13
msgid "The members intent is not enabled."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:21
msgid "Getting the members failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_members:23
msgid ":class:`.Member` -- The member with the member data parsed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:1
msgid "Returns an :class:`AsyncIterator` that enables receiving the guild's audit logs."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:3
msgid "You must have the :attr:`~Permissions.view_audit_log` permission to use this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:7
msgid "Getting the first 100 entries: ::"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:12
msgid "Getting entries for a specific action: ::"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:17
msgid "Getting entries made by a specific user: ::"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:22
msgid "The number of entries to retrieve. If ``None`` retrieve all entries."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:24
msgid "Retrieve entries before this date or entry. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:28
msgid "Retrieve entries after this date or entry. If a datetime is provided, it is recommended to use a UTC aware datetime. If the datetime is naive, it is assumed to be local time."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:32
msgid "If set to ``True``, return entries in oldest->newest order. Defaults to ``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:35
msgid "The moderator to filter entries from."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:37
msgid "The action to filter with."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:40
msgid "You are not allowed to fetch audit logs"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:41
msgid "An error occurred while fetching the audit logs."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.audit_logs:43
msgid ":class:`AuditLogEntry` -- The audit log entry."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.channels:1
msgid "A list of channels that belongs to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.threads:1
msgid "A list of threads that you have permission to view."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.threads:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:12
#: ../../../discord/channel.py:docstring of discord.TextChannel.threads:5
msgid "List[:class:`Thread`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.large:1
msgid "Indicates if the guild is a 'large' guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.large:3
msgid "A large guild is defined as having more than ``large_threshold`` count members, which for this library is set to the maximum of 250."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.voice_channels:1
msgid "A list of voice channels that belongs to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.voice_channels:3
#: ../../../discord/guild.py:docstring of discord.Guild.stage_channels:5
#: ../../../discord/guild.py:docstring of discord.Guild.text_channels:3
#: ../../../discord/guild.py:docstring of discord.Guild.categories:3
msgid "This is sorted by the position and are in UI order from top to bottom."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.voice_channels:5
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.voice_channels:3
msgid "List[:class:`VoiceChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.stage_channels:1
msgid "A list of stage channels that belongs to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.stage_channels:7
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.stage_channels:5
msgid "List[:class:`StageChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.me:1
msgid "Similar to :attr:`Client.user` except an instance of :class:`Member`. This is essentially used to get the member version of yourself."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.voice_client:1
msgid "Returns the :class:`VoiceProtocol` associated with this guild, if any."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.voice_client:3
msgid "Optional[:class:`VoiceProtocol`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.text_channels:1
msgid "A list of text channels that belongs to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.text_channels:5
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.text_channels:3
msgid "List[:class:`TextChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.categories:1
msgid "A list of categories that belongs to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.categories:5
msgid "List[:class:`CategoryChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:1
msgid "Returns every :class:`CategoryChannel` and their associated channels."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:3
msgid "These channels and categories are sorted in the official Discord UI order."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:5
msgid "If the channels do not have a category, then the first element of the tuple is ``None``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:8
msgid "The categories and their associated channels."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.by_category:9
msgid "List[Tuple[Optional[:class:`CategoryChannel`], List[:class:`abc.GuildChannel`]]]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:8
msgid "The returned channel or thread or ``None`` if not found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel_or_thread:9
msgid "Optional[Union[:class:`Thread`, :class:`.abc.GuildChannel`]]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:1
msgid "Returns a channel with the given ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:5
msgid "This does *not* search for threads."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_channel:11
msgid "Optional[:class:`.abc.GuildChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:1
msgid "Returns a thread with the given ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:8
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:8
msgid "The returned thread or ``None`` if not found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_thread:9
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_thread:9
msgid "Optional[:class:`Thread`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.system_channel:1
msgid "Returns the guild's channel used for system messages."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.system_channel:3
#: ../../../discord/guild.py:docstring of discord.Guild.rules_channel:4
#: ../../../discord/guild.py:docstring of discord.Guild.public_updates_channel:5
msgid "If no channel is set, then this returns ``None``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.system_channel_flags:1
msgid "Returns the guild's system channel settings."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.system_channel_flags:3
msgid ":class:`SystemChannelFlags`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.rules_channel:1
msgid "Return's the guild's channel used for the rules. The guild must be a Community guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.public_updates_channel:1
msgid "Return's the guild's channel where admins and moderators of the guilds receive notices from Discord. The guild must be a Community guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.emoji_limit:1
msgid "The maximum number of emoji slots this guild has."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.sticker_limit:1
msgid "The maximum number of sticker slots this guild has."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.bitrate_limit:1
msgid "The maximum bitrate for voice channels this guild can have."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.filesize_limit:1
msgid "The maximum number of bytes files can have when uploaded to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.members:1
msgid "A list of members that belong to this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.members:3
#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscribers:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:33
#: ../../../discord/role.py:docstring of discord.Role.members:3
#: ../../../discord/channel.py:docstring of discord.TextChannel.members:3
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.members:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.requesting_to_speak:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.speakers:5
#: ../../../discord/channel.py:docstring of discord.StageChannel.listeners:5
#: ../../../discord/channel.py:docstring of discord.StageChannel.moderators:5
#: ../../../discord/channel.py:docstring of discord.StageChannel.members:3
#: ../../../discord/widget.py:docstring of discord.widget.Widget:47
msgid "List[:class:`Member`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:1
msgid "Returns a member with the given ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:6
msgid "The member or ``None`` if not found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member:7
#: ../../../discord/guild.py:docstring of discord.Guild.owner:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:20
#: ../../../discord/threads.py:docstring of discord.Thread.owner:3
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:41
msgid "Optional[:class:`Member`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscribers:1
msgid "A list of members who have \"boosted\" this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.roles:1
msgid "Returns a :class:`list` of the guild's roles in hierarchy order."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.roles:3
msgid "The first element of this list will be the lowest role in the hierarchy."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:1
msgid "Returns a role with the given ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:6
msgid "The role or ``None`` if not found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_role:7
#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscriber_role:5
#: ../../../discord/guild.py:docstring of discord.Guild.self_role:5
#: ../../../discord/member.py:docstring of discord.member.Member.get_role:9
msgid "Optional[:class:`Role`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.default_role:1
msgid "Gets the @everyone role that all members have by default."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.premium_subscriber_role:1
msgid "Gets the premium subscriber role, AKA \"boost\" role, in this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.self_role:1
msgid "Gets the role associated with this client's user, if any."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.stage_instances:1
msgid "Returns a :class:`list` of the guild's stage instances that are currently running."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.stage_instances:6
msgid "List[:class:`StageInstance`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:1
msgid "Returns a stage instance with the given ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:8
msgid "The stage instance or ``None`` if not found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_stage_instance:9
#: ../../../discord/channel.py:docstring of discord.StageChannel.instance:5
msgid "Optional[:class:`StageInstance`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.owner:1
msgid "The member that owns the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.icon:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.icon:1
#: ../../../discord/webhook/async_.py:docstring of discord.PartialWebhookGuild.icon:1
msgid "Returns the guild's icon asset, if available."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.banner:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.banner:1
msgid "Returns the guild's banner asset, if available."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.splash:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.splash:1
msgid "Returns the guild's invite splash asset, if available."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.discovery_splash:1
msgid "Returns the guild's discovery splash asset, if available."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.member_count:1
msgid "Returns the true member count regardless of it being loaded fully or not."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.member_count:5
msgid "Due to a Discord limitation, in order for this attribute to remain up-to-date and accurate, it requires :attr:`Intents.members` to be specified."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.chunked:1
msgid "Returns a boolean indicating if the guild is \"chunked\"."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.chunked:3
msgid "A chunked guild means that :attr:`member_count` is equal to the number of members stored in the internal :attr:`members` cache."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.chunked:6
msgid "If this value returns ``False``, then you should request for offline members."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.shard_id:1
msgid "Returns the shard ID for this guild if applicable."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.Guild.created_at:1
#: ../../../discord/invite.py:docstring of discord.PartialInviteGuild.created_at:1
msgid "Returns the guild's creation time in UTC."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:1
msgid "Returns the first member found that matches the name provided."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:3
msgid "The name can have an optional discriminator argument, e.g. \"Jake#0001\" or \"Jake\" will both do the lookup. However the former will give a more precise result. Note that the discriminator must have all 4 digits for this to work."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:8
msgid "If a nickname is passed, then it is looked up via the nickname. Note however, that a nickname + discriminator combo will not lookup the nickname but rather the username + discriminator combo due to nickname + discriminator not being unique."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:13
msgid "If no member is found, ``None`` is returned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:15
msgid "The name of the member to lookup with an optional discriminator."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.get_member_named:18
msgid "The member in this guild with the associated name. If not found then ``None`` is returned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:3
msgid "Creates a :class:`TextChannel` for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:5
msgid "Note that you need the :attr:`~Permissions.manage_channels` permission to create the channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:8
msgid "The ``overwrites`` parameter can be used to create a 'secret' channel upon creation. This parameter expects a :class:`dict` of overwrites with the target (either a :class:`Member` or a :class:`Role`) as the key and a :class:`PermissionOverwrite` as the value."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:15
msgid "Creating a channel of a specified position will not update the position of other channels to follow suit. A follow-up call to :meth:`~TextChannel.edit` will be required to update the position of the channel in the channel list."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:21
msgid "Creating a basic channel:"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:27
msgid "Creating a \"secret\" channel:"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:38
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:7
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:29
msgid "The channel's name."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:40
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:11
msgid "A :class:`dict` of target (either a role or a member) to :class:`PermissionOverwrite` to apply upon creation of a channel. Useful for creating secret channels."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:44
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:11
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:15
msgid "The category to place the newly created channel under. The permissions will be automatically synced to category if no overwrites are provided."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:51
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:9
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:19
msgid "The new channel's topic."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:53
msgid "Specifies the slowmode rate limit for user in this channel, in seconds. The maximum value possible is `21600`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:56
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:23
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:15
msgid "To mark the channel as NSFW or not."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:58
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:31
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:22
msgid "The reason for creating this channel. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:63
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:36
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:27
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:12
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:12
msgid "The permission overwrite information is not in proper form."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:65
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:38
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:29
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:14
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:14
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:5
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:5
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:7
msgid "The channel that was just created."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_text_channel:66
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:6
msgid ":class:`TextChannel`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:3
msgid "This is similar to :meth:`create_text_channel` except makes a :class:`VoiceChannel` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:18
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:54
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:62
msgid "The channel's preferred audio bitrate in bits per second."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:20
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:60
msgid "The channel's limit for number of members that can be in a voice channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:22
msgid "The region for the voice channel's voice communication. A value of ``None`` indicates automatic voice region detection.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:22
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:66
msgid "The region for the voice channel's voice communication. A value of ``None`` indicates automatic voice region detection."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:27
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:38
msgid "The camera video quality for the voice channel's participants.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_voice_channel:39
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:6
msgid ":class:`VoiceChannel`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:3
msgid "This is similar to :meth:`create_text_channel` except makes a :class:`StageChannel` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_stage_channel:30
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:8
msgid ":class:`StageChannel`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:3
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:3
msgid "Same as :meth:`create_text_channel` except makes a :class:`CategoryChannel` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:7
msgid "The ``category`` parameter is not supported in this function since categories cannot have categories."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:15
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_category:15
msgid ":class:`CategoryChannel`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.leave:3
msgid "Leaves the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.leave:7
msgid "You cannot leave the guild that you own, you must delete it instead via :meth:`delete`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.leave:10
msgid "Leaving the guild failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete:3
msgid "Deletes the guild. You must be the guild owner to delete the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete:6
msgid "Deleting the guild failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete:7
msgid "You do not have permissions to delete the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:3
msgid "Edits the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:5
msgid "You must have the :attr:`~Permissions.manage_guild` permission to edit the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:8
msgid "The `rules_channel` and `public_updates_channel` keyword-only parameters were added."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:11
msgid "The `discovery_splash` and `community` keyword-only parameters were added."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:14
msgid "The newly updated guild is returned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:17
msgid "The new name of the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:19
msgid "The new description of the guild. Could be ``None`` for no description. This is only available to guilds that contain ``PUBLIC`` in :attr:`Guild.features`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:22
msgid "A :term:`py:bytes-like object` representing the icon. Only PNG/JPEG is supported. GIF is only available to guilds that contain ``ANIMATED_ICON`` in :attr:`Guild.features`. Could be ``None`` to denote removal of the icon."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:26
msgid "A :term:`py:bytes-like object` representing the banner. Could be ``None`` to denote removal of the banner. This is only available to guilds that contain ``BANNER`` in :attr:`Guild.features`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:30
msgid "A :term:`py:bytes-like object` representing the invite splash. Only PNG/JPEG supported. Could be ``None`` to denote removing the splash. This is only available to guilds that contain ``INVITE_SPLASH`` in :attr:`Guild.features`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:35
msgid "A :term:`py:bytes-like object` representing the discovery splash. Only PNG/JPEG supported. Could be ``None`` to denote removing the splash. This is only available to guilds that contain ``DISCOVERABLE`` in :attr:`Guild.features`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:40
msgid "Whether the guild should be a Community guild. If set to ``True``\\, both ``rules_channel`` and ``public_updates_channel`` parameters are required."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:43
msgid "The new region for the guild's voice communication."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:45
msgid "The new channel that is the AFK channel. Could be ``None`` for no AFK channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:47
msgid "The number of seconds until someone is moved to the AFK channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:49
msgid "The new owner of the guild to transfer ownership to. Note that you must be owner of the guild to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:52
msgid "The new verification level for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:54
msgid "The new default notification level for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:56
msgid "The new explicit content filter for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:58
msgid "The new vanity code for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:60
msgid "The new channel that is used for the system channel. Could be ``None`` for no system channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:62
msgid "The new system channel settings to use with the new system channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:64
msgid "The new preferred locale for the guild. Used as the primary language in the guild. If set, this must be an ISO 639 code, e.g. ``en-US`` or ``ja`` or ``zh-CN``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:67
msgid "The new channel that is used for rules. This is only available to guilds that contain ``PUBLIC`` in :attr:`Guild.features`. Could be ``None`` for no rules channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:71
msgid "The new channel that is used for public updates from Discord. This is only available to guilds that contain ``PUBLIC`` in :attr:`Guild.features`. Could be ``None`` for no public updates channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:75
msgid "The reason for editing this guild. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:78
msgid "You do not have permissions to edit the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:79
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:16
msgid "Editing the guild failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:80
msgid "The image format passed in to ``icon`` is invalid. It must be     PNG or JPG. This is also raised if you are not the owner of the     guild and request an ownership transfer."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:82
msgid "The newly updated guild. Note that this has the same limitations as mentioned in :meth:`Client.fetch_guild` and may not have full data."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit:84
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:21
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:21
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:21
#: ../../../discord/member.py:docstring of discord.member.Member:48
#: ../../../discord/emoji.py:docstring of discord.Emoji.guild:3
#: ../../../discord/role.py:docstring of discord.role.Role:53
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:31
#: ../../../discord/threads.py:docstring of discord.threads.Thread:33
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:31
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:31
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:33
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:29
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:33
#: ../../../discord/template.py:docstring of discord.template.Template:52
msgid ":class:`Guild`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:3
msgid "Retrieves all :class:`abc.GuildChannel` that the guild has."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:7
msgid "This method is an API call. For general usage, consider :attr:`channels` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:12
msgid "Retrieving the channels failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:14
msgid "All channels in the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channels:15
msgid "Sequence[:class:`abc.GuildChannel`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:3
msgid "Returns a list of active :class:`Thread` that the client can access."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:5
msgid "This includes both private and public threads."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:9
msgid "The request to get the active threads failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.active_threads:11
msgid "The active threads"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:3
msgid "Retrieves a :class:`Member` from a guild ID, and a member ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:7
msgid "This method is an API call. If you have :attr:`Intents.members` and member cache enabled, consider :meth:`get_member` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:9
msgid "The member's ID to fetch from."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:13
msgid "Fetching the member failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_member:15
msgid "The member from the member ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:3
msgid "Retrieves the :class:`BanEntry` for a user."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:5
msgid "You must have the :attr:`~Permissions.ban_members` permission to get this information."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:8
msgid "The user to get ban information from."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:12
msgid "This user is not banned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:15
msgid "The :class:`BanEntry` object for the specified user."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_ban:16
msgid ":class:`BanEntry`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:3
msgid "Retrieves a :class:`.abc.GuildChannel` or :class:`.Thread` with the specified ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:7
msgid "This method is an API call. For general usage, consider :meth:`get_channel_or_thread` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:11
msgid "An unknown channel type was received from Discord     or the guild the channel belongs to is not the same     as the one in this object points to."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_channel:17
msgid "Union[:class:`.abc.GuildChannel`, :class:`.Thread`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:3
msgid "Retrieves all the users that are banned from the guild as a :class:`list` of :class:`BanEntry`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:11
msgid "A list of :class:`BanEntry` objects."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.bans:12
msgid "List[:class:`BanEntry`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:3
msgid "Prunes the guild from its inactive members."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:5
msgid "The inactive members are denoted if they have not logged on in ``days`` number of days and they have no roles."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:8
msgid "You must have the :attr:`~Permissions.kick_members` permission to use this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:11
msgid "To check how many members you would prune without actually pruning, see the :meth:`estimate_pruned_members` function."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:14
msgid "To prune members that have specific roles see the ``roles`` parameter."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:16
msgid "The ``roles`` keyword-only parameter was added."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:19
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:7
msgid "The number of days before counting as inactive."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:23
msgid "Whether to compute the prune count. This defaults to ``True`` which makes it prone to timeouts in very large guilds. In order to prevent timeouts, you must set this to ``False``. If this is set to ``False``\\, then this function will always return ``None``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:28
msgid "A list of :class:`abc.Snowflake` that represent roles to include in the pruning process. If a member has a role that is not specified, they'll be excluded."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:32
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:15
msgid "You do not have permissions to prune members."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:33
msgid "An error occurred while pruning members."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:34
#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:17
msgid "An integer was not passed for ``days``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.prune_members:36
msgid "The number of members pruned. If ``compute_prune_count`` is ``False`` then this returns ``None``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:3
msgid "Gets the list of templates from this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:5
msgid "Requires :attr:`~.Permissions.manage_guild` permissions."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:9
msgid "You don't have permissions to get the templates."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:11
msgid "The templates for this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.templates:12
msgid "List[:class:`Template`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:3
msgid "Gets the list of webhooks from this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:5
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:5
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:5
msgid "Requires :attr:`~.Permissions.manage_webhooks` permissions."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:7
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:7
msgid "You don't have permissions to get the webhooks."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:9
msgid "The webhooks for this guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.webhooks:10
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:10
msgid "List[:class:`Webhook`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:3
msgid "Similar to :meth:`prune_members` except instead of actually pruning members, it returns how many members it would prune from the guild had it been called."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:9
msgid "A list of :class:`abc.Snowflake` that represent roles to include in the estimate. If a member has a role that is not specified, they'll be excluded.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:9
msgid "A list of :class:`abc.Snowflake` that represent roles to include in the estimate. If a member has a role that is not specified, they'll be excluded."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:16
msgid "An error occurred while fetching the prune members estimate."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.estimate_pruned_members:19
msgid "The number of members estimated to be pruned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:3
msgid "Returns a list of all active instant invites from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:5
msgid "You must have the :attr:`~Permissions.manage_guild` permission to get this information."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.invites:12
msgid "List[:class:`Invite`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:3
msgid "Creates a template for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:5
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:5
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:5
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:5
msgid "You must have the :attr:`~Permissions.manage_guild` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:10
#: ../../../discord/template.py:docstring of discord.template.Template:19
msgid "The name of the template."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_template:12
#: ../../../discord/template.py:docstring of discord.template.Template:25
msgid "The description of the template."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:3
msgid "Attaches an integration to the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:10
msgid "The integration type (e.g. Twitch)."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:12
#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:7
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:7
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:7
msgid "The integration ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:15
#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:10
msgid "You do not have permission to create the integration."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_integration:16
msgid "The account could not be found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:3
msgid "Returns a list of all integrations attached to the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:11
msgid "Fetching the integrations failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:13
msgid "The list of integrations that are attached to the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.integrations:14
msgid "List[:class:`Integration`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:3
msgid "Retrieves a list of all :class:`Sticker`\\s for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:9
msgid "This method is an API call. For general usage, consider :attr:`stickers` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:11
msgid "An error occurred fetching the stickers."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:13
msgid "The retrieved stickers."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_stickers:14
msgid "List[:class:`GuildSticker`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:3
msgid "Retrieves a custom :class:`Sticker` from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:9
msgid "This method is an API call. For general usage, consider iterating over :attr:`stickers` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:12
msgid "The sticker's ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:15
msgid "The sticker requested could not be found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:16
msgid "An error occurred fetching the sticker."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:18
#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:7
msgid "The retrieved sticker."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_sticker:19
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:25
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:18
#: ../../docstring of discord.Intents.emojis_and_stickers:13
msgid ":class:`GuildSticker`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:3
msgid "Creates a :class:`Sticker` for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:5
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:5
msgid "You must have :attr:`~Permissions.manage_emojis_and_stickers` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:10
msgid "The sticker name. Must be at least 2 characters."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:12
msgid "The sticker's description. Can be ``None``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:14
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:9
msgid "The name of a unicode emoji that represents the sticker's expression."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:16
msgid "The file of the sticker to upload."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:18
msgid "The reason for creating this sticker. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:21
msgid "You are not allowed to create stickers."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:22
msgid "An error occurred creating a sticker."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_sticker:24
msgid "The created sticker."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:3
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:3
msgid "Deletes the custom :class:`Sticker` from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:10
msgid "The sticker you are deleting."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:12
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:8
msgid "The reason for deleting this sticker. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:15
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:11
msgid "You are not allowed to delete stickers."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_sticker:16
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.delete:12
msgid "An error occurred deleting the sticker."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:3
msgid "Retrieves all custom :class:`Emoji`\\s from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:7
msgid "This method is an API call. For general usage, consider :attr:`emojis` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:9
msgid "An error occurred fetching the emojis."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:11
msgid "The retrieved emojis."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emojis:12
msgid "List[:class:`Emoji`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:3
msgid "Retrieves a custom :class:`Emoji` from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:7
msgid "This method is an API call. For general usage, consider iterating over :attr:`emojis` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:10
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:37
msgid "The emoji's ID."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:13
msgid "The emoji requested could not be found."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:14
msgid "An error occurred fetching the emoji."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:16
msgid "The retrieved emoji."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_emoji:17
#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:25
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:22
#: ../../docstring of discord.Intents.emojis_and_stickers:12
msgid ":class:`Emoji`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:3
msgid "Creates a custom :class:`Emoji` for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:5
msgid "There is currently a limit of 50 static and animated emojis respectively per guild, unless the guild has the ``MORE_EMOJI`` feature which extends the limit to 200."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:8
msgid "You must have the :attr:`~Permissions.manage_emojis` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:11
msgid "The emoji name. Must be at least 2 characters."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:13
msgid "The :term:`py:bytes-like object` representing the image data to use. Only JPG, PNG and GIF images are supported."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:16
msgid "A :class:`list` of :class:`Role`\\s that can use this emoji. Leave empty to make it available to everyone."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:18
msgid "The reason for creating this emoji. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:21
msgid "You are not allowed to create emojis."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:22
msgid "An error occurred creating an emoji."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_custom_emoji:24
msgid "The created emoji."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:3
msgid "Deletes the custom :class:`Emoji` from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:5
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:5
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:5
msgid "You must have :attr:`~Permissions.manage_emojis` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:8
msgid "The emoji you are deleting."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:10
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:8
msgid "The reason for deleting this emoji. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:13
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:11
msgid "You are not allowed to delete emojis."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.delete_emoji:14
#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:12
msgid "An error occurred deleting the emoji."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:3
msgid "Retrieves all :class:`Role` that the guild has."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:7
msgid "This method is an API call. For general usage, consider :attr:`roles` instead."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:11
msgid "Retrieving the roles failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.fetch_roles:13
msgid "All roles in the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:3
msgid "Creates a :class:`Role` for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:5
#: ../../../discord/role.py:docstring of discord.role.Role.edit:8
msgid "All fields are optional."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:5
msgid "You must have the :attr:`~Permissions.manage_roles` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:10
#: ../../../discord/role.py:docstring of discord.role.Role.edit:10
msgid "Can now pass ``int`` to ``colour`` keyword-only parameter."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:13
msgid "Added ``icon`` parameter."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:16
msgid "The role name. Defaults to 'new role'."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:18
msgid "The permissions to have. Defaults to no permissions."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:20
msgid "The colour for the role. Defaults to :meth:`Colour.default`. This is aliased to ``color`` as well."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:23
msgid "The raw bytes for the role icon."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:25
msgid "Indicates if the role should be shown separately in the member list. Defaults to ``False``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:28
msgid "Indicates if the role should be mentionable by others. Defaults to ``False``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:31
msgid "The reason for creating this role. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:34
msgid "You do not have permissions to create the role."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:35
msgid "Creating the role failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:36
#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:29
msgid "An invalid keyword argument was given."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.create_role:38
msgid "The newly created role."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:3
msgid "Bulk edits a list of :class:`Role` in the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:10
msgid "Example:"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:22
msgid "A :class:`dict` of :class:`Role` to :class:`int` to change the positions of each given role."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:24
msgid "The reason for editing the role positions. Shows up on the audit log."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:27
msgid "You do not have permissions to move the roles."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:28
msgid "Moving the roles failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_role_positions:31
msgid "A list of all the roles in the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:3
msgid "Kicks a user from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:5
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:5
msgid "The user must meet the :class:`abc.Snowflake` abc."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:7
msgid "You must have the :attr:`~Permissions.kick_members` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:10
msgid "The user to kick from their guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:12
msgid "The reason the user got kicked."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:15
msgid "You do not have the proper permissions to kick."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.kick:16
msgid "Kicking failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:3
msgid "Bans a user from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:7
#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:7
msgid "You must have the :attr:`~Permissions.ban_members` permission to do this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:10
msgid "The user to ban from their guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:12
msgid "The number of days worth of messages to delete from the user in the guild. The minimum is 0 and the maximum is 7."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:15
msgid "The reason the user got banned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:18
msgid "You do not have the proper permissions to ban."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.ban:19
msgid "Banning failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:3
msgid "Unbans a user from the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:10
msgid "The user to unban."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:15
msgid "You do not have the proper permissions to unban."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.unban:16
msgid "Unbanning failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:3
msgid "Returns the guild's special vanity invite."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:5
msgid "The guild must have ``VANITY_URL`` in :attr:`~Guild.features`."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:7
msgid "You must have the :attr:`~Permissions.manage_guild` permission to use this as well."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:10
msgid "You do not have the proper permissions to get this."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:11
msgid "Retrieving the vanity invite failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:13
msgid "The special vanity invite. If ``None`` then the guild does not have a vanity invite set."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.vanity_invite:15
msgid "Optional[:class:`Invite`]"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:3
msgid "Returns the widget of the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.widget:13
msgid ":class:`Widget`"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:3
msgid "Edits the widget of the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:5
msgid "You must have the :attr:`~Permissions.manage_guild` permission to use this"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:10
msgid "Whether to enable the widget for the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:12
msgid "The new widget channel. ``None`` removes the widget channel."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:15
msgid "You do not have permission to edit the widget."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.edit_widget:16
msgid "Editing the widget failed."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:3
msgid "Requests all members that belong to this guild. In order to use this, :meth:`Intents.members` must be enabled."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:6
#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:6
msgid "This is a websocket operation and can be slow."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.chunk:10
msgid "Whether to cache the members as well."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:3
msgid "Request members that belong to this guild whose username starts with the query given."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:10
msgid "The string that the username's start with."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:12
msgid "The maximum number of members to send back. This must be a number between 5 and 100."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:15
msgid "Whether to request for presences to be provided. This defaults to ``False``.  .. versionadded:: 1.6"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:15
msgid "Whether to request for presences to be provided. This defaults to ``False``."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:20
msgid "Whether to cache the members internally. This makes operations such as :meth:`get_member` work for those that matched."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:23
msgid "List of user IDs to search for. If the user ID is not in the guild then it won't be returned.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:23
msgid "List of user IDs to search for. If the user ID is not in the guild then it won't be returned."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:28
msgid "The query timed out waiting for the members."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:29
msgid "Invalid parameters were passed to the function"
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:30
msgid "The presences intent is not enabled."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.query_members:32
msgid "The list of members that have matched the query."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:3
msgid "Changes client's voice state in the guild."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:7
msgid "Channel the client wants to join. Use ``None`` to disconnect."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:9
msgid "Indicates if the client should be self-muted."
msgstr ""

#: ../../../discord/guild.py:docstring of discord.guild.Guild.change_voice_state:11
msgid "Indicates if the client should be self-deafened."
msgstr ""

#: ../../api.rst:3621
msgid "A namedtuple which represents a ban returned from :meth:`~Guild.bans`."
msgstr ""

#: ../../api.rst:3625
msgid "The reason this user was banned."
msgstr ""

#: ../../api.rst:3630
msgid "The :class:`User` that was banned."
msgstr ""

#: ../../api.rst:3636
msgid "Integration"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:1
msgid "Represents a guild integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:13
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:13
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:13
msgid "The integration name."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:19
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:19
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:19
msgid "The guild of the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:25
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:25
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:25
msgid "The integration type (i.e. Twitch)."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:31
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:31
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:31
msgid "Whether the integration is currently enabled."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:37
msgid "The account linked to this integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:39
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:45
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:69
msgid ":class:`IntegrationAccount`"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration:43
#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:37
msgid "The user that added this integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:3
msgid "Deletes the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:8
msgid "The reason the integration was deleted. Shows up on the audit log.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:8
msgid "The reason the integration was deleted. Shows up on the audit log."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:13
msgid "You do not have permission to delete the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.Integration.delete:14
msgid "Deleting the integration failed."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:1
msgid "Represents an integration account."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:7
msgid "The account ID."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationAccount:13
msgid "The account name."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:1
msgid "Represents a bot integration on discord."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:43
#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:67
msgid "The integration account information."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:49
msgid "The application tied to this integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.BotIntegration:51
msgid ":class:`IntegrationApplication`"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:1
msgid "Represents an application for a bot integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:7
msgid "The ID for this application."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:13
msgid "The application's name."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:19
msgid "The application's icon hash."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:25
msgid "The application's description. Can be an empty string."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:31
msgid "The summary of the application. Can be an empty string."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.IntegrationApplication:37
msgid "The bot user on this application."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:1
msgid "Represents a stream integration for Twitch or YouTube."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:37
msgid "Where the integration is currently syncing."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:43
msgid "Whether emoticons should be synced for this integration (currently twitch only)."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:45
#: ../../../discord/template.py:docstring of discord.template.Template:60
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:73
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:79
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:85
msgid "Optional[:class:`bool`]"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:49
msgid "The behaviour of expiring subscribers. Aliased to ``expire_behavior`` as well."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:51
#: ../../../discord/integrations.py:docstring of discord.StreamIntegration.expire_behavior:3
msgid ":class:`ExpireBehaviour`"
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:55
msgid "The grace period (in days) for expiring subscribers."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:61
msgid "The user for the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration:73
msgid "An aware UTC datetime representing when the integration was last synced."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.StreamIntegration.expire_behavior:1
msgid "An alias for :attr:`expire_behaviour`."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.StreamIntegration.role:1
msgid "Optional[:class:`Role`] The role which the integration uses for subscribers."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:3
msgid "Edits the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:8
msgid "The behaviour when an integration subscription lapses. Aliased to ``expire_behavior`` as well."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:10
msgid "The period (in days) where the integration will ignore lapsed subscriptions."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:12
msgid "Where emoticons should be synced for this integration (currently twitch only)."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:15
msgid "You do not have permission to edit the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.edit:17
msgid "``expire_behaviour`` did not receive a :class:`ExpireBehaviour`."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:3
msgid "Syncs the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:8
msgid "You do not have permission to sync the integration."
msgstr ""

#: ../../../discord/integrations.py:docstring of discord.integrations.StreamIntegration.sync:9
msgid "Syncing the integration failed."
msgstr ""

#: ../../api.rst:3654
msgid "Interaction"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:1
msgid "Represents a Discord interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:3
msgid "An interaction happens when a user does an action that needs to be notified. Current examples are slash commands and components."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:10
msgid "The interaction's ID."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:16
msgid "The interaction type."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:18
msgid ":class:`InteractionType`"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:22
msgid "The guild ID the interaction was sent from."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:28
msgid "The channel ID the interaction was sent from."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:34
msgid "The application ID that the interaction was for."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:40
msgid "The user or member that sent the interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:42
msgid "Optional[Union[:class:`User`, :class:`Member`]]"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:46
msgid "The message that sent this interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:48
#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:14
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:14
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:25
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:36
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:43
msgid "Optional[:class:`Message`]"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:52
msgid "The token to continue the interaction. These are valid for 15 minutes."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:59
msgid "The raw interaction data."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction:61
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:29
#: ../../../discord/activity.py:docstring of discord.activity.Activity:57
#: ../../../discord/activity.py:docstring of discord.activity.Activity:69
#: ../../../discord/activity.py:docstring of discord.activity.Activity:78
#: ../../../discord/activity.py:docstring of discord.activity.Streaming:61
msgid ":class:`dict`"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.Interaction.guild:1
msgid "The guild the interaction was sent from."
msgstr ""

#: ../../docstring of discord.Interaction.channel:1
msgid "The channel the interaction was sent from."
msgstr ""

#: ../../docstring of discord.Interaction.channel:3
msgid "Note that due to a Discord limitation, DM channels are not resolved since there is no data to complete them. These are :class:`PartialMessageable` instead."
msgstr ""

#: ../../docstring of discord.Interaction.channel:6
msgid "Optional[Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, :class:`Thread`]]"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:1
msgid "The resolved permissions of the member in the channel, including overwrites."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.Interaction.permissions:3
msgid "In a non-guild context where this doesn't apply, an empty permissions object is returned."
msgstr ""

#: ../../docstring of discord.Interaction.response:1
msgid "Returns an object responsible for handling responding to the interaction."
msgstr ""

#: ../../docstring of discord.Interaction.response:3
msgid "A response can only be done once. If secondary messages need to be sent, consider using :attr:`followup` instead."
msgstr ""

#: ../../docstring of discord.Interaction.response:6
msgid ":class:`InteractionResponse`"
msgstr ""

#: ../../docstring of discord.Interaction.followup:1
msgid "Returns the follow up webhook for follow up interactions."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:3
msgid "Fetches the original interaction response message associated with the interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:5
msgid "If the interaction response was :meth:`InteractionResponse.send_message` then this would return the message that was sent using that response. Otherwise, this would return the message that triggered the interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:9
msgid "Repeated calls to this will return a cached value."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:11
msgid "Fetching the original response message failed."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:12
msgid "The channel for the message could not be resolved."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.original_message:14
msgid "The original interaction response message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:3
msgid "Edits the original interaction response message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:5
msgid "This is a lower level interface to :meth:`InteractionMessage.edit` in case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:8
msgid "This method is also the only way to edit the original message if the message sent was ephemeral."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.edit_original_message:36
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage.edit:30
msgid ":class:`InteractionMessage`"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:3
msgid "Deletes the original interaction response message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.Interaction.delete_original_message:5
msgid "This is a lower level interface to :meth:`InteractionMessage.delete` in case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: ../../api.rst:3662
msgid "InteractionResponse"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse:1
msgid "Represents a Discord interaction response."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse:3
msgid "This type can be accessed through :attr:`Interaction.response`."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.is_done:1
msgid ":class:`bool`: Indicates whether an interaction response has been done before."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.is_done:3
msgid "An interaction can only be responded to once."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:3
msgid "Defers the interaction response."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:5
msgid "This is typically used when the interaction is acknowledged and a secondary action will be done later."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:8
msgid "Indicates whether the deferred message will eventually be ephemeral. This only applies for interactions of type :attr:`InteractionType.application_command`."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:12
msgid "Deferring the interaction failed."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.defer:13
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:8
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:25
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:22
msgid "This interaction has already been responded to before."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:3
msgid "Pongs the ping interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:5
msgid "This should rarely be used."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.pong:7
msgid "Ponging the interaction failed."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:3
msgid "Responds to this interaction by sending a message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:15
msgid "The view to send with the message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:17
msgid "Indicates if the message should only be visible to the user who started the interaction. If a view is sent with an ephemeral message and it has no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.send_message:23
#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:21
msgid "You specified both ``embed`` and ``embeds``."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:3
msgid "Responds to this interaction by editing the original message of a component interaction."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionResponse.edit_message:6
msgid "The new content to replace the message with. ``None`` removes the content."
msgstr ""

#: ../../api.rst:3670
msgid "InteractionMessage"
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:1
msgid "Represents the original interaction response message."
msgstr ""

#: ../../../discord/interactions.py:docstring of discord.interactions.InteractionMessage:3
msgid "This allows you to edit or delete the message associated with the interaction response. To retrieve this object see :meth:`Interaction.original_message`."
msgstr ""

#: ../../api.rst:3678
msgid "Member"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:1
msgid "Represents a Discord member to a :class:`Guild`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:3
msgid "This implements a lot of the functionality of :class:`User`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:9
msgid "Checks if two members are equal. Note that this works with :class:`User` instances too."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:14
msgid "Checks if two members are not equal. Note that this works with :class:`User` instances too."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:19
msgid "Returns the member's hash."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:23
msgid "Returns the member's name with the discriminator."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:27
msgid "An aware datetime object that specifies the date and time in UTC that the member joined the guild. If the member left and rejoined the guild, this will be the latest date. In certain cases, this can be ``None``."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:34
msgid "The activities that the user is currently doing."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:38
msgid "Due to a Discord API limitation, a user's Spotify activity may not appear if they are listening to a song with a title longer than 128 characters. See :issue:`1738` for more information."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:42
msgid "Tuple[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:46
msgid "The guild that the member belongs to."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:52
msgid "The guild specific nickname of the user."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:58
msgid "Whether the member is pending member verification."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member:66
msgid "An aware datetime object that specifies the date and time in UTC when the member used their \"Nitro boost\" on the guild, if available. This could be ``None``."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.name:1
msgid "Equivalent to :attr:`User.name`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.id:1
msgid "Equivalent to :attr:`User.id`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.discriminator:1
msgid "Equivalent to :attr:`User.discriminator`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.bot:1
msgid "Equivalent to :attr:`User.bot`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.system:1
msgid "Equivalent to :attr:`User.system`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.created_at:1
msgid "Equivalent to :attr:`User.created_at`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.default_avatar:1
msgid "Equivalent to :attr:`User.default_avatar`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.avatar:1
msgid "Equivalent to :attr:`User.avatar`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.dm_channel:1
msgid "Equivalent to :attr:`User.dm_channel`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.mutual_guilds:1
msgid "Equivalent to :attr:`User.mutual_guilds`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.public_flags:1
msgid "Equivalent to :attr:`User.public_flags`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.banner:1
msgid "Equivalent to :attr:`User.banner`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.accent_color:1
msgid "Equivalent to :attr:`User.accent_color`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.accent_colour:1
msgid "Equivalent to :attr:`User.accent_colour`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.raw_status:1
msgid "The member's overall status as a string value."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.status:1
msgid "The member's overall status. If the value is unknown, then it will be a :class:`str` instead."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.status:3
#: ../../../discord/member.py:docstring of discord.Member.mobile_status:3
#: ../../../discord/member.py:docstring of discord.Member.desktop_status:3
#: ../../../discord/member.py:docstring of discord.Member.web_status:3
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:49
msgid ":class:`Status`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.mobile_status:1
msgid "The member's status on a mobile device, if applicable."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.desktop_status:1
msgid "The member's status on the desktop client, if applicable."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.web_status:1
msgid "The member's status on the web client, if applicable."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.is_on_mobile:1
msgid ":class:`bool`: A helper function that determines if a member is active on a mobile device."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.colour:1
msgid "A property that returns a colour denoting the rendered colour for the member. If the default colour is the one rendered then an instance of :meth:`Colour.default` is returned."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.color:1
msgid "A property that returns a color denoting the rendered color for the member. If the default color is the one rendered then an instance of :meth:`Colour.default` is returned."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.roles:1
msgid "A :class:`list` of :class:`Role` that the member belongs to. Note that the first element of this list is always the default '@everyone' role."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.roles:5
msgid "These roles are sorted by their position in the role hierarchy."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.mention:1
msgid "Returns a string that allows you to mention the member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.display_avatar:1
msgid "Returns the member's display avatar."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.display_avatar:3
msgid "For regular members this is just their avatar, but if they have a guild specific avatar then that is returned instead."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.guild_avatar:1
msgid "Returns an :class:`Asset` for the guild avatar the member has. If unavailable, ``None`` is returned."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.activity:1
msgid "Returns the primary activity the user is currently doing. Could be ``None`` if no activity is being done."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.activity:6
msgid "Due to a Discord API limitation, this may be ``None`` if the user is listening to a song on Spotify with a title longer than 128 characters. See :issue:`1738` for more information."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.activity:12
msgid "A user may have multiple activities, these can be accessed under :attr:`activities`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.activity:14
#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:67
msgid "Optional[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:1
msgid "Checks if the member is mentioned in the specified message."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.mentioned_in:6
msgid "Indicates if the member is mentioned in the message."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.top_role:1
msgid "Returns the member's highest role."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.top_role:3
msgid "This is useful for figuring where a member stands in the role hierarchy chain."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.guild_permissions:1
msgid "Returns the member's guild permissions."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.guild_permissions:3
msgid "This only takes into consideration the guild permissions and not most of the implied permissions or any of the channel permission overwrites. For 100% accurate permission calculation, please use :meth:`abc.GuildChannel.permissions_for`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.guild_permissions:8
msgid "This does take into consideration guild ownership and the administrator implication."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.voice:1
msgid "Returns the member's current voice state."
msgstr ""

#: ../../../discord/member.py:docstring of discord.Member.voice:3
msgid "Optional[:class:`VoiceState`]"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.ban:3
msgid "Bans this member. Equivalent to :meth:`Guild.ban`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.unban:3
msgid "Unbans this member. Equivalent to :meth:`Guild.unban`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.kick:3
msgid "Kicks this member. Equivalent to :meth:`Guild.kick`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:3
msgid "Edits the member's data."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:5
msgid "Depending on the parameter passed, this requires different permissions listed below:"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:8
msgid "Parameter"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:8
msgid "Permission"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:10
msgid "nick"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:10
msgid ":attr:`Permissions.manage_nicknames`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:12
msgid "mute"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:12
msgid ":attr:`Permissions.mute_members`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:14
msgid "deafen"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:14
msgid ":attr:`Permissions.deafen_members`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:16
msgid ":attr:`Permissions.manage_roles`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:18
msgid "voice_channel"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:18
msgid ":attr:`Permissions.move_members`"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:23
msgid "Can now pass ``None`` to ``voice_channel`` to kick a member from voice."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:26
msgid "The newly member is now optionally returned, if applicable."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:29
msgid "The member's new nickname. Use ``None`` to remove the nickname."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:31
msgid "Indicates if the member should be guild muted or un-muted."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:33
msgid "Indicates if the member should be guild deafened or un-deafened."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:35
msgid "Indicates if the member should be suppressed in stage channels.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:35
msgid "Indicates if the member should be suppressed in stage channels."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:39
msgid "The member's new list of roles. This *replaces* the roles."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:41
msgid "The voice channel to move the member to. Pass ``None`` to kick them from voice."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:44
msgid "The reason for editing this member. Shows up on the audit log."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:47
#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:14
msgid "You do not have the proper permissions to the action requested."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:48
#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:15
msgid "The operation failed."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:50
msgid "The newly updated member, if applicable. This is only returned when certain fields are updated."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.edit:52
msgid "Optional[:class:`.Member`]"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:3
msgid "Request to speak in the connected channel."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:5
#: ../../../discord/member.py:docstring of discord.member.VoiceState:45
msgid "Only applies to stage channels."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.request_to_speak:9
msgid "Requesting members that are not the client is equivalent to :attr:`.edit` providing ``suppress`` as ``False``."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.move_to:3
msgid "Moves a member to a new voice channel (they must be connected first)."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.move_to:5
msgid "You must have the :attr:`~Permissions.move_members` permission to use this."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.move_to:8
msgid "This raises the same exceptions as :meth:`edit`."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.move_to:10
msgid "Can now pass ``None`` to kick a member from voice."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.move_to:13
msgid "The new voice channel to move the member to. Pass ``None`` to kick them from voice."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:3
msgid "Gives the member a number of :class:`Role`\\s."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:5
msgid "You must have the :attr:`~Permissions.manage_roles` permission to use this, and the added :class:`Role`\\s must appear lower in the list of roles than the highest role of the member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:9
msgid "An argument list of :class:`abc.Snowflake` representing a :class:`Role` to give to the member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:12
msgid "The reason for adding these roles. Shows up on the audit log."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:14
msgid "Whether to atomically add roles. This will ensure that multiple operations will always be applied regardless of the current state of the cache."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:19
msgid "You do not have permissions to add these roles."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.add_roles:20
msgid "Adding roles failed."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:3
msgid "Removes :class:`Role`\\s from this member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:5
msgid "You must have the :attr:`~Permissions.manage_roles` permission to use this, and the removed :class:`Role`\\s must appear lower in the list of roles than the highest role of the member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:9
msgid "An argument list of :class:`abc.Snowflake` representing a :class:`Role` to remove from the member."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:12
msgid "The reason for removing these roles. Shows up on the audit log."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:14
msgid "Whether to atomically remove roles. This will ensure that multiple operations will always be applied regardless of the current state of the cache."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:19
msgid "You do not have permissions to remove these roles."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.remove_roles:20
msgid "Removing the roles failed."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.get_role:1
msgid "Returns a role with the given ID from roles which the member has."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.Member.get_role:8
msgid "The role or ``None`` if not found in the member's roles."
msgstr ""

#: ../../api.rst:3694
msgid "Spotify"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Spotify:1
msgid "Represents a Spotify listening activity from Discord. This is a special case of :class:`Activity` that makes it easier to work with the Spotify integration."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Spotify:8
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:7
msgid "Checks if two activities are equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Spotify:12
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:11
msgid "Checks if two activities are not equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Spotify:16
#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:15
msgid "Returns the activity's hash."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Spotify:20
msgid "Returns the string 'Spotify'."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.type:1
#: ../../../discord/activity.py:docstring of discord.CustomActivity.type:1
msgid "Returns the activity's type. This is for compatibility with :class:`Activity`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.type:3
msgid "It always returns :attr:`ActivityType.listening`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.type:5
#: ../../../discord/activity.py:docstring of discord.activity.Activity:34
#: ../../../discord/activity.py:docstring of discord.Game.type:5
#: ../../../discord/activity.py:docstring of discord.Streaming.type:5
#: ../../../discord/activity.py:docstring of discord.CustomActivity.type:5
msgid ":class:`ActivityType`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.created_at:1
msgid "When the user started listening in UTC."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.colour:1
#: ../../../discord/activity.py:docstring of discord.Spotify.color:1
msgid "Returns the Spotify integration colour, as a :class:`Colour`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.colour:3
msgid "There is an alias for this named :attr:`color`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.color:3
msgid "There is an alias for this named :attr:`colour`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.name:1
msgid "The activity's name. This will always return \"Spotify\"."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.title:1
msgid "The title of the song being played."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.artists:1
msgid "The artists of the song being played."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.artist:1
msgid "The artist of the song being played."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.artist:3
msgid "This does not attempt to split the artist information into multiple artists. Useful if there's only a single artist."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.album:1
msgid "The album that the song being played belongs to."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.album_cover_url:1
msgid "The album cover image URL from Spotify's CDN."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.track_id:1
msgid "The track ID used by Spotify to identify this song."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.track_url:1
msgid "The track URL to listen on Spotify."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.start:1
msgid "When the user started playing this song in UTC."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.end:1
msgid "When the user will stop playing this song in UTC."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.duration:1
msgid "The duration of the song being played."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.duration:3
msgid ":class:`datetime.timedelta`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Spotify.party_id:1
msgid "The party ID of the listening party."
msgstr ""

#: ../../api.rst:3702
msgid "VoiceState"
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:1
msgid "Represents a Discord user's voice state."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:5
msgid "Indicates if the user is currently deafened by the guild."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:11
msgid "Indicates if the user is currently muted by the guild."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:17
msgid "Indicates if the user is currently muted by their own accord."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:23
msgid "Indicates if the user is currently deafened by their own accord."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:29
msgid "Indicates if the user is currently streaming via 'Go Live' feature."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:37
msgid "Indicates if the user is currently broadcasting video."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:43
msgid "Indicates if the user is suppressed from speaking."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:53
msgid "An aware datetime object that specifies the date and time in UTC that the member requested to speak. It will be ``None`` if they are not requesting to speak anymore or have been accepted to speak."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:57
msgid "Only applicable to stage channels."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:65
msgid "Indicates if the user is currently in the AFK channel in the guild."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:71
msgid "The voice channel that the user is currently connected to. ``None`` if the user is not currently in a voice channel."
msgstr ""

#: ../../../discord/member.py:docstring of discord.member.VoiceState:74
msgid "Optional[Union[:class:`VoiceChannel`, :class:`StageChannel`]]"
msgstr ""

#: ../../api.rst:3710
msgid "Emoji"
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:1
msgid "Represents a custom emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:10
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:12
msgid "Checks if two emoji are the same."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:14
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:16
msgid "Checks if two emoji are not the same."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:18
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:20
msgid "Return the emoji's hash."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:22
msgid "Returns an iterator of ``(field, value)`` pairs. This allows this class to be used as an iterable in list/dict/etc constructions."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:27
#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:24
msgid "Returns the emoji rendered for discord."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:31
msgid "The name of the emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:43
msgid "If colons are required to use this emoji in the client (:PJSalt: vs PJSalt)."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:49
msgid "Whether an emoji is animated or not."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:55
msgid "If this emoji is managed by a Twitch integration."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:61
msgid "The guild ID the emoji belongs to."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:67
msgid "Whether the emoji is available for use."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji:73
msgid "The user that created the emoji. This can only be retrieved using :meth:`Guild.fetch_emoji` and having the :attr:`~Permissions.manage_emojis` permission."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.Emoji.created_at:1
msgid "Returns the emoji's creation time in UTC."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.Emoji.url:1
msgid "Returns the URL of the emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.Emoji.roles:1
msgid "A :class:`list` of roles that is allowed to use this emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.Emoji.roles:3
msgid "If roles is empty, the emoji is unrestricted."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.Emoji.guild:1
msgid "The guild this emoji belongs to."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.is_usable:1
msgid ":class:`bool`: Whether the bot can use this emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.delete:3
msgid "Deletes the custom emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:3
msgid "Edits the custom emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:8
msgid "The newly updated emoji is returned."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:11
msgid "The new emoji name."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:13
msgid "A list of roles that can use this emoji. An empty list can be passed to make it available to everyone."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:15
msgid "The reason for editing this emoji. Shows up on the audit log."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:18
msgid "You are not allowed to edit emojis."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:19
msgid "An error occurred editing the emoji."
msgstr ""

#: ../../../discord/emoji.py:docstring of discord.emoji.Emoji.edit:21
msgid "The newly updated emoji."
msgstr ""

#: ../../api.rst:3719
msgid "PartialEmoji"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:1
msgid "Represents a \"partial\" emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:3
msgid "This model will be given in two scenarios:"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:5
msgid "\"Raw\" data events such as :func:`on_raw_reaction_add`"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:6
msgid "Custom emoji that the bot cannot see from e.g. :attr:`Message.reactions`"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:28
msgid "The custom emoji name, if applicable, or the unicode codepoint of the non-custom emoji. This can be ``None`` if the emoji got deleted (e.g. removing a reaction with a deleted emoji)."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:36
msgid "Whether the emoji is animated or not."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji:42
msgid "The ID of the custom emoji, if applicable."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:1
msgid "Converts a Discord string representation of an emoji to a :class:`PartialEmoji`."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:3
msgid "The formats accepted are:"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:5
msgid "``a:name:id``"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:6
msgid "``<a:name:id>``"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:7
msgid "``name:id``"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:8
msgid "``<:name:id>``"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:10
msgid "If the format does not match then it is assumed to be a unicode emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:14
msgid "The string representation of an emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:17
msgid "The partial emoji from this string."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.from_str:18
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:32
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:27
msgid ":class:`PartialEmoji`"
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.is_custom_emoji:1
msgid ":class:`bool`: Checks if this is a custom non-Unicode emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.partial_emoji.PartialEmoji.is_unicode_emoji:1
msgid ":class:`bool`: Checks if this is a Unicode emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.created_at:1
msgid "Returns the emoji's creation time in UTC, or None if Unicode emoji."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.url:1
msgid "Returns the URL of the emoji, if it is custom."
msgstr ""

#: ../../../discord/partial_emoji.py:docstring of discord.PartialEmoji.url:3
msgid "If this isn't a custom emoji then an empty string is returned"
msgstr ""

#: ../../api.rst:3728
msgid "Role"
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:1
msgid "Represents a Discord role in a :class:`Guild`."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:7
msgid "Checks if two roles are equal."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:11
msgid "Checks if two roles are not equal."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:15
msgid "Checks if a role is higher than another in the hierarchy."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:19
msgid "Checks if a role is lower than another in the hierarchy."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:23
msgid "Checks if a role is higher or equal to another in the hierarchy."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:27
msgid "Checks if a role is lower or equal to another in the hierarchy."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:31
msgid "Return the role's hash."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:35
msgid "Returns the role's name."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:39
msgid "The ID for the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:45
msgid "The name of the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:51
msgid "The guild the role belongs to."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:57
msgid "Indicates if the role will be displayed separately from other members."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:63
msgid "The position of the role. This number is usually positive. The bottom role has a position of 0."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:68
msgid "Multiple roles can have the same position number. As a consequence of this, comparing via role position is prone to subtle bugs if checking for role hierarchy. The recommended and correct way to compare for roles in the hierarchy is using the comparison operators on the role objects themselves."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:78
msgid "Indicates if the role is managed by the guild through some form of integrations such as Twitch."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:85
msgid "Indicates if the role can be mentioned by users."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:91
msgid "The role tags associated with this role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role:93
msgid "Optional[:class:`RoleTags`]"
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.is_default:1
msgid ":class:`bool`: Checks if the role is the default role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.is_bot_managed:1
#: ../../../discord/role.py:docstring of discord.role.RoleTags.is_bot_managed:1
msgid ":class:`bool`: Whether the role is associated with a bot."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.is_premium_subscriber:1
#: ../../../discord/role.py:docstring of discord.role.RoleTags.is_premium_subscriber:1
msgid ":class:`bool`: Whether the role is the premium subscriber, AKA \"boost\", role for the guild."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.is_integration:1
#: ../../../discord/role.py:docstring of discord.role.RoleTags.is_integration:1
msgid ":class:`bool`: Whether the role is managed by an integration."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.is_assignable:1
msgid ":class:`bool`: Whether the role is able to be assigned or removed by the bot."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.permissions:1
msgid "Returns the role's permissions."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.colour:1
msgid "Returns the role colour. An alias exists under ``color``."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.color:1
msgid "Returns the role color. An alias exists under ``colour``."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.created_at:1
msgid "Returns the role's creation time in UTC."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.mention:1
msgid "Returns a string that allows you to mention a role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.members:1
msgid "Returns all the members with this role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.icon:1
msgid "Returns the icon asset associated with this role, can be ``None``."
msgstr ""

#: ../../../discord/role.py:docstring of discord.Role.icon:7
msgid "The guild needs to have the ``ROLE_ICONS`` features to have this enabled."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:3
msgid "Edits the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:5
#: ../../../discord/role.py:docstring of discord.role.Role.delete:5
msgid "You must have the :attr:`~Permissions.manage_roles` permission to use this."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:13
msgid "Edits are no longer in-place, the newly edited role is returned instead. Also added a new ``icon`` parameter to change role icons."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:17
msgid "The new role name to change to."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:19
msgid "The new permissions to change to."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:21
msgid "The new colour to change to. (aliased to color as well)"
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:23
msgid "A bytes object representing the role icon."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:25
msgid "Indicates if the role should be shown separately in the member list."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:27
msgid "Indicates if the role should be mentionable by others."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:29
msgid "The new role's position. This must be below your top role's position or it will fail."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:32
msgid "The reason for editing this role. Shows up on the audit log."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:35
msgid "You do not have permissions to change the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:36
msgid "Editing the role failed."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:37
msgid "An invalid position was given or the default     role was asked to be moved."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.edit:39
msgid "The newly edited role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.delete:3
msgid "Deletes the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.delete:8
msgid "The reason for deleting this role. Shows up on the audit log."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.delete:11
msgid "You do not have permissions to delete the role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.Role.delete:12
msgid "Deleting the role failed."
msgstr ""

#: ../../api.rst:3736
msgid "RoleTags"
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.RoleTags:1
msgid "Represents tags on a role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.RoleTags:3
msgid "A role tag is a piece of extra information attached to a managed role that gives it context for the reason the role is managed."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.RoleTags:6
msgid "While this can be accessed, a useful interface is also provided in the :class:`Role` and :class:`Guild` classes as well."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.RoleTags:13
msgid "The bot's user ID that manages this role."
msgstr ""

#: ../../../discord/role.py:docstring of discord.role.RoleTags:19
msgid "The integration ID that manages the role."
msgstr ""

#: ../../api.rst:3744
msgid "PartialMessageable"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:1
msgid "Represents a partial messageable to aid with working messageable channels when only a channel ID are present."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:4
msgid "The only way to construct this class is through :meth:`Client.get_partial_messageable`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:6
#: ../../../discord/message.py:docstring of discord.message.PartialMessage:11
msgid "Note that this class is trimmed down and has no rich attributes."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:14
msgid "Checks if two partial messageables are equal."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:18
msgid "Checks if two partial messageables are not equal."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:22
msgid "Returns the partial messageable's hash."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:26
msgid "The channel ID associated with this partial messageable."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:32
msgid "The channel type associated with this partial messageable, if given."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable:34
msgid "Optional[:class:`ChannelType`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:1
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:1
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:1
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:1
msgid "Creates a :class:`PartialMessage` from the message ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:3
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:3
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:3
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:3
msgid "This is useful if you want to work with a message and only have its ID without doing an unnecessary API call."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:6
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:8
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:8
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:8
msgid "The message ID to create a partial message for."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:9
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:11
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:11
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:11
msgid "The partial message."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.PartialMessageable.get_partial_message:10
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.get_partial_message:12
#: ../../../discord/threads.py:docstring of discord.threads.Thread.get_partial_message:12
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.get_partial_message:12
msgid ":class:`PartialMessage`"
msgstr ""

#: ../../api.rst:3753
msgid "TextChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:1
msgid "Represents a Discord guild text channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:7
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:7
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:7
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:9
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:9
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:7
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:7
msgid "Checks if two channels are equal."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:11
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:11
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:11
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:13
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:13
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:11
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:11
msgid "Checks if two channels are not equal."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:15
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:15
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:15
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:17
#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:15
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:15
msgid "Returns the channel's hash."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:19
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:19
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:19
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:21
msgid "Returns the channel's name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:35
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:35
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:35
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:37
msgid "The channel ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:41
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:41
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:49
msgid "The category channel ID this channel belongs to, if applicable."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:47
msgid "The channel's topic. ``None`` if it doesn't exist."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:60
msgid "The last message ID of the message sent to this channel. It may *not* point to an existing or valid message."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:67
msgid "The number of seconds a member must wait between sending messages in this channel. A value of `0` denotes that it is disabled. Bots and users with :attr:`~Permissions.manage_channels` or :attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:76
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:54
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:50
msgid "If the channel is marked as \"not safe for work\"."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:80
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:58
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:54
msgid "To check if the channel or the guild of that channel are marked as NSFW, consider :meth:`is_nsfw` instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel:86
msgid "The default auto archive duration in minutes for threads created in this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.type:1
#: ../../../discord/threads.py:docstring of discord.Thread.type:1
#: ../../../discord/channel.py:docstring of discord.StoreChannel.type:1
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.type:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.type:1
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.type:1
#: ../../../discord/channel.py:docstring of discord.DMChannel.type:1
#: ../../../discord/channel.py:docstring of discord.GroupChannel.type:1
msgid "The channel's Discord type."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.type:3
#: ../../../discord/threads.py:docstring of discord.Thread.type:3
#: ../../../discord/channel.py:docstring of discord.StoreChannel.type:3
#: ../../../discord/channel.py:docstring of discord.VoiceChannel.type:3
#: ../../../discord/channel.py:docstring of discord.StageChannel.type:3
#: ../../../discord/channel.py:docstring of discord.CategoryChannel.type:3
#: ../../../discord/channel.py:docstring of discord.DMChannel.type:3
#: ../../../discord/channel.py:docstring of discord.GroupChannel.type:3
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:40
msgid ":class:`ChannelType`"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.members:1
msgid "Returns all members that can see this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.threads:1
msgid "Returns all the threads that you can see."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.is_nsfw:1
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.is_nsfw:1
msgid ":class:`bool`: Checks if the channel is NSFW."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.is_news:1
msgid ":class:`bool`: Checks if the channel is a news channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:1
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:1
msgid "Fetches the last message from this channel in cache."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:3
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:3
msgid "The message might not be valid or point to an existing message."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:5
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:5
msgid "Reliable Fetching"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:8
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:8
msgid "For a slightly more reliable method of fetching the last message, consider using either :meth:`history` or :meth:`fetch_message` with the :attr:`last_message_id` attribute."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.TextChannel.last_message:13
#: ../../../discord/threads.py:docstring of discord.Thread.last_message:13
msgid "The last message in this channel or ``None`` if not found."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:3
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:3
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:3
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:3
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:3
msgid "Edits the channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:5
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:5
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:5
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:5
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:5
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:5
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:5
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:5
msgid "You must have the :attr:`~Permissions.manage_channels` permission to use this."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:8
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:8
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:8
msgid "The ``overwrites`` keyword-only parameter was added."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:11
msgid "The ``type`` keyword-only parameter was added."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:14
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:8
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:11
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:11
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:11
msgid "Edits are no longer in-place, the newly edited channel is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:17
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:11
msgid "The new channel name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:21
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:13
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:20
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:16
msgid "The new channel's position."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:25
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:17
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:22
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:18
msgid "Whether to sync permissions with the channel's new or pre-existing category. Defaults to ``False``."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:28
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:20
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:25
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:21
msgid "The new category for this channel. Can be ``None`` to remove the category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:31
msgid "Specifies the slowmode rate limit for user in this channel, in seconds. A value of `0` disables slowmode. The maximum value possible is `21600`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:34
msgid "Change the type of this text channel. Currently, only conversion between :attr:`ChannelType.text` and :attr:`ChannelType.news` is supported. This is only available to guilds that contain ``NEWS`` in :attr:`Guild.features`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:38
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:23
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:28
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:24
msgid "The reason for editing this channel. Shows up on the audit log."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:40
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:25
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:30
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:26
#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:22
msgid "A :class:`Mapping` of target (either a role or a member) to :class:`PermissionOverwrite` to apply to the channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:43
msgid "The new default auto archive duration in minutes for threads created in this channel. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:47
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:31
msgid "If position is less than 0 or greater than the number of channels, or if     the permission overwrite information is not in proper form."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:48
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:32
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:44
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:38
msgid "You do not have permissions to edit the channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:49
#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:33
#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:45
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:39
msgid "Editing the channel failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:51
msgid "The newly edited text channel. If the edit was only positional then ``None`` is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.edit:53
msgid "Optional[:class:`.TextChannel`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:3
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:3
msgid "Deletes a list of messages. This is similar to :meth:`Message.delete` except it bulk deletes multiple messages."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:6
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:6
msgid "As a special case, if the number of messages is 0, then nothing is done. If the number of messages is 1 then single message delete is done. If it's more than two, then bulk delete is used."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:10
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:10
msgid "You cannot bulk delete more than 100 messages or messages that are older than 14 days old."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:13
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:13
msgid "You must have the :attr:`~Permissions.manage_messages` permission to use this."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:16
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:18
msgid "An iterable of messages denoting which ones to bulk delete."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:19
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:21
msgid "The number of messages to delete was more than 100."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:20
msgid "You do not have proper permissions to delete the messages."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:21
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:23
msgid "If single delete, then the message was already deleted."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.delete_messages:22
#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:24
msgid "Deleting the messages failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:3
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:3
msgid "Purges a list of messages that meet the criteria given by the predicate ``check``. If a ``check`` is not provided then all messages are deleted without discrimination."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:7
msgid "You must have the :attr:`~Permissions.manage_messages` permission to delete messages even if they are your own. The :attr:`~Permissions.read_message_history` permission is also needed to retrieve message history."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:14
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:14
msgid "Deleting bot's messages ::"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:22
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:22
msgid "The number of messages to search through. This is not the number of messages that will be deleted, though it can be."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:25
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:25
msgid "The function used to check if a message should be deleted. It must take a :class:`Message` as its sole parameter."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:28
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:28
msgid "Same as ``before`` in :meth:`history`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:30
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:30
msgid "Same as ``after`` in :meth:`history`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:32
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:32
msgid "Same as ``around`` in :meth:`history`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:34
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:34
msgid "Same as ``oldest_first`` in :meth:`history`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:36
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:36
msgid "If ``True``, use bulk delete. Setting this to ``False`` is useful for mass-deleting a bot's own messages without :attr:`Permissions.manage_messages`. When ``True``, will fall back to single delete if messages are older than two weeks."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:41
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:41
msgid "You do not have proper permissions to do the actions required."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:42
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:42
msgid "Purging the messages failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:44
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:44
msgid "The list of messages that were deleted."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.purge:45
#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:45
msgid "List[:class:`.Message`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:3
msgid "Gets the list of webhooks from this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.webhooks:9
msgid "The webhooks for this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:3
msgid "Creates a webhook for this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:7
msgid "Added the ``reason`` keyword-only parameter."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:10
msgid "The webhook's name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:12
msgid "A :term:`py:bytes-like object` representing the webhook's default avatar. This operates similarly to :meth:`~ClientUser.edit`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:15
msgid "The reason for creating this webhook. Shows up in the audit logs."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:18
msgid "Creating the webhook failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:19
msgid "You do not have permissions to create a webhook."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_webhook:21
#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:22
msgid "The created webhook."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:1
msgid "Follows a channel using a webhook."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:3
msgid "Only news channels can be followed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:7
msgid "The webhook returned will not provide a token to do webhook actions, as Discord does not provide it."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:12
msgid "The channel you would like to follow from."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:14
msgid "The reason for following the channel. Shows up on the destination guild's audit log.  .. versionadded:: 1.4"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:14
msgid "The reason for following the channel. Shows up on the destination guild's audit log."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:19
msgid "Following the channel failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.follow:20
msgid "You do not have the permissions to create a webhook."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:3
msgid "Creates a thread in this text channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:5
msgid "To create a public thread, you must have :attr:`~discord.Permissions.create_public_threads`. For a private thread, :attr:`~discord.Permissions.create_private_threads` is needed instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:12
msgid "A snowflake representing the message to create the thread with. If ``None`` is passed then a private thread is created. Defaults to ``None``."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:19
msgid "The type of thread to create. If a ``message`` is passed then this parameter is ignored, as a thread created with a message is always a public thread. By default this creates a private thread if this is ``None``."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:23
msgid "The reason for creating a new thread. Shows up on the audit log."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:27
msgid "Starting the thread failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:29
msgid "The created thread"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.create_thread:30
#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:32
#: ../../../discord/threads.py:docstring of discord.ThreadMember.thread:3
msgid ":class:`Thread`"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:1
msgid "Returns an :class:`~discord.AsyncIterator` that iterates over all archived threads in the guild."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:3
msgid "You must have :attr:`~Permissions.read_message_history` to use this. If iterating over private threads then :attr:`~Permissions.manage_threads` is also required."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:8
msgid "The number of threads to retrieve. If ``None``, retrieves every archived thread in the channel. Note, however, that this would make it a slow operation."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:12
msgid "Retrieve archived channels before the given date or ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:14
msgid "Whether to retrieve private archived threads."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:16
msgid "Whether to retrieve private archived threads that you've joined. You cannot set ``joined`` to ``True`` and ``private`` to ``False``."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:20
msgid "You do not have permissions to get archived threads."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:21
msgid "The request to get the archived threads failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.TextChannel.archived_threads:23
msgid ":class:`Thread` -- The archived threads."
msgstr ""

#: ../../api.rst:3769
msgid "Thread"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:1
msgid "Represents a Discord thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:7
msgid "Checks if two threads are equal."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:11
msgid "Checks if two threads are not equal."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:15
msgid "Returns the thread's hash."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:19
msgid "Returns the thread's name."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:25
msgid "The thread name."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:31
msgid "The guild the thread belongs to."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:37
msgid "The thread ID."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:43
msgid "The parent :class:`TextChannel` ID this thread belongs to."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:49
msgid "The user's ID that created this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:55
msgid "The last message ID of the message sent to this thread. It may *not* point to an existing or valid message."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:62
msgid "The number of seconds a member must wait between sending messages in this thread. A value of `0` denotes that it is disabled. Bots and users with :attr:`~Permissions.manage_channels` or :attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:71
msgid "An approximate number of messages in this thread. This caps at 50."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:77
msgid "An approximate number of members in this thread. This caps at 50."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:83
msgid "A thread member representing yourself, if you've joined the thread. This could not be available."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:86
msgid "Optional[:class:`ThreadMember`]"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:90
msgid "Whether the thread is archived."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:96
msgid "Whether the thread is locked."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:102
msgid "Whether non-moderators can add other non-moderators to this thread. This is always ``True`` for public threads."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:109
msgid "The user's ID that archived this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:115
msgid "The duration in minutes until the thread is automatically archived due to inactivity. Usually a value of 60, 1440, 4320 and 10080."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread:122
msgid "An aware timestamp of when the thread's archived status was last updated in UTC."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.parent:1
msgid "The parent channel this thread belongs to."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.owner:1
msgid "The member this thread belongs to."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.mention:1
msgid "The string that allows you to mention the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.members:1
msgid "A list of thread members in this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.members:3
msgid "This requires :attr:`Intents.members` to be properly filled. Most of the time however, this data is not provided by the gateway and a call to :meth:`fetch_members` is needed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.members:7
#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:11
msgid "List[:class:`ThreadMember`]"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category:1
msgid "The category channel the parent channel belongs to, if applicable."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category:3
#: ../../../discord/threads.py:docstring of discord.Thread.category_id:3
msgid "The parent channel was not cached and returned ``None``."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category:5
msgid "The parent channel's category."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category:6
msgid "Optional[:class:`CategoryChannel`]"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category_id:1
msgid "The category channel ID the parent channel belongs to, if applicable."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.Thread.category_id:5
msgid "The parent channel's category ID."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_private:1
msgid ":class:`bool`: Whether the thread is a private thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_private:3
msgid "A private thread is only viewable by those that have been explicitly invited or have :attr:`~.Permissions.manage_threads`."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_news:1
msgid ":class:`bool`: Whether the thread is a news thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_news:3
msgid "A news thread is a thread that has a parent that is a news channel, i.e. :meth:`.TextChannel.is_news` is ``True``."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_nsfw:1
msgid ":class:`bool`: Whether the thread is NSFW or not."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.is_nsfw:3
msgid "An NSFW thread is a thread that has a parent that is an NSFW channel, i.e. :meth:`.TextChannel.is_nsfw` is ``True``."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:4
msgid "Since threads do not have their own permissions, they inherit them from the parent channel. This is a convenience method for calling :meth:`~discord.TextChannel.permissions_for` on the parent channel."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.permissions_for:14
msgid "The parent channel was not cached and returned ``None``"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:16
msgid "Usable only by bot accounts."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete_messages:22
msgid "You do not have proper permissions to delete the messages or     you're not using a bot account."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.purge:7
msgid "You must have the :attr:`~Permissions.manage_messages` permission to delete messages even if they are your own (unless you are a user account). The :attr:`~Permissions.read_message_history` permission is also needed to retrieve message history."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:3
msgid "Edits the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:5
msgid "Editing the thread requires :attr:`.Permissions.manage_threads`. The thread creator can also edit ``name``, ``archived`` or ``auto_archive_duration``. Note that if the thread is locked then only those with :attr:`.Permissions.manage_threads` can unarchive a thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:10
msgid "The thread must be unarchived to be edited."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:12
msgid "The new name of the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:14
msgid "Whether to archive the thread or not."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:16
msgid "Whether to lock the thread or not."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:18
msgid "Whether non-moderators can add other non-moderators to this thread. Only available for private threads."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:21
msgid "The new duration in minutes before a thread is automatically archived for inactivity. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:24
msgid "Specifies the slowmode rate limit for user in this thread, in seconds. A value of ``0`` disables slowmode. The maximum value possible is ``21600``."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:28
msgid "You do not have permissions to edit the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:29
msgid "Editing the thread failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.edit:31
msgid "The newly edited thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:3
msgid "Joins this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:5
msgid "You must have :attr:`~Permissions.send_messages_in_threads` to join a thread. If the thread is private, :attr:`~Permissions.manage_threads` is also needed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:8
msgid "You do not have permissions to join the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.join:9
msgid "Joining the thread failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.leave:3
msgid "Leaves this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.leave:5
msgid "Leaving the thread failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:3
msgid "Adds a user to this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:5
msgid "You must have :attr:`~Permissions.send_messages` and :attr:`~Permissions.use_threads` to add a user to a public thread. If the thread is private then :attr:`~Permissions.send_messages` and either :attr:`~Permissions.use_private_threads` or :attr:`~Permissions.manage_messages` is required to add a user to the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:10
#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:7
msgid "The user to add to the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:13
msgid "You do not have permissions to add the user to the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.add_user:14
msgid "Adding the user to the thread failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:3
msgid "Removes a user from this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:5
msgid "You must have :attr:`~Permissions.manage_threads` or be the creator of the thread to remove a user."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:10
msgid "You do not have permissions to remove the user from the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.remove_user:11
msgid "Removing the user from the thread failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:3
msgid "Retrieves all :class:`ThreadMember` that are in this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:5
msgid "This requires :attr:`Intents.members` to get information about members other than yourself."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:8
msgid "Retrieving the members failed."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.fetch_members:10
msgid "All thread members in the thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:3
msgid "Deletes this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:5
msgid "You must have :attr:`~Permissions.manage_threads` to delete threads."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:7
msgid "You do not have permissions to delete this thread."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.Thread.delete:8
msgid "Deleting the thread failed."
msgstr ""

#: ../../api.rst:3785
msgid "ThreadMember"
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:1
msgid "Represents a Discord thread member."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:7
msgid "Checks if two thread members are equal."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:11
msgid "Checks if two thread members are not equal."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:15
msgid "Returns the thread member's hash."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:19
msgid "Returns the thread member's name."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:25
msgid "The thread member's ID."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:31
msgid "The thread's ID."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.threads.ThreadMember:37
msgid "The time the member joined the thread in UTC."
msgstr ""

#: ../../../discord/threads.py:docstring of discord.ThreadMember.thread:1
msgid "The thread this member belongs to."
msgstr ""

#: ../../api.rst:3793
msgid "StoreChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:1
msgid "Represents a Discord guild store channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel:41
msgid "The category channel ID this channel belongs to."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:25
msgid "A :class:`Mapping` of target (either a role or a member) to :class:`PermissionOverwrite` to apply to the channel.  .. versionadded:: 1.3"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:35
msgid "The newly edited store channel. If the edit was only positional then ``None`` is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StoreChannel.edit:37
msgid "Optional[:class:`.StoreChannel`]"
msgstr ""

#: ../../api.rst:3802
msgid "VoiceChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:1
msgid "Represents a Discord guild voice channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel:71
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:77
msgid "Optional[:class:`VoiceRegion`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:14
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:14
msgid "The new channel's name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:16
msgid "The new channel's bitrate."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:18
msgid "The new channel's user limit."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:33
msgid "The new region for the voice channel's voice communication. A value of ``None`` indicates automatic voice region detection.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:33
msgid "The new region for the voice channel's voice communication. A value of ``None`` indicates automatic voice region detection."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:43
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:37
msgid "If the permission overwrite information is not in proper form."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:47
msgid "The newly edited voice channel. If the edit was only positional then ``None`` is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.VoiceChannel.edit:49
msgid "Optional[:class:`.VoiceChannel`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:3
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:3
msgid "Connects to voice and creates a :class:`VoiceClient` to establish your connection to the voice server."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:6
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:6
#: ../../docstring of discord.MemberCacheFlags.voice:3
msgid "This requires :attr:`Intents.voice_states`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:8
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:8
msgid "The timeout in seconds to wait for the voice endpoint."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:10
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:10
msgid "Whether the bot should automatically attempt a reconnect if a part of the handshake fails or the gateway goes down."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:14
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:14
msgid "A type that subclasses :class:`~discord.VoiceProtocol` to connect with. Defaults to :class:`~discord.VoiceClient`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:18
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:18
msgid "Could not connect to the voice channel in time."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:19
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:19
msgid "You are already connected to a voice channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:20
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:20
msgid "The opus library has not been loaded."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:22
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:22
msgid "A voice client that is fully connected to the voice server."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:23
#: ../../../discord/channel.py:docstring of discord.abc.Connectable.connect:23
msgid ":class:`~discord.VoiceProtocol`"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.VoiceChannel.members:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.members:1
msgid "Returns all members that are currently inside this voice channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:1
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:1
msgid "Returns a mapping of member IDs who have voice states in this channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:7
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:7
msgid "This function is intentionally low level to replace :attr:`members` when the member cache is unavailable."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:10
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:10
msgid "The mapping of member ID to a voice state."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.VoiceChannel.voice_states:11
#: ../../../discord/channel.py:docstring of discord.StageChannel.voice_states:11
msgid "Mapping[:class:`int`, :class:`VoiceState`]"
msgstr ""

#: ../../api.rst:3811
msgid "StageChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:1
msgid "Represents a Discord guild stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:43
msgid "The channel's topic. ``None`` if it isn't set."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:68
msgid "The channel's limit for number of members that can be in a stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:74
msgid "The region for the stage channel's voice communication. A value of ``None`` indicates automatic voice region detection."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel:81
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:32
msgid "The camera video quality for the stage channel's participants."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.StageChannel.requesting_to_speak:1
msgid "A list of members who are requesting to speak in the stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.StageChannel.speakers:1
msgid "A list of members who have been permitted to speak in the stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.StageChannel.listeners:1
msgid "A list of members who are listening in the stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.StageChannel.moderators:1
msgid "A list of members who are moderating the stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.StageChannel.instance:1
msgid "The running stage instance of the stage channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:3
msgid "Create a stage instance."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:10
msgid "The stage instance's topic."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:12
msgid "The stage instance's privacy level. Defaults to :attr:`StagePrivacyLevel.guild_only`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:14
msgid "The reason the stage instance was created. Shows up on the audit log."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:17
#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:15
msgid "If the ``privacy_level`` parameter is not the proper type."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:18
msgid "You do not have permissions to create a stage instance."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:19
msgid "Creating a stage instance failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:21
msgid "The newly created stage instance."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.create_instance:22
#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:11
msgid ":class:`StageInstance`"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:3
msgid "Gets the running :class:`StageInstance`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.fetch_instance:10
msgid "The stage instance."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:8
msgid "The ``topic`` parameter must now be set via :attr:`create_instance`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:29
msgid "The new region for the stage channel's voice communication. A value of ``None`` indicates automatic voice region detection."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:32
msgid "The camera video quality for the stage channel's participants.  .. versionadded:: 2.0"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:41
msgid "The newly edited stage channel. If the edit was only positional then ``None`` is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.StageChannel.edit:43
msgid "Optional[:class:`.StageChannel`]"
msgstr ""

#: ../../api.rst:3821
msgid "StageInstance"
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:1
msgid "Represents a stage instance of a stage channel in a guild."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:9
msgid "Checks if two stage instances are equal."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:13
msgid "Checks if two stage instances are not equal."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:17
msgid "Returns the stage instance's hash."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:21
msgid "The stage instance's ID."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:27
msgid "The guild that the stage instance is running in."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:33
msgid "The ID of the channel that the stage instance is running in."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:39
msgid "The topic of the stage instance."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance:51
msgid "Whether discoverability for the stage instance is disabled."
msgstr ""

#: ../../docstring of discord.StageInstance.channel:1
msgid "The channel that stage instance is running in."
msgstr ""

#: ../../docstring of discord.StageInstance.channel:3
msgid "Optional[:class:`StageChannel`]"
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:3
msgid "Edits the stage instance."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:8
msgid "The stage instance's new topic."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:10
msgid "The stage instance's new privacy level."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:12
msgid "The reason the stage instance was edited. Shows up on the audit log."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:16
msgid "You do not have permissions to edit the stage instance."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.edit:17
msgid "Editing a stage instance failed."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:3
msgid "Deletes the stage instance."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:8
msgid "The reason the stage instance was deleted. Shows up on the audit log."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:11
msgid "You do not have permissions to delete the stage instance."
msgstr ""

#: ../../../discord/stage_instance.py:docstring of discord.stage_instance.StageInstance.delete:12
msgid "Deleting the stage instance failed."
msgstr ""

#: ../../api.rst:3829
msgid "CategoryChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:1
msgid "Represents a Discord channel category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:3
msgid "These are useful to group channels to logical compartments."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:17
msgid "Returns the category's hash."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:21
msgid "Returns the category's name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:25
msgid "The category name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:31
msgid "The guild the category belongs to."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:37
msgid "The category channel ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel:43
msgid "The position in the category list. This is a number that starts at 0. e.g. the top category is position 0."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.is_nsfw:1
msgid ":class:`bool`: Checks if the category is NSFW."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:14
msgid "The new category's name."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:16
msgid "The new category's position."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:18
msgid "To mark the category as NSFW or not."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:20
msgid "The reason for editing this category. Shows up on the audit log."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:26
msgid "If position is less than 0 or greater than the number of categories."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:27
msgid "You do not have permissions to edit the category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:28
msgid "Editing the category failed."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:30
msgid "The newly edited category channel. If the edit was only positional then ``None`` is returned instead."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.edit:32
msgid "Optional[:class:`.CategoryChannel`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.CategoryChannel.channels:1
msgid "Returns the channels that are under this category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.CategoryChannel.channels:3
msgid "These are sorted by the official Discord UI, which places voice channels below the text channels."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.CategoryChannel.text_channels:1
msgid "Returns the text channels that are under this category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.CategoryChannel.voice_channels:1
msgid "Returns the voice channels that are under this category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.CategoryChannel.stage_channels:1
msgid "Returns the stage channels that are under this category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_text_channel:3
msgid "A shortcut method to :meth:`Guild.create_text_channel` to create a :class:`TextChannel` in the category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_voice_channel:3
msgid "A shortcut method to :meth:`Guild.create_voice_channel` to create a :class:`VoiceChannel` in the category."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.CategoryChannel.create_stage_channel:3
msgid "A shortcut method to :meth:`Guild.create_stage_channel` to create a :class:`StageChannel` in the category."
msgstr ""

#: ../../api.rst:3838
msgid "DMChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:1
msgid "Represents a Discord direct message channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:19
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:19
msgid "Returns a string representation of the channel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:23
msgid "The user you are participating with in the direct message channel. If this channel is received through the gateway, the recipient information may not be always available."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel:37
msgid "The direct message channel ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.DMChannel.created_at:1
msgid "Returns the direct message channel's creation time in UTC."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:1
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:1
msgid "Handles permission resolution for a :class:`User`."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:3
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:3
msgid "This function is there for compatibility with other channel types."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:5
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:5
msgid "Actual direct messages do not really have the concept of permissions."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:7
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:7
msgid "This returns all the Text related permissions set to ``True`` except:"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:9
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:9
msgid ":attr:`~Permissions.send_tts_messages`: You cannot send TTS messages in a DM."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:10
#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:10
msgid ":attr:`~Permissions.manage_messages`: You cannot delete others messages in a DM."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:12
msgid "The user to check permissions for. This parameter is ignored but kept for compatibility with other ``permissions_for`` methods."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.DMChannel.permissions_for:16
msgid "The resolved permissions."
msgstr ""

#: ../../api.rst:3854
msgid "GroupChannel"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:1
msgid "Represents a Discord group channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:23
msgid "The users you are participating with in the group channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:25
msgid "List[:class:`User`]"
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:35
msgid "The group channel ID."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:41
msgid "The user that owns the group channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:47
msgid "The owner ID that owns the group channel."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel:55
msgid "The group channel's name if provided."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.GroupChannel.icon:1
msgid "Returns the channel's icon asset if available."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:12
msgid "This also checks the kick_members permission if the user is the owner."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:14
msgid "The user to check permissions for."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.permissions_for:17
msgid "The resolved permissions for the user."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.leave:3
msgid "Leave the group."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.leave:5
msgid "If you are the only one in the group, this deletes it as well."
msgstr ""

#: ../../../discord/channel.py:docstring of discord.channel.GroupChannel.leave:7
msgid "Leaving the group failed."
msgstr ""

#: ../../api.rst:3870
msgid "PartialInviteGuild"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:1
msgid "Represents a \"partial\" invite guild."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:3
#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:3
msgid "This model will be given when the user is not part of the guild the :class:`Invite` resolves to."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:10
msgid "Checks if two partial guilds are the same."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:14
msgid "Checks if two partial guilds are not the same."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:18
msgid "Return the partial guild's hash."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:22
msgid "Returns the partial guild's name."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:26
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:15
msgid "The partial guild's name."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:32
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:9
msgid "The partial guild's ID."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:38
msgid "The partial guild's verification level."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:44
msgid "A list of features the guild has. See :attr:`Guild.features` for more information."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteGuild:50
msgid "The partial guild's description."
msgstr ""

#: ../../api.rst:3878
msgid "PartialInviteChannel"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:1
msgid "Represents a \"partial\" invite channel."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:10
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:7
msgid "Checks if two partial channels are the same."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:14
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:11
msgid "Checks if two partial channels are not the same."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:18
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:15
msgid "Return the partial channel's hash."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:22
#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:19
msgid "Returns the partial channel's name."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:26
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:15
msgid "The partial channel's name."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:32
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:9
msgid "The partial channel's ID."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.PartialInviteChannel:38
msgid "The partial channel's type."
msgstr ""

#: ../../api.rst:3886
msgid "Invite"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:1
msgid "Represents a Discord :class:`Guild` or :class:`abc.GuildChannel` invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:10
msgid "Checks if two invites are equal."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:14
msgid "Checks if two invites are not equal."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:18
msgid "Returns the invite hash."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:22
msgid "Returns the invite URL."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:24
msgid "The following table illustrates what methods will obtain the attributes:"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:27
msgid "Attribute"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:27
msgid "Method"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:29
msgid ":attr:`max_age`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:29
#: ../../../discord/invite.py:docstring of discord.invite.Invite:31
#: ../../../discord/invite.py:docstring of discord.invite.Invite:33
#: ../../../discord/invite.py:docstring of discord.invite.Invite:35
#: ../../../discord/invite.py:docstring of discord.invite.Invite:37
msgid ":meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:31
msgid ":attr:`max_uses`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:33
msgid ":attr:`created_at`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:35
msgid ":attr:`temporary`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:37
msgid ":attr:`uses`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:39
msgid ":attr:`approximate_member_count`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:39
#: ../../../discord/invite.py:docstring of discord.invite.Invite:41
msgid ":meth:`Client.fetch_invite` with `with_counts` enabled"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:41
msgid ":attr:`approximate_presence_count`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:43
msgid ":attr:`expires_at`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:43
msgid ":meth:`Client.fetch_invite` with `with_expiration` enabled"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:46
msgid "If it's not in the table above then it is available by all methods."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:50
msgid "How long before the invite expires in seconds. A value of ``0`` indicates that it doesn't expire."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:57
msgid "The URL fragment used for the invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:63
msgid "The guild the invite is for. Can be ``None`` if it's from a group direct message."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:65
msgid "Optional[Union[:class:`Guild`, :class:`Object`, :class:`PartialInviteGuild`]]"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:69
msgid "Indicates if the invite has been revoked."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:75
msgid "An aware UTC datetime object denoting the time the invite was created."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:81
msgid "Indicates that the invite grants temporary membership. If ``True``, members who joined via this invite will be kicked upon disconnect."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:88
msgid "How many times the invite has been used."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:94
msgid "How many times the invite can be used. A value of ``0`` indicates that it has unlimited uses."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:107
msgid "The approximate number of members in the guild."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:113
msgid "The approximate number of members currently active in the guild. This includes idle, dnd, online, and invisible members. Offline members are excluded."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:120
msgid "The expiration date of the invite. If the value is ``None`` when received through `Client.fetch_invite` with `with_expiration` enabled, the invite will never expire."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:129
msgid "The channel the invite is for."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:131
msgid "Union[:class:`abc.GuildChannel`, :class:`Object`, :class:`PartialInviteChannel`]"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:135
msgid "The type of target for the voice channel invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:139
msgid ":class:`InviteTarget`"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:143
msgid "The user whose stream to display for this invite, if any."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:151
msgid "The embedded application the invite targets, if any."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite:155
msgid "Optional[:class:`PartialAppInfo`]"
msgstr ""

#: ../../../discord/invite.py:docstring of discord.Invite.id:1
msgid "Returns the proper code portion of the invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.Invite.url:1
msgid "A property that retrieves the invite URL."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.Invite.friend_invite:1
msgid "Check if the Invite is friend invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:3
msgid "Revokes the instant invite."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:5
msgid "You must have the :attr:`~Permissions.manage_channels` permission to do this."
msgstr ""

#: ../../../discord/invite.py:docstring of discord.invite.Invite.delete:7
msgid "The reason for deleting this invite. Shows up on the audit log."
msgstr ""

#: ../../api.rst:3894
msgid "Template"
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:1
msgid "Represents a Discord template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:13
msgid "How many times the template has been used."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:31
msgid "The creator of the template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:37
msgid "An aware datetime in UTC representing when the template was created."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:43
msgid "An aware datetime in UTC representing when the template was last updated. This is referred to as \"last synced\" in the official Discord client."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:50
msgid "The source guild."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template:56
msgid "Whether the template has unsynced changes."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.create_guild:3
msgid "Creates a :class:`.Guild` using the template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:3
msgid "Sync the template to the guild's current state."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:5
#: ../../../discord/template.py:docstring of discord.template.Template.edit:5
#: ../../../discord/template.py:docstring of discord.template.Template.delete:5
msgid "You must have the :attr:`~Permissions.manage_guild` permission in the source guild to do this."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:10
#: ../../../discord/template.py:docstring of discord.template.Template.edit:10
msgid "The template is no longer edited in-place, instead it is returned."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:13
#: ../../../discord/template.py:docstring of discord.template.Template.edit:18
#: ../../../discord/template.py:docstring of discord.template.Template.delete:10
msgid "Editing the template failed."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:14
#: ../../../discord/template.py:docstring of discord.template.Template.edit:19
#: ../../../discord/template.py:docstring of discord.template.Template.delete:11
msgid "You don't have permissions to edit the template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:15
#: ../../../discord/template.py:docstring of discord.template.Template.edit:20
#: ../../../discord/template.py:docstring of discord.template.Template.delete:12
msgid "This template does not exist."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:17
#: ../../../discord/template.py:docstring of discord.template.Template.edit:22
msgid "The newly edited template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.sync:18
#: ../../../discord/template.py:docstring of discord.template.Template.edit:23
msgid ":class:`Template`"
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.edit:3
msgid "Edit the template metadata."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.edit:13
msgid "The template's new name."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.edit:15
msgid "The template's new description."
msgstr ""

#: ../../../discord/template.py:docstring of discord.template.Template.delete:3
msgid "Delete the template."
msgstr ""

#: ../../../discord/template.py:docstring of discord.Template.url:1
msgid "The template url."
msgstr ""

#: ../../api.rst:3902
msgid "WidgetChannel"
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:1
msgid "Represents a \"partial\" widget channel."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:23
msgid "The channel's ID."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetChannel:35
msgid "The channel's position"
msgstr ""

#: ../../api.rst:3910
msgid "WidgetMember"
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:1
msgid "Represents a \"partial\" member of the widget's guild."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:7
msgid "Checks if two widget members are the same."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:11
msgid "Checks if two widget members are not the same."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:15
msgid "Return the widget member's hash."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:19
msgid "Returns the widget member's `name#discriminator`."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:23
msgid "The member's ID."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:29
msgid "The member's username."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:35
msgid "The member's discriminator."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:41
msgid "Whether the member is a bot."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:47
msgid "The member's status."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:53
msgid "The member's nickname."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:59
msgid "The member's avatar hash."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:65
msgid "The member's activity."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:71
msgid "Whether the member is currently deafened."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:77
msgid "Whether the member is currently muted."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:83
msgid "Whether the member is currently being suppressed."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:89
msgid "Which channel the member is connected to."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.WidgetMember:91
msgid "Optional[:class:`WidgetChannel`]"
msgstr ""

#: ../../../discord/widget.py:docstring of discord.WidgetMember.display_name:1
msgid "Returns the member's display name."
msgstr ""

#: ../../api.rst:3919
msgid "Widget"
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:1
msgid "Represents a :class:`Guild` widget."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:7
msgid "Checks if two widgets are the same."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:11
msgid "Checks if two widgets are not the same."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:15
msgid "Returns the widget's JSON URL."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:25
msgid "The guild's name."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:31
msgid "The accessible voice channels in the guild."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:33
msgid "List[:class:`WidgetChannel`]"
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:37
msgid "The online members in the server. Offline members do not appear in the widget."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget:42
msgid "Due to a Discord limitation, if this data is available the users will be \"anonymized\" with linear IDs and discriminator information being incorrect. Likewise, the number of members retrieved is capped."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.Widget.created_at:1
msgid "Returns the member's creation time in UTC."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.Widget.json_url:1
msgid "The JSON URL of the widget."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.Widget.invite_url:1
msgid "The invite URL for the guild, if available."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:3
msgid "Retrieves an :class:`Invite` from the widget's invite URL. This is the same as :meth:`Client.fetch_invite`; the invite code is abstracted away."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:7
msgid "Whether to include count information in the invite. This fills the :attr:`Invite.approximate_member_count` and :attr:`Invite.approximate_presence_count` fields."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:12
msgid "The invite from the widget's invite URL."
msgstr ""

#: ../../../discord/widget.py:docstring of discord.widget.Widget.fetch_invite:13
msgid ":class:`Invite`"
msgstr ""

#: ../../api.rst:3927
msgid "StickerPack"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:1
msgid "Represents a sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:9
msgid "Returns the name of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:13
msgid "Checks if the sticker pack is equal to another sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:17
msgid "Checks if the sticker pack is not equal to another sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:21
msgid "The name of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:27
msgid "The description of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:33
msgid "The id of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:39
msgid "The stickers of this sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:41
msgid "List[:class:`StandardSticker`]"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:45
msgid "The SKU ID of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:51
msgid "The ID of the sticker used for the cover of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:57
msgid "The sticker used for the cover of the sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerPack:59
msgid ":class:`StandardSticker`"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.StickerPack.banner:1
msgid "The banner asset of the sticker pack."
msgstr ""

#: ../../api.rst:3935
msgid "StickerItem"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:1
msgid "Represents a sticker item."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:9
msgid "Returns the name of the sticker item."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:13
msgid "Checks if the sticker item is equal to another sticker item."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:17
msgid "Checks if the sticker item is not equal to another sticker item."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:21
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:21
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:21
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:21
msgid "The sticker's name."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:27
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:27
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:27
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:27
msgid "The id of the sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:33
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:45
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:45
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:39
msgid "The format for the sticker's image."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem:39
#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:51
msgid "The URL for the sticker's image."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:3
msgid "Attempts to retrieve the full sticker data of the sticker item."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StickerItem.fetch:8
msgid "Union[:class:`StandardSticker`, :class:`GuildSticker`]"
msgstr ""

#: ../../api.rst:3943
msgid "Sticker"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:1
msgid "Represents a sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:9
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:9
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:9
msgid "Returns the name of the sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:13
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:13
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:13
msgid "Checks if the sticker is equal to another sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:17
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:17
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:17
msgid "Checks if the sticker is not equal to another sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:33
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:33
#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:33
msgid "The description of the sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.Sticker:39
#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:39
msgid "The id of the sticker's pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.Sticker.created_at:1
msgid "Returns the sticker's creation time in UTC."
msgstr ""

#: ../../api.rst:3951
msgid "StandardSticker"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:1
msgid "Represents a sticker that is found in a standard sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:51
msgid "A list of tags for the sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker:57
msgid "The sticker's sort order within its pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:3
msgid "Retrieves the sticker pack that this sticker belongs to."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:5
msgid "The corresponding sticker pack was not found."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:6
msgid "Retrieving the sticker pack failed."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:8
msgid "The retrieved sticker pack."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.StandardSticker.pack:9
msgid ":class:`StickerPack`"
msgstr ""

#: ../../api.rst:3959
msgid "GuildSticker"
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:1
msgid "Represents a sticker that belongs to a guild."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:45
msgid "Whether this sticker is available for use."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:51
msgid "The ID of the guild that this sticker is from."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:57
msgid "The user that created this sticker. This can only be retrieved using :meth:`Guild.fetch_sticker` and having the :attr:`~Permissions.manage_emojis_and_stickers` permission."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker:64
msgid "The name of a unicode emoji that represents this sticker."
msgstr ""

#: ../../docstring of discord.GuildSticker.guild:1
msgid "The guild that this sticker is from. Could be ``None`` if the bot is not in the guild."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:3
msgid "Edits a :class:`GuildSticker` for the guild."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:5
msgid "The sticker's new name. Must be at least 2 characters."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:7
msgid "The sticker's new description. Can be ``None``."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:11
msgid "The reason for editing this sticker. Shows up on the audit log."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:14
msgid "You are not allowed to edit stickers."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:15
msgid "An error occurred editing the sticker."
msgstr ""

#: ../../../discord/sticker.py:docstring of discord.sticker.GuildSticker.edit:17
msgid "The newly modified sticker."
msgstr ""

#: ../../api.rst:3967
msgid "RawMessageDeleteEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:1
msgid "Represents the event payload for a :func:`on_raw_message_delete` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:5
msgid "The channel ID where the deletion took place."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:11
msgid "The guild ID where the deletion took place, if applicable."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:17
msgid "The message ID that got deleted."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageDeleteEvent:23
#: ../../../discord/message.py:docstring of discord.MessageReference.cached_message:1
msgid "The cached message, if found in the internal message cache."
msgstr ""

#: ../../api.rst:3975
msgid "RawBulkMessageDeleteEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:1
msgid "Represents the event payload for a :func:`on_raw_bulk_message_delete` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:5
msgid "A :class:`set` of the message IDs that were deleted."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:7
msgid "Set[:class:`int`]"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:11
msgid "The channel ID where the message got deleted."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:17
msgid "The guild ID where the message got deleted, if applicable."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:23
msgid "The cached messages, if found in the internal message cache."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawBulkMessageDeleteEvent:25
msgid "List[:class:`Message`]"
msgstr ""

#: ../../api.rst:3983
msgid "RawMessageUpdateEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:1
msgid "Represents the payload for a :func:`on_raw_message_edit` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:5
msgid "The message ID that got updated."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:11
msgid "The channel ID where the update took place."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:19
msgid "The guild ID where the message got updated, if applicable."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:27
msgid "The raw data given by the `gateway <https://discord.com/developers/docs/topics/gateway#message-update>`_"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawMessageUpdateEvent:33
msgid "The cached message, if found in the internal message cache. Represents the message before it is modified by the data in :attr:`RawMessageUpdateEvent.data`."
msgstr ""

#: ../../api.rst:3991
msgid "RawReactionActionEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:1
msgid "Represents the payload for a :func:`on_raw_reaction_add` or :func:`on_raw_reaction_remove` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:6
msgid "The message ID that got or lost a reaction."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:12
msgid "The user ID who added the reaction or whose reaction was removed."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:18
msgid "The channel ID where the reaction got added or removed."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:24
msgid "The guild ID where the reaction got added or removed, if applicable."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:30
msgid "The custom or unicode emoji being used."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:36
msgid "The member who added the reaction. Only available if `event_type` is `REACTION_ADD` and the reaction is inside a guild."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionActionEvent:45
msgid "The event type that triggered this action. Can be ``REACTION_ADD`` for reaction addition or ``REACTION_REMOVE`` for reaction removal."
msgstr ""

#: ../../api.rst:3999
msgid "RawReactionClearEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:1
msgid "Represents the payload for a :func:`on_raw_reaction_clear` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:5
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:7
msgid "The message ID that got its reactions cleared."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:11
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:13
msgid "The channel ID where the reactions got cleared."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEvent:17
#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:19
msgid "The guild ID where the reactions got cleared."
msgstr ""

#: ../../api.rst:4007
msgid "RawReactionClearEmojiEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:1
msgid "Represents the payload for a :func:`on_raw_reaction_clear_emoji` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawReactionClearEmojiEvent:25
msgid "The custom or unicode emoji being removed."
msgstr ""

#: ../../api.rst:4015
msgid "RawIntegrationDeleteEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:1
msgid "Represents the payload for a :func:`on_raw_integration_delete` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:7
msgid "The ID of the integration that got deleted."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:13
msgid "The ID of the bot/OAuth2 application for this deleted integration."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawIntegrationDeleteEvent:19
msgid "The guild ID where the integration got deleted."
msgstr ""

#: ../../api.rst:4023
msgid "RawThreadDeleteEvent"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:1
msgid "Represents the payload for a :func:`on_raw_thread_delete` event."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:7
msgid "The ID of the thread that got deleted."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:13
msgid "The channel type of the deleted thread."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:15
msgid ":class:`.ChannelType`"
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:19
msgid "The ID of the guild the thread was deleted in."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:25
msgid "The ID of the channel the thread belonged to."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:31
msgid "The thread, if it could be found in the internal cache."
msgstr ""

#: ../../../discord/raw_models.py:docstring of discord.raw_models.RawThreadDeleteEvent:33
msgid "Optional[:class:`.Thread`]"
msgstr ""

#: ../../api.rst:4031
msgid "PartialWebhookGuild"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:1
msgid "Represents a partial guild for webhooks."
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookGuild:3
#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:3
msgid "These are typically given for channel follower webhooks."
msgstr ""

#: ../../api.rst:4039
msgid "PartialWebhookChannel"
msgstr ""

#: ../../../discord/webhook/async_.py:docstring of discord.webhook.async_.PartialWebhookChannel:1
msgid "Represents a partial channel for webhooks."
msgstr ""

#: ../../api.rst:4049
msgid "Data Classes"
msgstr ""

#: ../../api.rst:4051
msgid "Some classes are just there to be data containers, this lists them."
msgstr ""

#: ../../api.rst:4053
msgid "Unlike :ref:`models <discord_api_models>` you are allowed to create most of these yourself, even if they can also be used to hold attributes."
msgstr ""

#: ../../api.rst:4059
msgid "The only exception to this rule is :class:`Object`, which is made with dynamic attributes in mind."
msgstr ""

#: ../../api.rst:4064
msgid "Object"
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:1
msgid "Represents a generic Discord object."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:3
msgid "The purpose of this class is to allow you to create 'miniature' versions of data classes if you want to pass in just an ID. Most functions that take in a specific data class with an ID can also take in this class as a substitute instead. Note that even though this is the case, not all objects (if any) actually inherit from this class."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:9
msgid "There are also some cases where some websocket events are received in :issue:`strange order <21>` and when such events happened you would receive this class rather than the actual data class. These cases are extremely rare."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:18
msgid "Checks if two objects are equal."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:22
msgid "Checks if two objects are not equal."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:26
msgid "Returns the object's hash."
msgstr ""

#: ../../../discord/object.py:docstring of discord.object.Object:30
msgid "The ID of the object."
msgstr ""

#: ../../../discord/object.py:docstring of discord.Object.created_at:1
msgid "Returns the snowflake's creation time in UTC."
msgstr ""

#: ../../api.rst:4072
msgid "Embed"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:1
msgid "Represents a Discord embed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:7
msgid "Returns the total size of the embed. Useful for checking if it's within the 6000 character limit."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:12
msgid "Returns whether the embed has any data set."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:16
msgid "Certain properties return an ``EmbedProxy``, a type that acts similar to a regular :class:`dict` except using dotted access, e.g. ``embed.author.icon_url``. If the attribute is invalid or empty, then a special sentinel value is returned, :attr:`Embed.Empty`."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:22
msgid "For ease of use, all parameters that expect a :class:`str` are implicitly casted to :class:`str` for you."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:27
msgid "The title of the embed. This can be set during initialisation."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:34
msgid "The type of embed. Usually \"rich\". This can be set during initialisation. Possible strings for embed types can be found on discord's `api docs <https://discord.com/developers/docs/resources/channel#embed-object-embed-types>`_"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:43
msgid "The description of the embed. This can be set during initialisation."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:50
msgid "The URL of the embed. This can be set during initialisation."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:57
msgid "The timestamp of the embed content. This is an aware datetime. If a naive datetime is passed, it is converted to an aware datetime with the local timezone."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:65
msgid "The colour code of the embed. Aliased to ``color`` as well. This can be set during initialisation."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:68
msgid "Union[:class:`Colour`, :class:`int`]"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:72
msgid "A special sentinel value used by ``EmbedProxy`` and this class to denote that the value or attribute is empty."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed:75
msgid "Final"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.from_dict:1
msgid "Converts a :class:`dict` to a :class:`Embed` provided it is in the format that Discord expects it to be in."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.from_dict:4
msgid "You can find out about this format in the `official Discord documentation`__."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.from_dict:10
msgid "The dictionary to convert into an embed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.copy:1
msgid "Returns a shallow copy of the embed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.footer:1
msgid "Returns an ``EmbedProxy`` denoting the footer contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.footer:3
msgid "See :meth:`set_footer` for possible values you can access."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.footer:5
#: ../../../discord/embeds.py:docstring of discord.Embed.image:10
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:10
#: ../../../discord/embeds.py:docstring of discord.Embed.video:9
#: ../../../discord/embeds.py:docstring of discord.Embed.provider:5
#: ../../../discord/embeds.py:docstring of discord.Embed.author:5
#: ../../../discord/embeds.py:docstring of discord.Embed.fields:5
msgid "If the attribute has no value then :attr:`Empty` is returned."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_footer:1
msgid "Sets the footer for the embed content."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_footer:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_footer:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_image:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_thumbnail:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_author:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:3
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:5
msgid "This function returns the class instance to allow for fluent-style chaining."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_footer:6
msgid "The footer text."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_footer:8
msgid "The URL of the footer icon. Only HTTP(S) is supported."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_footer:1
msgid "Clears embed's footer information."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:1
msgid "Returns an ``EmbedProxy`` denoting the image contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:3
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:3
msgid "Possible attributes you can access are:"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:5
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:5
msgid "``url``"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:6
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:6
msgid "``proxy_url``"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:7
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:7
msgid "``width``"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.image:8
#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:8
msgid "``height``"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_image:1
msgid "Sets the image for the embed content."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_image:6
msgid "Passing :attr:`Empty` removes the image."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_image:9
msgid "The source URL for the image. Only HTTP(S) is supported."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.thumbnail:1
msgid "Returns an ``EmbedProxy`` denoting the thumbnail contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_thumbnail:1
msgid "Sets the thumbnail for the embed content."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_thumbnail:6
msgid "Passing :attr:`Empty` removes the thumbnail."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_thumbnail:9
msgid "The source URL for the thumbnail. Only HTTP(S) is supported."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.video:1
msgid "Returns an ``EmbedProxy`` denoting the video contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.video:3
msgid "Possible attributes include:"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.video:5
msgid "``url`` for the video URL."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.video:6
msgid "``height`` for the video height."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.video:7
msgid "``width`` for the video width."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.provider:1
msgid "Returns an ``EmbedProxy`` denoting the provider contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.provider:3
msgid "The only attributes that might be accessed are ``name`` and ``url``."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.author:1
msgid "Returns an ``EmbedProxy`` denoting the author contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.author:3
msgid "See :meth:`set_author` for possible values you can access."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:1
msgid "Sets the author for the embed content."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:6
msgid "The name of the author."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:8
msgid "The URL for the author."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_author:10
msgid "The URL of the author icon. Only HTTP(S) is supported."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_author:1
msgid "Clears embed's author information."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.fields:1
msgid "Returns a :class:`list` of ``EmbedProxy`` denoting the field contents."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.fields:3
msgid "See :meth:`add_field` for possible values you can access."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.Embed.fields:7
msgid "List[Union[``EmbedProxy``, :attr:`Empty`]]"
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:1
msgid "Adds a field to the embed object."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:6
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:10
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:10
msgid "The name of the field."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:8
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:12
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:12
msgid "The value of the field."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.add_field:10
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:14
#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:14
msgid "Whether the field should be displayed inline."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:1
msgid "Inserts a field before a specified index to the embed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.insert_field_at:8
msgid "The index of where to insert the field."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.clear_fields:1
msgid "Removes all fields from this embed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_field:1
msgid "Removes a field at a specified index."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_field:3
msgid "If the index is invalid or out of bounds then the error is silently swallowed."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_field:8
msgid "When deleting a field by index, the index of the other fields shift to fill the gap just like a regular list."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.remove_field:11
msgid "The index of the field to remove."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:1
msgid "Modifies a field to the embed object."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:3
msgid "The index must point to a valid pre-existing field."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:8
msgid "The index of the field to modify."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.set_field_at:17
msgid "An invalid index was provided."
msgstr ""

#: ../../../discord/embeds.py:docstring of discord.embeds.Embed.to_dict:1
msgid "Converts this embed object into a dict."
msgstr ""

#: ../../api.rst:4080
msgid "AllowedMentions"
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:1
msgid "A class that represents what mentions are allowed in a message."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:3
msgid "This class can be set during :class:`Client` initialisation to apply to every message sent. It can also be applied on a per message basis via :meth:`abc.Messageable.send` for more fine-grained control."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:9
msgid "Whether to allow everyone and here mentions. Defaults to ``True``."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:15
msgid "Controls the users being mentioned. If ``True`` (the default) then users are mentioned based on the message content. If ``False`` then users are not mentioned at all. If a list of :class:`abc.Snowflake` is given then only the users provided will be mentioned, provided those users are in the message content."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:21
#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:31
msgid "Union[:class:`bool`, List[:class:`abc.Snowflake`]]"
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:25
msgid "Controls the roles being mentioned. If ``True`` (the default) then roles are mentioned based on the message content. If ``False`` then roles are not mentioned at all. If a list of :class:`abc.Snowflake` is given then only the roles provided will be mentioned, provided those roles are in the message content."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions:35
msgid "Whether to mention the author of the message being replied to. Defaults to ``True``."
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions.all:1
msgid "A factory method that returns a :class:`AllowedMentions` with all fields explicitly set to ``True``"
msgstr ""

#: ../../../discord/mentions.py:docstring of discord.mentions.AllowedMentions.none:1
msgid "A factory method that returns a :class:`AllowedMentions` with all fields set to ``False``"
msgstr ""

#: ../../api.rst:4088
msgid "MessageReference"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:1
msgid "Represents a reference to a :class:`~discord.Message`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:5
msgid "This class can now be constructed by users."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:10
msgid "The id of the message referenced."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:16
msgid "The channel id of the message referenced."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:22
msgid "The guild id of the message referenced."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:28
#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:7
msgid "Whether replying to the referenced message should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:37
msgid "The message that this reference resolved to. If this is ``None`` then the original message was not fetched either due to the Discord API not attempting to resolve it or it not being available at the time of creation. If the message was resolved at a prior point but has since been deleted then this will be of type :class:`DeletedReferencedMessage`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:43
msgid "Currently, this is mainly the replied to message when a user replies to a message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference:47
msgid "Optional[Union[:class:`Message`, :class:`DeletedReferencedMessage`]]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:1
msgid "Creates a :class:`MessageReference` from an existing :class:`~discord.Message`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:5
msgid "The message to be converted into a reference."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:7
msgid "Whether replying to the referenced message should raise :class:`HTTPException` if the message no longer exists or Discord could not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:13
msgid "A reference to the message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.MessageReference.from_message:14
msgid ":class:`MessageReference`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.MessageReference.cached_message:3
msgid "Optional[:class:`~discord.Message`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.MessageReference.jump_url:1
msgid "Returns a URL that allows the client to jump to the referenced message."
msgstr ""

#: ../../api.rst:4096
msgid "PartialMessage"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:1
msgid "Represents a partial message to aid with working messages when only a message and channel ID are present."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:4
msgid "There are two ways to construct this class. The first one is through the constructor itself, and the second is via the following:"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:7
msgid ":meth:`TextChannel.get_partial_message`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:8
msgid ":meth:`Thread.get_partial_message`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:9
msgid ":meth:`DMChannel.get_partial_message`"
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:19
msgid "Checks if two partial messages are equal."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:23
msgid "Checks if two partial messages are not equal."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:27
msgid "Returns the partial message's hash."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:31
msgid "The channel associated with this partial message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage:33
msgid "Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`]"
msgstr ""

#: ../../../discord/message.py:docstring of discord.PartialMessage.created_at:1
msgid "The partial message's creation time in UTC."
msgstr ""

#: ../../docstring of discord.PartialMessage.guild:1
msgid "The guild that the partial message belongs to, if applicable."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:3
msgid "Fetches the partial message to a full :class:`Message`."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:5
#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:38
msgid "The message was not found."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage.fetch:9
msgid "The full message."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:7
msgid ":class:`discord.Message` is returned instead of ``None`` if an edit took place."
msgstr ""

#: ../../../discord/message.py:docstring of discord.message.PartialMessage.edit:42
msgid "The message that was edited."
msgstr ""

#: ../../api.rst:4104
msgid "SelectOption"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:1
msgid "Represents a select menu's option."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:3
msgid "These can be created by users."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:9
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:6
msgid "The label of the option. This is displayed to users. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:16
msgid "The value of the option. This is not displayed to users. If not provided when constructed then it defaults to the label. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:24
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:12
msgid "An additional description of the option, if any. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:31
msgid "The emoji of the option, if available."
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:33
msgid "Optional[Union[:class:`str`, :class:`Emoji`, :class:`PartialEmoji`]]"
msgstr ""

#: ../../../discord/components.py:docstring of discord.components.SelectOption:37
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:18
msgid "Whether this option is selected by default."
msgstr ""

#: ../../api.rst:4112
msgid "Intents"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:1
msgid "Wraps up a Discord gateway intent flag."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:3
msgid "Similar to :class:`Permissions`\\, the properties provided are two way. You can set and retrieve individual bits using the properties as if they were regular bools."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:7
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:12
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:7
msgid "To construct an object you can pass keyword arguments denoting the flags to enable or disable."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:10
msgid "This is used to disable certain gateway features that are unnecessary to run your bot. To make use of this, it is passed to the ``intents`` keyword argument of :class:`Client`."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:20
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:23
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:14
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:9
msgid "Checks if two flags are equal."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:23
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:26
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:17
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:12
msgid "Checks if two flags are not equal."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:26
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:29
#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:13
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:20
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:15
#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:13
msgid "Return the flag's hash."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:29
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:32
#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:23
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:18
msgid "Returns an iterator of ``(name, value)`` pairs. This allows it to be, for example, constructed as a dict or a list of pairs."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents:34
#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:37
#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:24
msgid "The raw value. You should query flags via the properties rather than using this raw value."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents.all:1
msgid "A factory method that creates a :class:`Intents` with everything enabled."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents.none:1
msgid "A factory method that creates a :class:`Intents` with everything disabled."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.Intents.default:1
msgid "A factory method that creates a :class:`Intents` with everything enabled except :attr:`presences` and :attr:`members`."
msgstr ""

#: ../../docstring of discord.Intents.guilds:1
msgid "Whether guild related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.guilds:3
#: ../../docstring of discord.Intents.members:3
#: ../../docstring of discord.Intents.bans:3
#: ../../docstring of discord.Intents.emojis_and_stickers:5
#: ../../docstring of discord.Intents.integrations:3
#: ../../docstring of discord.Intents.webhooks:3
#: ../../docstring of discord.Intents.invites:3
#: ../../docstring of discord.Intents.voice_states:3
#: ../../docstring of discord.Intents.presences:3
#: ../../docstring of discord.Intents.messages:5
#: ../../docstring of discord.Intents.guild_messages:5
#: ../../docstring of discord.Intents.dm_messages:5
#: ../../docstring of discord.Intents.reactions:5
#: ../../docstring of discord.Intents.guild_reactions:5
#: ../../docstring of discord.Intents.dm_reactions:5
#: ../../docstring of discord.Intents.typing:5
#: ../../docstring of discord.Intents.guild_typing:5
#: ../../docstring of discord.Intents.dm_typing:5
msgid "This corresponds to the following events:"
msgstr ""

#: ../../docstring of discord.Intents.guilds:5
msgid ":func:`on_guild_join`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:6
msgid ":func:`on_guild_remove`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:7
msgid ":func:`on_guild_available`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:8
msgid ":func:`on_guild_unavailable`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:9
msgid ":func:`on_guild_channel_update`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:10
msgid ":func:`on_guild_channel_create`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:11
msgid ":func:`on_guild_channel_delete`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:12
msgid ":func:`on_guild_channel_pins_update`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:14
#: ../../docstring of discord.Intents.members:10
#: ../../docstring of discord.Intents.emojis_and_stickers:10
#: ../../docstring of discord.Intents.voice_states:7
#: ../../docstring of discord.Intents.presences:7
#: ../../docstring of discord.Intents.messages:13
#: ../../docstring of discord.Intents.guild_messages:13
#: ../../docstring of discord.Intents.dm_messages:13
#: ../../docstring of discord.Intents.reactions:14
#: ../../docstring of discord.Intents.guild_reactions:14
#: ../../docstring of discord.Intents.dm_reactions:14
msgid "This also corresponds to the following attributes and classes in terms of cache:"
msgstr ""

#: ../../docstring of discord.Intents.guilds:16
msgid ":attr:`Client.guilds`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:17
msgid ":class:`Guild` and all its attributes."
msgstr ""

#: ../../docstring of discord.Intents.guilds:18
msgid ":meth:`Client.get_channel`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:19
msgid ":meth:`Client.get_all_channels`"
msgstr ""

#: ../../docstring of discord.Intents.guilds:21
msgid "It is highly advisable to leave this intent enabled for your bot to function."
msgstr ""

#: ../../docstring of discord.Intents.members:1
msgid "Whether guild member related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.members:5
msgid ":func:`on_member_join`"
msgstr ""

#: ../../docstring of discord.Intents.members:6
msgid ":func:`on_member_remove`"
msgstr ""

#: ../../docstring of discord.Intents.members:7
msgid ":func:`on_member_update`"
msgstr ""

#: ../../docstring of discord.Intents.members:8
msgid ":func:`on_user_update`"
msgstr ""

#: ../../docstring of discord.Intents.members:12
msgid ":meth:`Client.get_all_members`"
msgstr ""

#: ../../docstring of discord.Intents.members:13
msgid ":meth:`Client.get_user`"
msgstr ""

#: ../../docstring of discord.Intents.members:14
msgid ":meth:`Guild.chunk`"
msgstr ""

#: ../../docstring of discord.Intents.members:15
msgid ":meth:`Guild.fetch_members`"
msgstr ""

#: ../../docstring of discord.Intents.members:16
msgid ":meth:`Guild.get_member`"
msgstr ""

#: ../../docstring of discord.Intents.members:17
msgid ":attr:`Guild.members`"
msgstr ""

#: ../../docstring of discord.Intents.members:18
msgid ":attr:`Member.roles`"
msgstr ""

#: ../../docstring of discord.Intents.members:19
msgid ":attr:`Member.nick`"
msgstr ""

#: ../../docstring of discord.Intents.members:20
msgid ":attr:`Member.premium_since`"
msgstr ""

#: ../../docstring of discord.Intents.members:21
msgid ":attr:`User.name`"
msgstr ""

#: ../../docstring of discord.Intents.members:22
msgid ":attr:`User.avatar`"
msgstr ""

#: ../../docstring of discord.Intents.members:23
msgid ":attr:`User.discriminator`"
msgstr ""

#: ../../docstring of discord.Intents.members:25
msgid "For more information go to the :ref:`member intent documentation <need_members_intent>`."
msgstr ""

#: ../../docstring of discord.Intents.members:29
#: ../../docstring of discord.Intents.presences:17
msgid "Currently, this requires opting in explicitly via the developer portal as well. Bots in over 100 guilds will need to apply to Discord for verification."
msgstr ""

#: ../../docstring of discord.Intents.bans:1
msgid "Whether guild ban related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.bans:5
msgid ":func:`on_member_ban`"
msgstr ""

#: ../../docstring of discord.Intents.bans:6
msgid ":func:`on_member_unban`"
msgstr ""

#: ../../docstring of discord.Intents.bans:8
#: ../../docstring of discord.Intents.integrations:10
#: ../../docstring of discord.Intents.webhooks:7
#: ../../docstring of discord.Intents.invites:8
#: ../../docstring of discord.Intents.typing:9
#: ../../docstring of discord.Intents.guild_typing:9
#: ../../docstring of discord.Intents.dm_typing:9
msgid "This does not correspond to any attributes or classes in the library in terms of cache."
msgstr ""

#: ../../docstring of discord.Intents.emojis:1
msgid "Alias of :attr:`.emojis_and_stickers`."
msgstr ""

#: ../../docstring of discord.Intents.emojis:3
msgid "Changed to an alias."
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:1
msgid "Whether guild emoji and sticker related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:7
msgid ":func:`on_guild_emojis_update`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:8
msgid ":func:`on_guild_stickers_update`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:14
msgid ":meth:`Client.get_emoji`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:15
msgid ":meth:`Client.get_sticker`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:16
msgid ":meth:`Client.emojis`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:17
msgid ":meth:`Client.stickers`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:18
msgid ":attr:`Guild.emojis`"
msgstr ""

#: ../../docstring of discord.Intents.emojis_and_stickers:19
msgid ":attr:`Guild.stickers`"
msgstr ""

#: ../../docstring of discord.Intents.integrations:1
msgid "Whether guild integration related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.integrations:5
msgid ":func:`on_guild_integrations_update`"
msgstr ""

#: ../../docstring of discord.Intents.integrations:6
msgid ":func:`on_integration_create`"
msgstr ""

#: ../../docstring of discord.Intents.integrations:7
msgid ":func:`on_integration_update`"
msgstr ""

#: ../../docstring of discord.Intents.integrations:8
msgid ":func:`on_raw_integration_delete`"
msgstr ""

#: ../../docstring of discord.Intents.webhooks:1
msgid "Whether guild webhook related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.webhooks:5
msgid ":func:`on_webhooks_update`"
msgstr ""

#: ../../docstring of discord.Intents.invites:1
msgid "Whether guild invite related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.invites:5
msgid ":func:`on_invite_create`"
msgstr ""

#: ../../docstring of discord.Intents.invites:6
msgid ":func:`on_invite_delete`"
msgstr ""

#: ../../docstring of discord.Intents.voice_states:1
msgid "Whether guild voice state related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.voice_states:5
msgid ":func:`on_voice_state_update`"
msgstr ""

#: ../../docstring of discord.Intents.voice_states:9
msgid ":attr:`VoiceChannel.members`"
msgstr ""

#: ../../docstring of discord.Intents.voice_states:10
msgid ":attr:`VoiceChannel.voice_states`"
msgstr ""

#: ../../docstring of discord.Intents.voice_states:11
msgid ":attr:`Member.voice`"
msgstr ""

#: ../../docstring of discord.Intents.voice_states:15
msgid "This intent is required to connect to voice."
msgstr ""

#: ../../docstring of discord.Intents.presences:1
msgid "Whether guild presence related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.presences:5
msgid ":func:`on_presence_update`"
msgstr ""

#: ../../docstring of discord.Intents.presences:9
msgid ":attr:`Member.activities`"
msgstr ""

#: ../../docstring of discord.Intents.presences:10
msgid ":attr:`Member.status`"
msgstr ""

#: ../../docstring of discord.Intents.presences:11
msgid ":attr:`Member.raw_status`"
msgstr ""

#: ../../docstring of discord.Intents.presences:13
msgid "For more information go to the :ref:`presence intent documentation <need_presence_intent>`."
msgstr ""

#: ../../docstring of discord.Intents.messages:1
msgid "Whether guild and direct message related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.messages:3
msgid "This is a shortcut to set or get both :attr:`guild_messages` and :attr:`dm_messages`."
msgstr ""

#: ../../docstring of discord.Intents.messages:7
msgid ":func:`on_message` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:8
msgid ":func:`on_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:9
msgid ":func:`on_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:10
msgid ":func:`on_raw_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:11
msgid ":func:`on_raw_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:16
msgid ":attr:`Client.cached_messages`"
msgstr ""

#: ../../docstring of discord.Intents.messages:18
#: ../../docstring of discord.Intents.guild_messages:18
#: ../../docstring of discord.Intents.dm_messages:18
msgid "Note that due to an implicit relationship this also corresponds to the following events:"
msgstr ""

#: ../../docstring of discord.Intents.messages:20
#: ../../docstring of discord.Intents.reactions:7
msgid ":func:`on_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:21
#: ../../docstring of discord.Intents.reactions:8
msgid ":func:`on_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.messages:22
#: ../../docstring of discord.Intents.reactions:9
msgid ":func:`on_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:1
msgid "Whether guild message related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:3
msgid "See also :attr:`dm_messages` for DMs or :attr:`messages` for both."
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:7
msgid ":func:`on_message` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:8
msgid ":func:`on_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:9
msgid ":func:`on_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:10
msgid ":func:`on_raw_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:11
msgid ":func:`on_raw_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:16
msgid ":attr:`Client.cached_messages` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:20
#: ../../docstring of discord.Intents.guild_reactions:7
msgid ":func:`on_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:21
#: ../../docstring of discord.Intents.guild_reactions:8
msgid ":func:`on_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_messages:22
#: ../../docstring of discord.Intents.guild_reactions:9
msgid ":func:`on_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:1
msgid "Whether direct message related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:3
msgid "See also :attr:`guild_messages` for guilds or :attr:`messages` for both."
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:7
msgid ":func:`on_message` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:8
msgid ":func:`on_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:9
msgid ":func:`on_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:10
msgid ":func:`on_raw_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:11
msgid ":func:`on_raw_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:16
msgid ":attr:`Client.cached_messages` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:20
#: ../../docstring of discord.Intents.dm_reactions:7
msgid ":func:`on_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:21
#: ../../docstring of discord.Intents.dm_reactions:8
msgid ":func:`on_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_messages:22
#: ../../docstring of discord.Intents.dm_reactions:9
msgid ":func:`on_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.reactions:1
msgid "Whether guild and direct message reaction related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.reactions:3
msgid "This is a shortcut to set or get both :attr:`guild_reactions` and :attr:`dm_reactions`."
msgstr ""

#: ../../docstring of discord.Intents.reactions:10
msgid ":func:`on_raw_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.reactions:11
msgid ":func:`on_raw_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.reactions:12
msgid ":func:`on_raw_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.reactions:16
msgid ":attr:`Message.reactions` (both guild and DM messages)"
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:1
msgid "Whether guild message reaction related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:3
msgid "See also :attr:`dm_reactions` for DMs or :attr:`reactions` for both."
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:10
msgid ":func:`on_raw_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:11
msgid ":func:`on_raw_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:12
msgid ":func:`on_raw_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.guild_reactions:16
msgid ":attr:`Message.reactions` (only for guild messages)"
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:1
msgid "Whether direct message reaction related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:3
msgid "See also :attr:`guild_reactions` for guilds or :attr:`reactions` for both."
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:10
msgid ":func:`on_raw_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:11
msgid ":func:`on_raw_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:12
msgid ":func:`on_raw_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring of discord.Intents.dm_reactions:16
msgid ":attr:`Message.reactions` (only for DM messages)"
msgstr ""

#: ../../docstring of discord.Intents.typing:1
#: ../../docstring of discord.Intents.guild_typing:1
#: ../../docstring of discord.Intents.dm_typing:1
msgid "Whether guild and direct message typing related events are enabled."
msgstr ""

#: ../../docstring of discord.Intents.typing:3
msgid "This is a shortcut to set or get both :attr:`guild_typing` and :attr:`dm_typing`."
msgstr ""

#: ../../docstring of discord.Intents.typing:7
msgid ":func:`on_typing` (both guilds and DMs)"
msgstr ""

#: ../../docstring of discord.Intents.guild_typing:3
msgid "See also :attr:`dm_typing` for DMs or :attr:`typing` for both."
msgstr ""

#: ../../docstring of discord.Intents.guild_typing:7
msgid ":func:`on_typing` (only for guilds)"
msgstr ""

#: ../../docstring of discord.Intents.dm_typing:3
msgid "See also :attr:`guild_typing` for guilds or :attr:`typing` for both."
msgstr ""

#: ../../docstring of discord.Intents.dm_typing:7
msgid ":func:`on_typing` (only for DMs)"
msgstr ""

#: ../../api.rst:4120
msgid "MemberCacheFlags"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:1
msgid "Controls the library's cache policy when it comes to members."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:3
msgid "This allows for finer grained control over what members are cached. Note that the bot's own member is always cached. This class is passed to the ``member_cache_flags`` parameter in :class:`Client`."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:7
msgid "Due to a quirk in how Discord works, in order to ensure proper cleanup of cache resources it is recommended to have :attr:`Intents.members` enabled. Otherwise the library cannot know when a member leaves a guild and is thus unable to cleanup after itself."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags:15
msgid "The default value is all flags enabled."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.all:1
msgid "A factory method that creates a :class:`MemberCacheFlags` with everything enabled."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.none:1
msgid "A factory method that creates a :class:`MemberCacheFlags` with everything disabled."
msgstr ""

#: ../../docstring of discord.MemberCacheFlags.voice:1
msgid "Whether to cache members that are in voice."
msgstr ""

#: ../../docstring of discord.MemberCacheFlags.voice:5
msgid "Members that leave voice are no longer cached."
msgstr ""

#: ../../docstring of discord.MemberCacheFlags.joined:1
msgid "Whether to cache members that joined the guild or are chunked as part of the initial log in flow."
msgstr ""

#: ../../docstring of discord.MemberCacheFlags.joined:4
msgid "This requires :attr:`Intents.members`."
msgstr ""

#: ../../docstring of discord.MemberCacheFlags.joined:6
msgid "Members that leave the guild are no longer cached."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:1
msgid "A factory method that creates a :class:`MemberCacheFlags` based on the currently selected :class:`Intents`."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:4
msgid "The intents to select from."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:7
msgid "The resulting member cache flags."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MemberCacheFlags.from_intents:8
msgid ":class:`MemberCacheFlags`"
msgstr ""

#: ../../api.rst:4128
msgid "ApplicationFlags"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:1
msgid "Wraps up the Discord Application flags."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:7
msgid "Checks if two ApplicationFlags are equal."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:10
msgid "Checks if two ApplicationFlags are not equal."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.ApplicationFlags:16
#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:16
msgid "Returns an iterator of ``(name, value)`` pairs. This allows it to be, for example, constructed as a dict or a list of pairs. Note that aliases are not shown."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.gateway_presence:1
msgid "Returns ``True`` if the application is verified and is allowed to receive presence information over the gateway."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.gateway_presence_limited:1
msgid "Returns ``True`` if the application is allowed to receive limited presence information over the gateway."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.gateway_guild_members:1
msgid "Returns ``True`` if the application is verified and is allowed to receive guild members information over the gateway."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.gateway_guild_members_limited:1
msgid "Returns ``True`` if the application is allowed to receive limited guild members information over the gateway."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.verification_pending_guild_limit:1
msgid "Returns ``True`` if the application is currently pending verification and has hit the guild limit."
msgstr ""

#: ../../docstring of discord.ApplicationFlags.embedded:1
msgid "Returns ``True`` if the application is embedded within the Discord client."
msgstr ""

#: ../../api.rst:4136
msgid "File"
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:1
msgid "A parameter object used for :meth:`abc.Messageable.send` for sending file objects."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:6
msgid "File objects are single use and are not meant to be reused in multiple :meth:`abc.Messageable.send`\\s."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:11
msgid "A file-like object opened in binary mode and read mode or a filename representing a file in the hard drive to open."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:17
msgid "If the file-like object passed is opened via ``open`` then the modes 'rb' should be used."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:20
msgid "To pass binary data, consider usage of ``io.BytesIO``."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:22
msgid "Union[:class:`os.PathLike`, :class:`io.BufferedIOBase`]"
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:26
msgid "The filename to display when uploading to Discord. If this is not given then it defaults to ``fp.name`` or if ``fp`` is a string then the ``filename`` will default to the string given."
msgstr ""

#: ../../../discord/file.py:docstring of discord.file.File:34
msgid "Whether the attachment is a spoiler."
msgstr ""

#: ../../api.rst:4144
msgid "Colour"
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:1
msgid "Represents a Discord role colour. This class is similar to a (red, green, blue) :class:`tuple`."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:4
msgid "There is an alias for this called Color."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:10
msgid "Checks if two colours are equal."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:14
msgid "Checks if two colours are not equal."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:18
msgid "Return the colour's hash."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:22
msgid "Returns the hex format for the colour."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:26
msgid "Returns the raw colour value."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour:30
msgid "The raw integer colour value."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.Colour.r:1
msgid "Returns the red component of the colour."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.Colour.g:1
msgid "Returns the green component of the colour."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.Colour.b:1
msgid "Returns the blue component of the colour."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.to_rgb:1
msgid "Tuple[:class:`int`, :class:`int`, :class:`int`]: Returns an (r, g, b) tuple representing the colour."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.from_rgb:1
msgid "Constructs a :class:`Colour` from an RGB tuple."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.from_hsv:1
msgid "Constructs a :class:`Colour` from an HSV tuple."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.default:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.random:1
msgid "A factory method that returns a :class:`Colour` with a random hue."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.random:5
msgid "The random algorithm works by choosing a colour with a random hue but with maxed out saturation and value."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.random:10
msgid "The seed to initialize the RNG with. If ``None`` is passed the default RNG is used.  .. versionadded:: 1.7"
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.random:10
msgid "The seed to initialize the RNG with. If ``None`` is passed the default RNG is used."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.teal:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x1abc9c``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_teal:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x11806a``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.brand_green:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x57F287``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.green:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x2ecc71``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_green:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x1f8b4c``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.blue:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x3498db``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_blue:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x206694``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.purple:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x9b59b6``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_purple:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x71368a``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.magenta:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xe91e63``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_magenta:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xad1457``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.gold:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xf1c40f``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_gold:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xc27c0e``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.orange:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xe67e22``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_orange:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xa84300``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.brand_red:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xED4245``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.red:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xe74c3c``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_red:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x992d22``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.lighter_grey:1
#: ../../../discord/colour.py:docstring of discord.colour.Colour.lighter_grey:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x95a5a6``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_grey:1
#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_grey:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x607d8b``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.light_grey:1
#: ../../../discord/colour.py:docstring of discord.colour.Colour.light_grey:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x979c9f``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.darker_grey:1
#: ../../../discord/colour.py:docstring of discord.colour.Colour.darker_grey:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x546e7a``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.og_blurple:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x7289da``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.blurple:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x5865F2``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.greyple:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x99aab5``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.dark_theme:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0x36393F``. This will appear transparent on Discord's dark theme."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.fuchsia:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xEB459E``."
msgstr ""

#: ../../../discord/colour.py:docstring of discord.colour.Colour.yellow:1
msgid "A factory method that returns a :class:`Colour` with a value of ``0xFEE75C``."
msgstr ""

#: ../../api.rst:4152
msgid "BaseActivity"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:1
msgid "The base activity that all user-settable activities inherit from. A user-settable activity is one that can be used in :meth:`Client.change_presence`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:4
msgid "The following types currently count as user-settable:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:6
msgid ":class:`Activity`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:7
#: ../../../discord/activity.py:docstring of discord.activity.Activity:9
msgid ":class:`Game`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:8
#: ../../../discord/activity.py:docstring of discord.activity.Activity:10
msgid ":class:`Streaming`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:9
msgid ":class:`CustomActivity`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.BaseActivity:11
msgid "Note that although these types are considered user-settable by the library, Discord typically ignores certain combinations of activity depending on what is currently set. This behaviour may change in the future so there are no guarantees on whether Discord will actually let you set these types."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.BaseActivity.created_at:1
msgid "When the user started doing this activity in UTC."
msgstr ""

#: ../../api.rst:4160
msgid "Activity"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:1
msgid "Represents an activity in Discord."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:3
msgid "This could be an activity such as streaming, playing, listening or watching."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:6
msgid "For memory optimisation purposes, some activities are offered in slimmed down versions:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:14
msgid "The application ID of the game."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:20
msgid "The name of the activity."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:26
msgid "A stream URL that the activity could be doing."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:32
msgid "The type of activity currently being done."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:38
msgid "The user's current state. For example, \"In Game\"."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:44
msgid "The detail of the user's current activity."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:50
msgid "A dictionary of timestamps. It contains the following optional keys:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:52
msgid "``start``: Corresponds to when the user started doing the activity in milliseconds since Unix epoch."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:54
msgid "``end``: Corresponds to when the user will finish doing the activity in milliseconds since Unix epoch."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:61
msgid "A dictionary representing the images and their hover text of an activity. It contains the following optional keys:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:64
msgid "``large_image``: A string representing the ID for the large image asset."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:65
msgid "``large_text``: A string representing the text when hovering over the large image asset."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:66
msgid "``small_image``: A string representing the ID for the small image asset."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:67
msgid "``small_text``: A string representing the text when hovering over the small image asset."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:73
msgid "A dictionary representing the activity party. It contains the following optional keys:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:75
msgid "``id``: A string representing the party ID."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:76
msgid "``size``: A list of up to two integer elements denoting (current_size, maximum_size)."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:82
msgid "An list of dictionaries representing custom buttons shown in a rich presence. Each dictionary contains the following keys:"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:85
msgid "``label``: A string representing the text shown on the button."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:86
msgid "``url``: A string representing the URL opened upon clicking the button."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:90
msgid "List[:class:`dict`]"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Activity:94
msgid "The emoji that belongs to this activity."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.start:1
msgid "When the user started doing this activity in UTC, if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.end:1
msgid "When the user will stop doing this activity in UTC, if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.large_image_url:1
msgid "Returns a URL pointing to the large image asset of this activity if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.small_image_url:1
msgid "Returns a URL pointing to the small image asset of this activity if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.large_image_text:1
msgid "Returns the large image asset hover text of this activity if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Activity.small_image_text:1
msgid "Returns the small image asset hover text of this activity if applicable."
msgstr ""

#: ../../api.rst:4168
msgid "Game"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:1
msgid "A slimmed down version of :class:`Activity` that represents a Discord game."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:3
msgid "This is typically displayed via **Playing** on the official Discord client."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:9
msgid "Checks if two games are equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:13
msgid "Checks if two games are not equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:17
msgid "Returns the game's hash."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:21
msgid "Returns the game's name."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Game:23
#: ../../../discord/activity.py:docstring of discord.activity.Game:28
msgid "The game's name."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Game.type:1
#: ../../../discord/activity.py:docstring of discord.Streaming.type:1
msgid "Returns the game's type. This is for compatibility with :class:`Activity`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Game.type:3
msgid "It always returns :attr:`ActivityType.playing`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Game.start:1
msgid "When the user started playing this game in UTC, if applicable."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Game.end:1
msgid "When the user will stop playing this game in UTC, if applicable."
msgstr ""

#: ../../api.rst:4176
msgid "Streaming"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:1
msgid "A slimmed down version of :class:`Activity` that represents a Discord streaming status."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:3
msgid "This is typically displayed via **Streaming** on the official Discord client."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:9
msgid "Checks if two streams are equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:13
msgid "Checks if two streams are not equal."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:17
msgid "Returns the stream's hash."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:21
msgid "Returns the stream's name."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:25
msgid "Where the user is streaming from (ie. YouTube, Twitch)."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:33
msgid "The stream's name."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:39
msgid "An alias for :attr:`name`"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:45
msgid "The game being streamed."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:53
msgid "The stream's URL."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.Streaming:59
msgid "A dictionary comprising of similar keys than those in :attr:`Activity.assets`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Streaming.type:3
msgid "It always returns :attr:`ActivityType.streaming`."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Streaming.twitch_name:1
msgid "If provided, the twitch name of the user streaming."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.Streaming.twitch_name:3
msgid "This corresponds to the ``large_image`` key of the :attr:`Streaming.assets` dictionary if it starts with ``twitch:``. Typically set by the Discord client."
msgstr ""

#: ../../api.rst:4184
msgid "CustomActivity"
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:1
msgid "Represents a Custom activity from Discord."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:19
msgid "Returns the custom status text."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:25
msgid "The custom activity's name."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.activity.CustomActivity:31
msgid "The emoji to pass to the activity, if any."
msgstr ""

#: ../../../discord/activity.py:docstring of discord.CustomActivity.type:3
msgid "It always returns :attr:`ActivityType.custom`."
msgstr ""

#: ../../api.rst:4192
msgid "Permissions"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:1
msgid "Wraps up the Discord permission value."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:3
msgid "The properties provided are two way. You can set and retrieve individual bits using the properties as if they were regular bools. This allows you to edit permissions."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:7
msgid "You can now use keyword arguments to initialize :class:`Permissions` similar to :meth:`update`."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:15
msgid "Checks if two permissions are equal."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:18
msgid "Checks if two permissions are not equal."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:21
msgid "Checks if a permission is a subset of another permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:24
msgid "Checks if a permission is a superset of another permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:27
msgid "Checks if a permission is a strict subset of another permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:30
msgid "Checks if a permission is a strict superset of another permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:33
msgid "Return the permission's hash."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:36
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:22
msgid "Returns an iterator of ``(perm, value)`` pairs. This allows it to be, for example, constructed as a dict or a list of pairs. Note that aliases are not shown."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions:42
msgid "The raw value. This value is a bit array field of a 53-bit integer representing the currently available permissions. You should query permissions via the properties rather than using this raw value."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.is_subset:1
msgid "Returns ``True`` if self has the same or fewer permissions as other."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.is_superset:1
msgid "Returns ``True`` if self has the same or more permissions as other."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.is_strict_subset:1
msgid "Returns ``True`` if the permissions on other are a strict subset of those on self."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.is_strict_superset:1
msgid "Returns ``True`` if the permissions on other are a strict superset of those on self."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.none:1
msgid "A factory method that creates a :class:`Permissions` with all permissions set to ``False``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all:1
msgid "A factory method that creates a :class:`Permissions` with all permissions set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:1
msgid "A :class:`Permissions` with all channel-specific permissions set to ``True`` and the guild-specific ones set to ``False``. The guild-specific permissions are currently:"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:5
msgid ":attr:`manage_emojis`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:6
msgid ":attr:`view_audit_log`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:7
msgid ":attr:`view_guild_insights`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:8
msgid ":attr:`manage_guild`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:9
msgid ":attr:`change_nickname`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:10
msgid ":attr:`manage_nicknames`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:11
msgid ":attr:`kick_members`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:12
msgid ":attr:`ban_members`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:13
msgid ":attr:`administrator`"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:15
msgid "Added :attr:`stream`, :attr:`priority_speaker` and :attr:`use_slash_commands` permissions."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.all_channel:18
msgid "Added :attr:`create_public_threads`, :attr:`create_private_threads`, :attr:`manage_threads`, :attr:`use_external_stickers`, :attr:`send_messages_in_threads` and :attr:`request_to_speak` permissions."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.general:1
msgid "A factory method that creates a :class:`Permissions` with all \"General\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.general:4
msgid "Permission :attr:`read_messages` is now included in the general permissions, but permissions :attr:`administrator`, :attr:`create_instant_invite`, :attr:`kick_members`, :attr:`ban_members`, :attr:`change_nickname` and :attr:`manage_nicknames` are no longer part of the general permissions."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.membership:1
msgid "A factory method that creates a :class:`Permissions` with all \"Membership\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.text:1
msgid "A factory method that creates a :class:`Permissions` with all \"Text\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.text:4
msgid "Permission :attr:`read_messages` is no longer part of the text permissions. Added :attr:`use_slash_commands` permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.text:8
msgid "Added :attr:`create_public_threads`, :attr:`create_private_threads`, :attr:`manage_threads`, :attr:`send_messages_in_threads` and :attr:`use_external_stickers` permissions."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.voice:1
msgid "A factory method that creates a :class:`Permissions` with all \"Voice\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.stage:1
msgid "A factory method that creates a :class:`Permissions` with all \"Stage Channel\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.stage_moderator:1
msgid "A factory method that creates a :class:`Permissions` with all \"Stage Moderator\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.advanced:1
msgid "A factory method that creates a :class:`Permissions` with all \"Advanced\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.update:1
msgid "Bulk updates this permission object."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.update:3
#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.update:3
msgid "Allows you to set multiple attributes by using keyword arguments. The names must be equivalent to the properties listed. Extraneous key/value pairs will be silently ignored."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.Permissions.update:7
msgid "A list of key/value pairs to bulk update permissions with."
msgstr ""

#: ../../docstring of discord.Permissions.create_instant_invite:1
msgid "Returns ``True`` if the user can create instant invites."
msgstr ""

#: ../../docstring of discord.Permissions.kick_members:1
msgid "Returns ``True`` if the user can kick users from the guild."
msgstr ""

#: ../../docstring of discord.Permissions.ban_members:1
msgid "Returns ``True`` if a user can ban users from the guild."
msgstr ""

#: ../../docstring of discord.Permissions.administrator:1
msgid "Returns ``True`` if a user is an administrator. This role overrides all other permissions."
msgstr ""

#: ../../docstring of discord.Permissions.administrator:3
msgid "This also bypasses all channel-specific overrides."
msgstr ""

#: ../../docstring of discord.Permissions.manage_channels:1
msgid "Returns ``True`` if a user can edit, delete, or create channels in the guild."
msgstr ""

#: ../../docstring of discord.Permissions.manage_channels:3
msgid "This also corresponds to the \"Manage Channel\" channel-specific override."
msgstr ""

#: ../../docstring of discord.Permissions.manage_guild:1
msgid "Returns ``True`` if a user can edit guild properties."
msgstr ""

#: ../../docstring of discord.Permissions.add_reactions:1
msgid "Returns ``True`` if a user can add reactions to messages."
msgstr ""

#: ../../docstring of discord.Permissions.view_audit_log:1
msgid "Returns ``True`` if a user can view the guild's audit log."
msgstr ""

#: ../../docstring of discord.Permissions.priority_speaker:1
msgid "Returns ``True`` if a user can be more easily heard while talking."
msgstr ""

#: ../../docstring of discord.Permissions.stream:1
msgid "Returns ``True`` if a user can stream in a voice channel."
msgstr ""

#: ../../docstring of discord.Permissions.read_messages:1
msgid "Returns ``True`` if a user can read messages from all or specific text channels."
msgstr ""

#: ../../docstring of discord.Permissions.view_channel:1
msgid "An alias for :attr:`read_messages`."
msgstr ""

#: ../../docstring of discord.Permissions.send_messages:1
msgid "Returns ``True`` if a user can send messages from all or specific text channels."
msgstr ""

#: ../../docstring of discord.Permissions.send_tts_messages:1
msgid "Returns ``True`` if a user can send TTS messages from all or specific text channels."
msgstr ""

#: ../../docstring of discord.Permissions.manage_messages:1
msgid "Returns ``True`` if a user can delete or pin messages in a text channel."
msgstr ""

#: ../../docstring of discord.Permissions.manage_messages:5
msgid "Note that there are currently no ways to edit other people's messages."
msgstr ""

#: ../../docstring of discord.Permissions.embed_links:1
msgid "Returns ``True`` if a user's messages will automatically be embedded by Discord."
msgstr ""

#: ../../docstring of discord.Permissions.attach_files:1
msgid "Returns ``True`` if a user can send files in their messages."
msgstr ""

#: ../../docstring of discord.Permissions.read_message_history:1
msgid "Returns ``True`` if a user can read a text channel's previous messages."
msgstr ""

#: ../../docstring of discord.Permissions.mention_everyone:1
msgid "Returns ``True`` if a user's @everyone or @here will mention everyone in the text channel."
msgstr ""

#: ../../docstring of discord.Permissions.external_emojis:1
msgid "Returns ``True`` if a user can use emojis from other guilds."
msgstr ""

#: ../../docstring of discord.Permissions.use_external_emojis:1
msgid "An alias for :attr:`external_emojis`."
msgstr ""

#: ../../docstring of discord.Permissions.view_guild_insights:1
msgid "Returns ``True`` if a user can view the guild's insights."
msgstr ""

#: ../../docstring of discord.Permissions.connect:1
msgid "Returns ``True`` if a user can connect to a voice channel."
msgstr ""

#: ../../docstring of discord.Permissions.speak:1
msgid "Returns ``True`` if a user can speak in a voice channel."
msgstr ""

#: ../../docstring of discord.Permissions.mute_members:1
msgid "Returns ``True`` if a user can mute other users."
msgstr ""

#: ../../docstring of discord.Permissions.deafen_members:1
msgid "Returns ``True`` if a user can deafen other users."
msgstr ""

#: ../../docstring of discord.Permissions.move_members:1
msgid "Returns ``True`` if a user can move users between other voice channels."
msgstr ""

#: ../../docstring of discord.Permissions.use_voice_activation:1
msgid "Returns ``True`` if a user can use voice activation in voice channels."
msgstr ""

#: ../../docstring of discord.Permissions.change_nickname:1
msgid "Returns ``True`` if a user can change their nickname in the guild."
msgstr ""

#: ../../docstring of discord.Permissions.manage_nicknames:1
msgid "Returns ``True`` if a user can change other user's nickname in the guild."
msgstr ""

#: ../../docstring of discord.Permissions.manage_roles:1
msgid "Returns ``True`` if a user can create or edit roles less than their role's position."
msgstr ""

#: ../../docstring of discord.Permissions.manage_roles:3
msgid "This also corresponds to the \"Manage Permissions\" channel-specific override."
msgstr ""

#: ../../docstring of discord.Permissions.manage_permissions:1
msgid "An alias for :attr:`manage_roles`."
msgstr ""

#: ../../docstring of discord.Permissions.manage_webhooks:1
msgid "Returns ``True`` if a user can create, edit, or delete webhooks."
msgstr ""

#: ../../docstring of discord.Permissions.manage_emojis:1
msgid "Returns ``True`` if a user can create, edit, or delete emojis."
msgstr ""

#: ../../docstring of discord.Permissions.manage_emojis_and_stickers:1
msgid "An alias for :attr:`manage_emojis`."
msgstr ""

#: ../../docstring of discord.Permissions.use_slash_commands:1
msgid "Returns ``True`` if a user can use slash commands."
msgstr ""

#: ../../docstring of discord.Permissions.request_to_speak:1
msgid "Returns ``True`` if a user can request to speak in a stage channel."
msgstr ""

#: ../../docstring of discord.Permissions.manage_events:1
msgid "Returns ``True`` if a user can manage guild events."
msgstr ""

#: ../../docstring of discord.Permissions.manage_threads:1
msgid "Returns ``True`` if a user can manage threads."
msgstr ""

#: ../../docstring of discord.Permissions.create_public_threads:1
msgid "Returns ``True`` if a user can create public threads."
msgstr ""

#: ../../docstring of discord.Permissions.create_private_threads:1
msgid "Returns ``True`` if a user can create private threads."
msgstr ""

#: ../../docstring of discord.Permissions.external_stickers:1
msgid "Returns ``True`` if a user can use stickers from other guilds."
msgstr ""

#: ../../docstring of discord.Permissions.use_external_stickers:1
msgid "An alias for :attr:`external_stickers`."
msgstr ""

#: ../../docstring of discord.Permissions.send_messages_in_threads:1
msgid "Returns ``True`` if a user can send messages in threads."
msgstr ""

#: ../../docstring of discord.Permissions.start_embedded_activities:1
msgid "Returns ``True`` if a user can launch activities in a voice channel"
msgstr ""

#: ../../api.rst:4200
msgid "PermissionOverwrite"
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:1
msgid "A type that is used to represent a channel specific permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:3
msgid "Unlike a regular :class:`Permissions`\\, the default value of a permission is equivalent to ``None`` and not ``False``. Setting a value to ``False`` is **explicitly** denying that permission, while setting a value to ``True`` is **explicitly** allowing that permission."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:9
msgid "The values supported by this are the same as :class:`Permissions` with the added possibility of it being set to ``None``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:16
msgid "Checks if two overwrites are equal."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:19
msgid "Checks if two overwrites are not equal."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite:26
msgid "Set the value of permissions by their name."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.pair:1
msgid "Tuple[:class:`Permissions`, :class:`Permissions`]: Returns the (allow, deny) pair from this overwrite."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.from_pair:1
msgid "Creates an overwrite from an allow/deny pair of :class:`Permissions`."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:1
msgid "Checks if the permission overwrite is currently empty."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:3
msgid "An empty permission overwrite is one that has no overwrites set to ``True`` or ``False``."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.is_empty:6
msgid "Indicates if the overwrite is empty."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.update:1
msgid "Bulk updates this permission overwrite object."
msgstr ""

#: ../../../discord/permissions.py:docstring of discord.permissions.PermissionOverwrite.update:7
msgid "A list of key/value pairs to bulk update with."
msgstr ""

#: ../../api.rst:4208
msgid "ShardInfo"
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:1
msgid "A class that gives information and control over a specific shard."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:3
msgid "You can retrieve this object via :meth:`AutoShardedClient.get_shard` or :attr:`AutoShardedClient.shards`."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:10
msgid "The shard ID for this shard."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo:16
msgid "The shard count for this cluster. If this is ``None`` then the bot has not started yet."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.is_closed:1
msgid ":class:`bool`: Whether the shard connection is currently closed."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.disconnect:3
msgid "Disconnects a shard. When this is called, the shard connection will no longer be open."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.disconnect:6
msgid "If the shard is already disconnected this does nothing."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.reconnect:3
msgid "Disconnects and then connects the shard again."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.shard.ShardInfo.connect:3
msgid "Connects a shard. If the shard is already connected this does nothing."
msgstr ""

#: ../../../discord/shard.py:docstring of discord.ShardInfo.latency:1
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds for this shard."
msgstr ""

#: ../../api.rst:4216
msgid "SystemChannelFlags"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:1
msgid "Wraps up a Discord system channel flag value."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:3
msgid "Similar to :class:`Permissions`\\, the properties provided are two way. You can set and retrieve individual bits using the properties as if they were regular bools. This allows you to edit the system flags easily."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.SystemChannelFlags:28
#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:25
#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:24
msgid "The raw value. This value is a bit array field of a 53-bit integer representing the currently available flags. You should query flags via the properties rather than using this raw value."
msgstr ""

#: ../../docstring of discord.SystemChannelFlags.join_notifications:1
msgid "Returns ``True`` if the system channel is used for member join notifications."
msgstr ""

#: ../../docstring of discord.SystemChannelFlags.premium_subscriptions:1
msgid "Returns ``True`` if the system channel is used for \"Nitro boosting\" notifications."
msgstr ""

#: ../../docstring of discord.SystemChannelFlags.guild_reminder_notifications:1
msgid "Returns ``True`` if the system channel is used for server setup helpful tips notifications."
msgstr ""

#: ../../api.rst:4224
msgid "MessageFlags"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:1
msgid "Wraps up a Discord Message flag value."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.MessageFlags:3
msgid "See :class:`SystemChannelFlags`."
msgstr ""

#: ../../docstring of discord.MessageFlags.crossposted:1
msgid "Returns ``True`` if the message is the original crossposted message."
msgstr ""

#: ../../docstring of discord.MessageFlags.is_crossposted:1
msgid "Returns ``True`` if the message was crossposted from another channel."
msgstr ""

#: ../../docstring of discord.MessageFlags.suppress_embeds:1
msgid "Returns ``True`` if the message's embeds have been suppressed."
msgstr ""

#: ../../docstring of discord.MessageFlags.source_message_deleted:1
msgid "Returns ``True`` if the source message for this crosspost has been deleted."
msgstr ""

#: ../../docstring of discord.MessageFlags.urgent:1
msgid "Returns ``True`` if the source message is an urgent message."
msgstr ""

#: ../../docstring of discord.MessageFlags.urgent:3
msgid "An urgent message is one sent by Discord Trust and Safety."
msgstr ""

#: ../../docstring of discord.MessageFlags.has_thread:1
msgid "Returns ``True`` if the source message is associated with a thread."
msgstr ""

#: ../../docstring of discord.MessageFlags.ephemeral:1
msgid "Returns ``True`` if the source message is ephemeral."
msgstr ""

#: ../../api.rst:4232
msgid "PublicUserFlags"
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:1
msgid "Wraps up the Discord User Public flags."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:7
msgid "Checks if two PublicUserFlags are equal."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags:10
msgid "Checks if two PublicUserFlags are not equal."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.staff:1
msgid "Returns ``True`` if the user is a Discord Employee."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.partner:1
msgid "Returns ``True`` if the user is a Discord Partner."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.hypesquad:1
msgid "Returns ``True`` if the user is a HypeSquad Events member."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.bug_hunter:1
msgid "Returns ``True`` if the user is a Bug Hunter"
msgstr ""

#: ../../docstring of discord.PublicUserFlags.hypesquad_bravery:1
msgid "Returns ``True`` if the user is a HypeSquad Bravery member."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.hypesquad_brilliance:1
msgid "Returns ``True`` if the user is a HypeSquad Brilliance member."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.hypesquad_balance:1
msgid "Returns ``True`` if the user is a HypeSquad Balance member."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.early_supporter:1
msgid "Returns ``True`` if the user is an Early Supporter."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.team_user:1
msgid "Returns ``True`` if the user is a Team User."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.system:1
msgid "Returns ``True`` if the user is a system user (i.e. represents Discord officially)."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.bug_hunter_level_2:1
msgid "Returns ``True`` if the user is a Bug Hunter Level 2"
msgstr ""

#: ../../docstring of discord.PublicUserFlags.verified_bot:1
msgid "Returns ``True`` if the user is a Verified Bot."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.verified_bot_developer:1
msgid "Returns ``True`` if the user is an Early Verified Bot Developer."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.early_verified_bot_developer:1
msgid "An alias for :attr:`verified_bot_developer`."
msgstr ""

#: ../../docstring of discord.PublicUserFlags.discord_certified_moderator:1
msgid "Returns ``True`` if the user is a Discord Certified Moderator."
msgstr ""

#: ../../../discord/flags.py:docstring of discord.flags.PublicUserFlags.all:1
msgid "List[:class:`UserFlags`]: Returns all public flags the user has."
msgstr ""

#: ../../api.rst:4242
msgid "Bot UI Kit"
msgstr ""

#: ../../api.rst:4244
msgid "The library has helpers to help create component-based UIs."
msgstr ""

#: ../../api.rst:4247
msgid "View"
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:1
msgid "Represents a UI view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:3
msgid "This object must be inherited to create a UI within Discord."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:7
msgid "Timeout in seconds from last interaction with the UI before no longer accepting input. If ``None`` then there is no timeout."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:13
msgid "Timeout from last interaction with the UI before no longer accepting input. If ``None`` then there is no timeout."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:16
msgid "Optional[:class:`float`]"
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:20
msgid "The list of children attached to this view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View:22
msgid "List[:class:`Item`]"
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:1
msgid "Converts a message's components into a :class:`View`."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:3
msgid "The :attr:`.Message.components` of a message are read-only and separate types from those in the ``discord.ui`` namespace. In order to modify and edit message components they must be converted into a :class:`View` first."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:8
msgid "The message with components to convert into a view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:10
msgid "The timeout of the converted view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:13
msgid "The converted view. This always returns a :class:`View` and not one of its subclasses."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.from_message:15
msgid ":class:`View`"
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:1
msgid "Adds an item to the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:3
msgid "The item to add to the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:6
msgid "An :class:`Item` was not passed."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.add_item:7
msgid "Maximum number of children has been exceeded (25)     or the row the item is trying to be added to is full."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:1
msgid "Removes an item from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.remove_item:3
msgid "The item to remove from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.clear_items:1
msgid "Removes all items from the view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:3
msgid "A callback that is called when an interaction happens within the view that checks whether the view should process item callbacks for the interaction."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:6
msgid "This is useful to override if, for example, you want to ensure that the interaction author is a given user."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:9
msgid "The default implementation of this returns ``True``."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:13
msgid "If an exception occurs within the body then the check is considered a failure and :meth:`on_error` is called."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:16
msgid "The interaction that occurred."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.interaction_check:19
msgid "Whether the view children's callbacks should be called."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_timeout:3
msgid "A callback that is called when a view's timeout elapses without being explicitly stopped."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:3
msgid "A callback that is called when an item's callback or :meth:`interaction_check` fails with an error."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:6
msgid "The default implementation prints the traceback to stderr."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:8
msgid "The exception that was raised."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:10
msgid "The item that failed the dispatch."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.on_error:12
msgid "The interaction that led to the failure."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.stop:1
msgid "Stops listening to interaction events from this view."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.stop:3
msgid "This operation cannot be undone."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_finished:1
msgid ":class:`bool`: Whether the view has finished interacting."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_dispatching:1
msgid ":class:`bool`: Whether the view has been added for dispatching purposes."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_persistent:1
msgid ":class:`bool`: Whether the view is set up as persistent."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.is_persistent:3
msgid "A persistent view has all their components with a set ``custom_id`` and a :attr:`timeout` set to ``None``."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:1
msgid "Waits until the view has finished interacting."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:3
msgid "A view is considered finished when :meth:`stop` is called or it times out."
msgstr ""

#: ../../../discord/ui/view.py:docstring of discord.ui.view.View.wait:6
msgid "If ``True``, then the view timed out. If ``False`` then the view finished normally."
msgstr ""

#: ../../api.rst:4255
msgid "Item"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:1
msgid "Represents the base UI item that all UI components inherit from."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:3
msgid "The current UI items supported are:"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:5
msgid ":class:`discord.ui.Button`"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item:6
msgid ":class:`discord.ui.Select`"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:1
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:1
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:1
msgid "The underlying view for this item."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.Item.view:3
#: ../../../discord/ui/button.py:docstring of discord.ui.Button.view:3
#: ../../../discord/ui/select.py:docstring of discord.ui.Select.view:3
msgid "Optional[:class:`View`]"
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:3
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:3
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:3
msgid "The callback associated with this UI item."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:5
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:5
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:5
msgid "This can be overriden by subclasses."
msgstr ""

#: ../../../discord/ui/item.py:docstring of discord.ui.item.Item.callback:7
#: ../../../discord/ui/button.py:docstring of discord.ui.item.Item.callback:7
#: ../../../discord/ui/select.py:docstring of discord.ui.item.Item.callback:7
msgid "The interaction that triggered this UI item."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:1
msgid "Represents a UI button."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.Button:18
#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:27
msgid "The relative row this button belongs to. A Discord component can only have 5 rows. By default, items are arranged automatically into those 5 rows. If you'd like to control the relative positioning of the row then passing an index is advised. For example, row=1 will show up before row=2. Defaults to ``None``, which is automatic ordering. The row number must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.style:3
msgid ":class:`discord.ButtonStyle`"
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:1
msgid "The ID of the button that gets received during an interaction."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.custom_id:3
msgid "If this button is for a URL, it does not have a custom ID."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.label:1
msgid "The label of the button, if available."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.Button.emoji:3
msgid "Optional[:class:`.PartialEmoji`]"
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:1
msgid "A decorator that attaches a button to a component."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:3
msgid "The function being decorated should have three parameters, ``self`` representing the :class:`discord.ui.View`, the :class:`discord.ui.Button` being pressed and the :class:`discord.Interaction` you receive."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:9
msgid "Buttons with a URL cannot be created with this function. Consider creating a :class:`Button` manually instead. This is because buttons with a URL do not have a callback associated with them since Discord does not do any processing with it."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:17
msgid "The ID of the button that gets received during an interaction. It is recommended not to set this parameter to prevent conflicts."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:20
msgid "The style of the button. Defaults to :attr:`.ButtonStyle.grey`."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:22
msgid "Whether the button is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../../discord/ui/button.py:docstring of discord.ui.button.button:24
msgid "The emoji of the button. This can be in string form or a :class:`.PartialEmoji` or a full :class:`.Emoji`."
msgstr ""

#: ../../api.rst:4274
msgid "Select"
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:1
msgid "Represents a UI select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:3
msgid "This is usually represented as a drop down menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:5
msgid "In order to get the selected items that the user has chosen, use :attr:`Select.values`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:9
msgid "The ID of the select menu that gets received during an interaction. If not given then one is generated for you."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select:24
#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:15
msgid "The relative row this select menu belongs to. A Discord component can only have 5 rows. By default, items are arranged automatically into those 5 rows. If you'd like to control the relative positioning of the row then passing an index is advised. For example, row=1 will show up before row=2. Defaults to ``None``, which is automatic ordering. The row number must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.min_values:1
msgid "The minimum number of items that must be chosen for this select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.max_values:1
msgid "The maximum number of items that must be chosen for this select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.options:3
msgid "List[:class:`discord.SelectOption`]"
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:1
msgid "Adds an option to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:3
msgid "To append a pre-existing :class:`discord.SelectOption` use the :meth:`append_option` method instead."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:9
msgid "The value of the option. This is not displayed to users. If not given, defaults to the label. Can only be up to 100 characters."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:15
msgid "The emoji of the option, if available. This can either be a string representing the custom or unicode emoji or an instance of :class:`.PartialEmoji` or :class:`.Emoji`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.add_option:21
#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:6
msgid "The number of options exceeds 25."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:1
msgid "Appends an option to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.Select.append_option:3
msgid "The option to append to the select menu."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.Select.values:1
msgid "A list of values that have been selected by the user."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:1
msgid "A decorator that attaches a select menu to a component."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:3
msgid "The function being decorated should have three parameters, ``self`` representing the :class:`discord.ui.View`, the :class:`discord.ui.Select` being pressed and the :class:`discord.Interaction` you receive."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:7
msgid "In order to get the selected items that the user has chosen within the callback use :attr:`Select.values`."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:12
msgid "The ID of the select menu that gets received during an interaction. It is recommended not to set this parameter to prevent conflicts."
msgstr ""

#: ../../../discord/ui/select.py:docstring of discord.ui.select.select:29
msgid "Whether the select is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../api.rst:4286
msgid "Exceptions"
msgstr ""

#: ../../api.rst:4288
msgid "The following exceptions are thrown by the library."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.DiscordException:1
msgid "Base exception class for discord.py"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.DiscordException:3
msgid "Ideally speaking, this could be caught to handle any exceptions raised from this library."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ClientException:1
msgid "Exception that's raised when an operation in the :class:`Client` fails."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ClientException:3
msgid "These are usually for exceptions that happened due to user input."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.LoginFailure:1
msgid "Exception that's raised when the :meth:`Client.login` function fails to log you in from improper credentials or some other misc. failure."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.NoMoreItems:1
msgid "Exception that is raised when an async iteration operation has no more items."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:1
msgid "Exception that's raised when an HTTP request operation fails."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:5
msgid "The response of the failed HTTP request. This is an instance of :class:`aiohttp.ClientResponse`. In some cases this could also be a :class:`requests.Response`."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:9
msgid ":class:`aiohttp.ClientResponse`"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:13
msgid "The text of the error. Could be an empty string."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:19
msgid "The status code of the HTTP request."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.HTTPException:25
msgid "The Discord specific error code for the failure."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.Forbidden:1
msgid "Exception that's raised for when status code 403 occurs."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.Forbidden:3
#: ../../../discord/errors.py:docstring of discord.errors.NotFound:3
msgid "Subclass of :exc:`HTTPException`"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.NotFound:1
msgid "Exception that's raised for when status code 404 occurs."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.DiscordServerError:1
msgid "Exception that's raised for when a 500 range status code occurs."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.DiscordServerError:3
msgid "Subclass of :exc:`HTTPException`."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InvalidData:1
msgid "Exception that's raised when the library encounters unknown or invalid data from Discord."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InvalidArgument:1
msgid "Exception that's raised when an argument to a function is invalid some way (e.g. wrong value or wrong type)."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InvalidArgument:4
msgid "This could be considered the analogous of ``ValueError`` and ``TypeError`` except inherited from :exc:`ClientException` and thus :exc:`DiscordException`."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.GatewayNotFound:1
msgid "An exception that is raised when the gateway for Discord could not be found"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:1
msgid "Exception that's raised when the gateway connection is closed for reasons that could not be handled internally."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:6
msgid "The close code of the websocket."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:12
msgid "The reason provided for the closure."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.ConnectionClosed:18
#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:12
msgid "The shard ID that got closed if applicable."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:1
msgid "Exception that's raised when the gateway is requesting privileged intents but they're not ticked in the developer page yet."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:4
msgid "Go to https://discord.com/developers/applications/ and enable the intents that are required. Currently these are as follows:"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:7
msgid ":attr:`Intents.members`"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.PrivilegedIntentsRequired:8
msgid ":attr:`Intents.presences`"
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InteractionResponded:1
msgid "Exception that's raised when sending another interaction response using :class:`InteractionResponse` when one has already been done before."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InteractionResponded:4
msgid "An interaction can only respond once."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InteractionResponded:10
msgid "The interaction that's already been responded to."
msgstr ""

#: ../../../discord/errors.py:docstring of discord.errors.InteractionResponded:12
msgid ":class:`Interaction`"
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.OpusError:1
msgid "An exception that is thrown for libopus related errors."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.OpusError:5
msgid "The error code returned."
msgstr ""

#: ../../../discord/opus.py:docstring of discord.opus.OpusNotLoaded:1
msgid "An exception that is thrown for when libopus is not loaded."
msgstr ""

#: ../../api.rst:4324
msgid "Exception Hierarchy"
msgstr ""

#: ../../api.rst:4341
msgid ":exc:`Exception`"
msgstr ""

#: ../../api.rst:4341
msgid ":exc:`DiscordException`"
msgstr ""

#: ../../api.rst:4335
msgid ":exc:`ClientException`"
msgstr ""

#: ../../api.rst:4331
msgid ":exc:`InvalidData`"
msgstr ""

#: ../../api.rst:4332
msgid ":exc:`InvalidArgument`"
msgstr ""

#: ../../api.rst:4333
msgid ":exc:`LoginFailure`"
msgstr ""

#: ../../api.rst:4334
msgid ":exc:`ConnectionClosed`"
msgstr ""

#: ../../api.rst:4335
msgid ":exc:`PrivilegedIntentsRequired`"
msgstr ""

#: ../../api.rst:4336
msgid ":exc:`InteractionResponded`"
msgstr ""

#: ../../api.rst:4337
msgid ":exc:`NoMoreItems`"
msgstr ""

#: ../../api.rst:4338
msgid ":exc:`GatewayNotFound`"
msgstr ""

#: ../../api.rst:4341
msgid ":exc:`HTTPException`"
msgstr ""

#: ../../api.rst:4340
msgid ":exc:`Forbidden`"
msgstr ""

#: ../../api.rst:4341
msgid ":exc:`NotFound`"
msgstr ""

#: ../../api.rst:4342
msgid ":exc:`DiscordServerError`"
msgstr ""

